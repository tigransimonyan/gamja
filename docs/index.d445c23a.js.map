{"mappings":"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","sources":["node_modules/preact/src/constants.js","node_modules/preact/src/util.js","node_modules/preact/src/options.js","node_modules/preact/src/create-element.js","node_modules/preact/src/component.js","node_modules/preact/src/diff/children.js","node_modules/preact/src/diff/props.js","node_modules/preact/src/diff/index.js","node_modules/preact/src/render.js","node_modules/preact/src/diff/catch-error.js","node_modules/htm/dist/htm.module.js","node_modules/linkifyjs/dist/linkify.module.js","lib/index.js","lib/irc.js","lib/client.js","lib/linkify.js","lib/ansi.js","state.js","store.js","components/membership.js","components/buffer.js","components/buffer-list.js","components/buffer-header.js","components/member-list.js","components/connect-form.js","components/join-form.js","keybindings.js","commands.js","components/help.js","components/network-form.js","components/composer.js","components/scroll-manager.js","components/dialog.js","components/app.js","main.js"],"sourcesContent":["export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","import { EMPTY_ARR } from \"./constants\";\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/**\n * Asynchronously schedule a callback\n * @type {(cb: () => void) => void}\n */\n/* istanbul ignore next */\n// Note the following line isn't tree-shaken by rollup cuz of rollup/rollup#2566\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet queue;\n\twhile ((process._rerenderCount = rerenderQueue.length)) {\n\t\tqueue = rerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\n\t\trerenderQueue = [];\n\t\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t\t// process() calls from getting scheduled while `queue` is still being consumed.\n\t\tqueue.some(c => {\n\t\t\tif (c._dirty) renderComponent(c);\n\t\t});\n\t}\n}\nprocess._rerenderCount = 0;\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (childVNode == null || typeof childVNode == 'boolean') {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tnull,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldParentVNode, i + 1);\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\tlet c = childVNode._children;\n\tlet tmp = 0;\n\tfor (; c && tmp < c.length; tmp++) {\n\t\tlet vnode = c[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tvnode,\n\t\t\t\t\tvnode,\n\t\t\t\t\tc,\n\t\t\t\t\tvnode._dom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 2\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink[H:h]/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (\n\t\t\tvalue != null &&\n\t\t\t(value !== false || (name[0] === 'a' && name[1] === 'r'))\n\t\t) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tthis._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\tthis._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) c._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc.state = c._nextState;\n\n\t\t\tif ((tmp = options._render)) tmp(newVNode);\n\n\t\t\tc._dirty = false;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t(child === dom ||\n\t\t\t\t\t(nodeType ? child.localName == nodeType : child.nodeType == 3))\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value || (nodeType === 'progress' && !i))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) applyRef(r, null, parentVNode);\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(r[i], parentVNode, typeof vnode.type != 'function');\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) removeNode(vnode._dom);\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n */\nexport function _catchError(error, vnode) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error);\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","var n=function(t,s,r,e){var u;s[0]=0;for(var h=1;h<s.length;h++){var p=s[h++],a=s[h]?(s[0]|=p?1:2,r[s[h++]]):s[++h];3===p?e[0]=a:4===p?e[1]=Object.assign(e[1]||{},a):5===p?(e[1]=e[1]||{})[s[++h]]=a:6===p?e[1][s[++h]]+=a+\"\":p?(u=t.apply(a,n(t,a,r,[\"\",null])),e.push(u),a[0]?s[0]|=2:(s[h-2]=0,s[h]=u)):e.push(a)}return e},t=new Map;export default function(s){var r=t.get(this);return r||(r=new Map,t.set(this,r)),(r=n(this,r.get(s)||(r.set(s,r=function(n){for(var t,s,r=1,e=\"\",u=\"\",h=[0],p=function(n){1===r&&(n||(e=e.replace(/^\\s*\\n\\s*|\\s*\\n\\s*$/g,\"\")))?h.push(0,n,e):3===r&&(n||e)?(h.push(3,n,e),r=2):2===r&&\"...\"===e&&n?h.push(4,n,0):2===r&&e&&!n?h.push(5,0,!0,e):r>=5&&((e||!n&&5===r)&&(h.push(r,0,e,s),r=6),n&&(h.push(r,n,0,s),r=6)),e=\"\"},a=0;a<n.length;a++){a&&(1===r&&p(),p(a));for(var l=0;l<n[a].length;l++)t=n[a][l],1===r?\"<\"===t?(p(),h=[h],r=3):e+=t:4===r?\"--\"===e&&\">\"===t?(r=1,e=\"\"):e=t+e[0]:u?t===u?u=\"\":e+=t:'\"'===t||\"'\"===t?u=t:\">\"===t?(p(),r=1):r&&(\"=\"===t?(r=5,s=e,e=\"\"):\"/\"===t&&(r<5||\">\"===n[a][l+1])?(p(),3===r&&(h=h[0]),r=h,(h=h[0]).push(2,0,r),r=0):\" \"===t||\"\\t\"===t||\"\\n\"===t||\"\\r\"===t?(p(),r=2):e+=t),3===r&&\"!--\"===e&&(r=4,h=h[0])}return p(),h}(s)),r),arguments,[])).length>1?r:r[0]}\n","/**\n * Finite State Machine generation utilities\n */\n\n/**\n * Define a basic state machine state. j is the list of character transitions,\n * jr is the list of regex-match transitions, jd is the default state to\n * transition to t is the accepting token type, if any. If this is the terminal\n * state, then it does not emit a token.\n * @param {string|class} token to emit\n */\nfunction State(token) {\n  this.j = {}; // IMPLEMENTATION 1\n  // this.j = []; // IMPLEMENTATION 2\n\n  this.jr = [];\n  this.jd = null;\n  this.t = token;\n}\n/**\n * Take the transition from this state to the next one on the given input.\n * If this state does not exist deterministically, will create it.\n *\n * @param {string} input character or token to transition on\n * @param {string|class} [token] token or multi-token to emit when reaching\n * this state\n */\n\nState.prototype = {\n  /**\n   * @param {State} state\n   */\n  accepts: function accepts() {\n    return !!this.t;\n  },\n\n  /**\n   * Short for \"take transition\", this is a method for building/working with\n   * state machines.\n   *\n   * If a state already exists for the given input, returns it.\n   *\n   * If a token is specified, that state will emit that token when reached by\n   * the linkify engine.\n   *\n   * If no state exists, it will be initialized with some default transitions\n   * that resemble existing default transitions.\n   *\n   * If a state is given for the second argument, that state will be\n   * transitioned to on the given input regardless of what that input\n   * previously did.\n   *\n   * @param {string} input character or token to transition on\n   * @param {Token|State} tokenOrState transition to a matching state\n   * @returns State taken after the given input\n   */\n  tt: function tt(input, tokenOrState) {\n    if (tokenOrState && tokenOrState.j) {\n      // State, default a basic transition\n      this.j[input] = tokenOrState;\n      return tokenOrState;\n    } // See if there's a direct state transition (not regex or default)\n\n\n    var token = tokenOrState;\n    var nextState = this.j[input];\n\n    if (nextState) {\n      if (token) {\n        nextState.t = token;\n      } // overrwites previous token\n\n\n      return nextState;\n    } // Create a new state for this input\n\n\n    nextState = makeState(); // Take the transition using the usual default mechanisms\n\n    var templateState = takeT(this, input);\n\n    if (templateState) {\n      // Some default state transition, make a prime state based on this one\n      Object.assign(nextState.j, templateState.j);\n      nextState.jr.append(templateState.jr);\n      nextState.jr = templateState.jd;\n      nextState.t = token || templateState.t;\n    } else {\n      nextState.t = token;\n    }\n\n    this.j[input] = nextState;\n    return nextState;\n  }\n};\n/**\n * Utility function to create state without using new keyword (reduced file size\n * when minified)\n */\n\nvar makeState = function makeState() {\n  return new State();\n};\n/**\n * Similar to previous except it is an accepting state that emits a token\n * @param {Token} token\n */\n\nvar makeAcceptingState = function makeAcceptingState(token) {\n  return new State(token);\n};\n/**\n * Create a transition from startState to nextState via the given character\n * @param {State} startState transition from thie starting state\n * @param {Token} input via this input character or other concrete token type\n * @param {State} nextState to this next state\n */\n\nvar makeT = function makeT(startState, input, nextState) {\n  // IMPLEMENTATION 1: Add to object (fast)\n  if (!startState.j[input]) {\n    startState.j[input] = nextState;\n  } // IMPLEMENTATION 2: Add to array (slower)\n  // startState.j.push([input, nextState]);\n\n};\n/**\n *\n * @param {State} startState stransition from this starting state\n * @param {RegExp} regex Regular expression to match on input\n * @param {State} nextState transition to this next state if there's are regex match\n */\n\nvar makeRegexT = function makeRegexT(startState, regex, nextState) {\n  startState.jr.push([regex, nextState]);\n};\n/**\n * Follow the transition from the given character to the next state\n * @param {State} state\n * @param {Token} input character or other concrete token type to transition\n * @returns {?State} the next state, if any\n */\n\nvar takeT = function takeT(state, input) {\n  // IMPLEMENTATION 1: Object key lookup (faster)\n  var nextState = state.j[input];\n\n  if (nextState) {\n    return nextState;\n  } // IMPLEMENTATION 2: List lookup (slower)\n  // Loop through all the state transitions and see if there's a match\n  // for (let i = 0; i < state.j.length; i++) {\n  //\tconst val = state.j[i][0];\n  //\tconst nextState = state.j[i][1];\n  // \tif (input === val) { return nextState; }\n  // }\n\n\n  for (var i = 0; i < state.jr.length; i++) {\n    var regex = state.jr[i][0];\n    var _nextState = state.jr[i][1];\n\n    if (regex.test(input)) {\n      return _nextState;\n    }\n  } // Nowhere left to jump! Return default, if any\n\n\n  return state.jd;\n};\n/**\n * Similar to makeT, but takes a list of characters that all transition to the\n * same nextState startState\n * @param {State} startState\n * @param {Array} chars\n * @param {State} nextState\n */\n\nvar makeMultiT = function makeMultiT(startState, chars, nextState) {\n  for (var i = 0; i < chars.length; i++) {\n    makeT(startState, chars[i], nextState);\n  }\n};\n/**\n * Set up a list of multiple transitions at once. transitions is a list of\n * tuples, where the first element is the transitions character and the second\n * is the state to transition to\n * @param {State} startState\n * @param {Array} transitions\n */\n\nvar makeBatchT = function makeBatchT(startState, transitions) {\n  for (var i = 0; i < transitions.length; i++) {\n    var input = transitions[i][0];\n    var nextState = transitions[i][1];\n    makeT(startState, input, nextState);\n  }\n};\n/**\n * For state machines that transition on characters only; given a non-empty\n * target string, generates states (if required) for each consecutive substring\n * of characters starting from the beginning of the string. The final state will\n * have a special value, as specified in options. All other \"in between\"\n * substrings will have a default end state.\n *\n * This turns the state machine into a Trie-like data structure (rather than a\n * intelligently-designed DFA).\n * @param {State} state\n * @param {string} str\n * @param {Token} endStateFactory\n * @param {Token} defaultStateFactory\n */\n\nvar makeChainT = function makeChainT(state, str, endState, defaultStateFactory) {\n  var i = 0,\n      len = str.length,\n      nextState; // Find the next state without a jump to the next character\n\n  while (i < len && (nextState = state.j[str[i]])) {\n    state = nextState;\n    i++;\n  }\n\n  if (i >= len) {\n    return [];\n  } // no new tokens were added\n\n\n  while (i < len - 1) {\n    nextState = defaultStateFactory();\n    makeT(state, str[i], nextState);\n    state = nextState;\n    i++;\n  }\n\n  makeT(state, str[len - 1], endState);\n};\n\n/******************************************************************************\n\tText Tokens\n\tTokens composed of strings\n******************************************************************************/\n// A valid web domain token\nvar DOMAIN = 'DOMAIN';\nvar LOCALHOST = 'LOCALHOST'; // special case of domain\n// Valid top-level domain (see tlds.js)\n\nvar TLD = 'TLD'; // Any sequence of digits 0-9\n\nvar NUM = 'NUM'; // A web URL protocol. Supported types include\n// - `http:`\n// - `https:`\n// - `ftp:`\n// - `ftps:`\n// - user-defined custom protocols\n\nvar PROTOCOL = 'PROTOCOL'; // Start of the email URI protocol\n\nvar MAILTO = 'MAILTO'; // mailto:\n// Any number of consecutive whitespace characters that are not newline\n\nvar WS = 'WS'; // New line (unix style)\n\nvar NL = 'NL'; // \\n\n// Opening/closing bracket classes\n\nvar OPENBRACE = 'OPENBRACE'; // {\n\nvar OPENBRACKET = 'OPENBRACKET'; // [\n\nvar OPENANGLEBRACKET = 'OPENANGLEBRACKET'; // <\n\nvar OPENPAREN = 'OPENPAREN'; // (\n\nvar CLOSEBRACE = 'CLOSEBRACE'; // }\n\nvar CLOSEBRACKET = 'CLOSEBRACKET'; // ]\n\nvar CLOSEANGLEBRACKET = 'CLOSEANGLEBRACKET'; // >\n\nvar CLOSEPAREN = 'CLOSEPAREN'; // )\n// Various symbols\n\nvar AMPERSAND = 'AMPERSAND'; // &\n\nvar APOSTROPHE = 'APOSTROPHE'; // '\n\nvar ASTERISK = 'ASTERISK'; // *\n\nvar AT = 'AT'; // @\n\nvar BACKSLASH = 'BACKSLASH'; // \\\n\nvar BACKTICK = 'BACKTICK'; // `\n\nvar CARET = 'CARET'; // ^\n\nvar COLON = 'COLON'; // :\n\nvar COMMA = 'COMMA'; // ,\n\nvar DOLLAR = 'DOLLAR'; // $\n\nvar DOT = 'DOT'; // .\n\nvar EQUALS = 'EQUALS'; // =\n\nvar EXCLAMATION = 'EXCLAMATION'; // !\n\nvar HYPHEN = 'HYPHEN'; // -\n\nvar PERCENT = 'PERCENT'; // %\n\nvar PIPE = 'PIPE'; // |\n\nvar PLUS = 'PLUS'; // +\n\nvar POUND = 'POUND'; // #\n\nvar QUERY = 'QUERY'; // ?\n\nvar QUOTE = 'QUOTE'; // \"\n\nvar SEMI = 'SEMI'; // ;\n\nvar SLASH = 'SLASH'; // /\n\nvar TILDE = 'TILDE'; // ~\n\nvar UNDERSCORE = 'UNDERSCORE'; // _\n// Default token - anything that is not one of the above\n\nvar SYM = 'SYM';\n\nvar text = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tDOMAIN: DOMAIN,\n\tLOCALHOST: LOCALHOST,\n\tTLD: TLD,\n\tNUM: NUM,\n\tPROTOCOL: PROTOCOL,\n\tMAILTO: MAILTO,\n\tWS: WS,\n\tNL: NL,\n\tOPENBRACE: OPENBRACE,\n\tOPENBRACKET: OPENBRACKET,\n\tOPENANGLEBRACKET: OPENANGLEBRACKET,\n\tOPENPAREN: OPENPAREN,\n\tCLOSEBRACE: CLOSEBRACE,\n\tCLOSEBRACKET: CLOSEBRACKET,\n\tCLOSEANGLEBRACKET: CLOSEANGLEBRACKET,\n\tCLOSEPAREN: CLOSEPAREN,\n\tAMPERSAND: AMPERSAND,\n\tAPOSTROPHE: APOSTROPHE,\n\tASTERISK: ASTERISK,\n\tAT: AT,\n\tBACKSLASH: BACKSLASH,\n\tBACKTICK: BACKTICK,\n\tCARET: CARET,\n\tCOLON: COLON,\n\tCOMMA: COMMA,\n\tDOLLAR: DOLLAR,\n\tDOT: DOT,\n\tEQUALS: EQUALS,\n\tEXCLAMATION: EXCLAMATION,\n\tHYPHEN: HYPHEN,\n\tPERCENT: PERCENT,\n\tPIPE: PIPE,\n\tPLUS: PLUS,\n\tPOUND: POUND,\n\tQUERY: QUERY,\n\tQUOTE: QUOTE,\n\tSEMI: SEMI,\n\tSLASH: SLASH,\n\tTILDE: TILDE,\n\tUNDERSCORE: UNDERSCORE,\n\tSYM: SYM\n});\n\n// NOTE: punycode versions of IDNs are not included here because these will not\n// be as commonly used without the http prefix anyway and linkify will already\n// force-encode those.\n// To be updated with the values in this list\n// http://data.iana.org/TLD/tlds-alpha-by-domain.txt\n// Version 2021022800, Last Updated Sun Feb 28 07:07:01 2021 UTC\nvar tlds = 'aaa \\\naarp \\\nabarth \\\nabb \\\nabbott \\\nabbvie \\\nabc \\\nable \\\nabogado \\\nabudhabi \\\nac \\\nacademy \\\naccenture \\\naccountant \\\naccountants \\\naco \\\nactor \\\nad \\\nadac \\\nads \\\nadult \\\nae \\\naeg \\\naero \\\naetna \\\naf \\\nafamilycompany \\\nafl \\\nafrica \\\nag \\\nagakhan \\\nagency \\\nai \\\naig \\\nairbus \\\nairforce \\\nairtel \\\nakdn \\\nal \\\nalfaromeo \\\nalibaba \\\nalipay \\\nallfinanz \\\nallstate \\\nally \\\nalsace \\\nalstom \\\nam \\\namazon \\\namericanexpress \\\namericanfamily \\\namex \\\namfam \\\namica \\\namsterdam \\\nanalytics \\\nandroid \\\nanquan \\\nanz \\\nao \\\naol \\\napartments \\\napp \\\napple \\\naq \\\naquarelle \\\nar \\\narab \\\naramco \\\narchi \\\narmy \\\narpa \\\nart \\\narte \\\nas \\\nasda \\\nasia \\\nassociates \\\nat \\\nathleta \\\nattorney \\\nau \\\nauction \\\naudi \\\naudible \\\naudio \\\nauspost \\\nauthor \\\nauto \\\nautos \\\navianca \\\naw \\\naws \\\nax \\\naxa \\\naz \\\nazure \\\nba \\\nbaby \\\nbaidu \\\nbanamex \\\nbananarepublic \\\nband \\\nbank \\\nbar \\\nbarcelona \\\nbarclaycard \\\nbarclays \\\nbarefoot \\\nbargains \\\nbaseball \\\nbasketball \\\nbauhaus \\\nbayern \\\nbb \\\nbbc \\\nbbt \\\nbbva \\\nbcg \\\nbcn \\\nbd \\\nbe \\\nbeats \\\nbeauty \\\nbeer \\\nbentley \\\nberlin \\\nbest \\\nbestbuy \\\nbet \\\nbf \\\nbg \\\nbh \\\nbharti \\\nbi \\\nbible \\\nbid \\\nbike \\\nbing \\\nbingo \\\nbio \\\nbiz \\\nbj \\\nblack \\\nblackfriday \\\nblockbuster \\\nblog \\\nbloomberg \\\nblue \\\nbm \\\nbms \\\nbmw \\\nbn \\\nbnpparibas \\\nbo \\\nboats \\\nboehringer \\\nbofa \\\nbom \\\nbond \\\nboo \\\nbook \\\nbooking \\\nbosch \\\nbostik \\\nboston \\\nbot \\\nboutique \\\nbox \\\nbr \\\nbradesco \\\nbridgestone \\\nbroadway \\\nbroker \\\nbrother \\\nbrussels \\\nbs \\\nbt \\\nbudapest \\\nbugatti \\\nbuild \\\nbuilders \\\nbusiness \\\nbuy \\\nbuzz \\\nbv \\\nbw \\\nby \\\nbz \\\nbzh \\\nca \\\ncab \\\ncafe \\\ncal \\\ncall \\\ncalvinklein \\\ncam \\\ncamera \\\ncamp \\\ncancerresearch \\\ncanon \\\ncapetown \\\ncapital \\\ncapitalone \\\ncar \\\ncaravan \\\ncards \\\ncare \\\ncareer \\\ncareers \\\ncars \\\ncasa \\\ncase \\\ncash \\\ncasino \\\ncat \\\ncatering \\\ncatholic \\\ncba \\\ncbn \\\ncbre \\\ncbs \\\ncc \\\ncd \\\ncenter \\\nceo \\\ncern \\\ncf \\\ncfa \\\ncfd \\\ncg \\\nch \\\nchanel \\\nchannel \\\ncharity \\\nchase \\\nchat \\\ncheap \\\nchintai \\\nchristmas \\\nchrome \\\nchurch \\\nci \\\ncipriani \\\ncircle \\\ncisco \\\ncitadel \\\nciti \\\ncitic \\\ncity \\\ncityeats \\\nck \\\ncl \\\nclaims \\\ncleaning \\\nclick \\\nclinic \\\nclinique \\\nclothing \\\ncloud \\\nclub \\\nclubmed \\\ncm \\\ncn \\\nco \\\ncoach \\\ncodes \\\ncoffee \\\ncollege \\\ncologne \\\ncom \\\ncomcast \\\ncommbank \\\ncommunity \\\ncompany \\\ncompare \\\ncomputer \\\ncomsec \\\ncondos \\\nconstruction \\\nconsulting \\\ncontact \\\ncontractors \\\ncooking \\\ncookingchannel \\\ncool \\\ncoop \\\ncorsica \\\ncountry \\\ncoupon \\\ncoupons \\\ncourses \\\ncpa \\\ncr \\\ncredit \\\ncreditcard \\\ncreditunion \\\ncricket \\\ncrown \\\ncrs \\\ncruise \\\ncruises \\\ncsc \\\ncu \\\ncuisinella \\\ncv \\\ncw \\\ncx \\\ncy \\\ncymru \\\ncyou \\\ncz \\\ndabur \\\ndad \\\ndance \\\ndata \\\ndate \\\ndating \\\ndatsun \\\nday \\\ndclk \\\ndds \\\nde \\\ndeal \\\ndealer \\\ndeals \\\ndegree \\\ndelivery \\\ndell \\\ndeloitte \\\ndelta \\\ndemocrat \\\ndental \\\ndentist \\\ndesi \\\ndesign \\\ndev \\\ndhl \\\ndiamonds \\\ndiet \\\ndigital \\\ndirect \\\ndirectory \\\ndiscount \\\ndiscover \\\ndish \\\ndiy \\\ndj \\\ndk \\\ndm \\\ndnp \\\ndo \\\ndocs \\\ndoctor \\\ndog \\\ndomains \\\ndot \\\ndownload \\\ndrive \\\ndtv \\\ndubai \\\nduck \\\ndunlop \\\ndupont \\\ndurban \\\ndvag \\\ndvr \\\ndz \\\nearth \\\neat \\\nec \\\neco \\\nedeka \\\nedu \\\neducation \\\nee \\\neg \\\nemail \\\nemerck \\\nenergy \\\nengineer \\\nengineering \\\nenterprises \\\nepson \\\nequipment \\\ner \\\nericsson \\\nerni \\\nes \\\nesq \\\nestate \\\net \\\netisalat \\\neu \\\neurovision \\\neus \\\nevents \\\nexchange \\\nexpert \\\nexposed \\\nexpress \\\nextraspace \\\nfage \\\nfail \\\nfairwinds \\\nfaith \\\nfamily \\\nfan \\\nfans \\\nfarm \\\nfarmers \\\nfashion \\\nfast \\\nfedex \\\nfeedback \\\nferrari \\\nferrero \\\nfi \\\nfiat \\\nfidelity \\\nfido \\\nfilm \\\nfinal \\\nfinance \\\nfinancial \\\nfire \\\nfirestone \\\nfirmdale \\\nfish \\\nfishing \\\nfit \\\nfitness \\\nfj \\\nfk \\\nflickr \\\nflights \\\nflir \\\nflorist \\\nflowers \\\nfly \\\nfm \\\nfo \\\nfoo \\\nfood \\\nfoodnetwork \\\nfootball \\\nford \\\nforex \\\nforsale \\\nforum \\\nfoundation \\\nfox \\\nfr \\\nfree \\\nfresenius \\\nfrl \\\nfrogans \\\nfrontdoor \\\nfrontier \\\nftr \\\nfujitsu \\\nfujixerox \\\nfun \\\nfund \\\nfurniture \\\nfutbol \\\nfyi \\\nga \\\ngal \\\ngallery \\\ngallo \\\ngallup \\\ngame \\\ngames \\\ngap \\\ngarden \\\ngay \\\ngb \\\ngbiz \\\ngd \\\ngdn \\\nge \\\ngea \\\ngent \\\ngenting \\\ngeorge \\\ngf \\\ngg \\\nggee \\\ngh \\\ngi \\\ngift \\\ngifts \\\ngives \\\ngiving \\\ngl \\\nglade \\\nglass \\\ngle \\\nglobal \\\nglobo \\\ngm \\\ngmail \\\ngmbh \\\ngmo \\\ngmx \\\ngn \\\ngodaddy \\\ngold \\\ngoldpoint \\\ngolf \\\ngoo \\\ngoodyear \\\ngoog \\\ngoogle \\\ngop \\\ngot \\\ngov \\\ngp \\\ngq \\\ngr \\\ngrainger \\\ngraphics \\\ngratis \\\ngreen \\\ngripe \\\ngrocery \\\ngroup \\\ngs \\\ngt \\\ngu \\\nguardian \\\ngucci \\\nguge \\\nguide \\\nguitars \\\nguru \\\ngw \\\ngy \\\nhair \\\nhamburg \\\nhangout \\\nhaus \\\nhbo \\\nhdfc \\\nhdfcbank \\\nhealth \\\nhealthcare \\\nhelp \\\nhelsinki \\\nhere \\\nhermes \\\nhgtv \\\nhiphop \\\nhisamitsu \\\nhitachi \\\nhiv \\\nhk \\\nhkt \\\nhm \\\nhn \\\nhockey \\\nholdings \\\nholiday \\\nhomedepot \\\nhomegoods \\\nhomes \\\nhomesense \\\nhonda \\\nhorse \\\nhospital \\\nhost \\\nhosting \\\nhot \\\nhoteles \\\nhotels \\\nhotmail \\\nhouse \\\nhow \\\nhr \\\nhsbc \\\nht \\\nhu \\\nhughes \\\nhyatt \\\nhyundai \\\nibm \\\nicbc \\\nice \\\nicu \\\nid \\\nie \\\nieee \\\nifm \\\nikano \\\nil \\\nim \\\nimamat \\\nimdb \\\nimmo \\\nimmobilien \\\nin \\\ninc \\\nindustries \\\ninfiniti \\\ninfo \\\ning \\\nink \\\ninstitute \\\ninsurance \\\ninsure \\\nint \\\ninternational \\\nintuit \\\ninvestments \\\nio \\\nipiranga \\\niq \\\nir \\\nirish \\\nis \\\nismaili \\\nist \\\nistanbul \\\nit \\\nitau \\\nitv \\\niveco \\\njaguar \\\njava \\\njcb \\\nje \\\njeep \\\njetzt \\\njewelry \\\njio \\\njll \\\njm \\\njmp \\\njnj \\\njo \\\njobs \\\njoburg \\\njot \\\njoy \\\njp \\\njpmorgan \\\njprs \\\njuegos \\\njuniper \\\nkaufen \\\nkddi \\\nke \\\nkerryhotels \\\nkerrylogistics \\\nkerryproperties \\\nkfh \\\nkg \\\nkh \\\nki \\\nkia \\\nkim \\\nkinder \\\nkindle \\\nkitchen \\\nkiwi \\\nkm \\\nkn \\\nkoeln \\\nkomatsu \\\nkosher \\\nkp \\\nkpmg \\\nkpn \\\nkr \\\nkrd \\\nkred \\\nkuokgroup \\\nkw \\\nky \\\nkyoto \\\nkz \\\nla \\\nlacaixa \\\nlamborghini \\\nlamer \\\nlancaster \\\nlancia \\\nland \\\nlandrover \\\nlanxess \\\nlasalle \\\nlat \\\nlatino \\\nlatrobe \\\nlaw \\\nlawyer \\\nlb \\\nlc \\\nlds \\\nlease \\\nleclerc \\\nlefrak \\\nlegal \\\nlego \\\nlexus \\\nlgbt \\\nli \\\nlidl \\\nlife \\\nlifeinsurance \\\nlifestyle \\\nlighting \\\nlike \\\nlilly \\\nlimited \\\nlimo \\\nlincoln \\\nlinde \\\nlink \\\nlipsy \\\nlive \\\nliving \\\nlixil \\\nlk \\\nllc \\\nllp \\\nloan \\\nloans \\\nlocker \\\nlocus \\\nloft \\\nlol \\\nlondon \\\nlotte \\\nlotto \\\nlove \\\nlpl \\\nlplfinancial \\\nlr \\\nls \\\nlt \\\nltd \\\nltda \\\nlu \\\nlundbeck \\\nluxe \\\nluxury \\\nlv \\\nly \\\nma \\\nmacys \\\nmadrid \\\nmaif \\\nmaison \\\nmakeup \\\nman \\\nmanagement \\\nmango \\\nmap \\\nmarket \\\nmarketing \\\nmarkets \\\nmarriott \\\nmarshalls \\\nmaserati \\\nmattel \\\nmba \\\nmc \\\nmckinsey \\\nmd \\\nme \\\nmed \\\nmedia \\\nmeet \\\nmelbourne \\\nmeme \\\nmemorial \\\nmen \\\nmenu \\\nmerckmsd \\\nmg \\\nmh \\\nmiami \\\nmicrosoft \\\nmil \\\nmini \\\nmint \\\nmit \\\nmitsubishi \\\nmk \\\nml \\\nmlb \\\nmls \\\nmm \\\nmma \\\nmn \\\nmo \\\nmobi \\\nmobile \\\nmoda \\\nmoe \\\nmoi \\\nmom \\\nmonash \\\nmoney \\\nmonster \\\nmormon \\\nmortgage \\\nmoscow \\\nmoto \\\nmotorcycles \\\nmov \\\nmovie \\\nmp \\\nmq \\\nmr \\\nms \\\nmsd \\\nmt \\\nmtn \\\nmtr \\\nmu \\\nmuseum \\\nmutual \\\nmv \\\nmw \\\nmx \\\nmy \\\nmz \\\nna \\\nnab \\\nnagoya \\\nname \\\nnationwide \\\nnatura \\\nnavy \\\nnba \\\nnc \\\nne \\\nnec \\\nnet \\\nnetbank \\\nnetflix \\\nnetwork \\\nneustar \\\nnew \\\nnews \\\nnext \\\nnextdirect \\\nnexus \\\nnf \\\nnfl \\\nng \\\nngo \\\nnhk \\\nni \\\nnico \\\nnike \\\nnikon \\\nninja \\\nnissan \\\nnissay \\\nnl \\\nno \\\nnokia \\\nnorthwesternmutual \\\nnorton \\\nnow \\\nnowruz \\\nnowtv \\\nnp \\\nnr \\\nnra \\\nnrw \\\nntt \\\nnu \\\nnyc \\\nnz \\\nobi \\\nobserver \\\noff \\\noffice \\\nokinawa \\\nolayan \\\nolayangroup \\\noldnavy \\\nollo \\\nom \\\nomega \\\none \\\nong \\\nonl \\\nonline \\\nonyourside \\\nooo \\\nopen \\\noracle \\\norange \\\norg \\\norganic \\\norigins \\\nosaka \\\notsuka \\\nott \\\novh \\\npa \\\npage \\\npanasonic \\\nparis \\\npars \\\npartners \\\nparts \\\nparty \\\npassagens \\\npay \\\npccw \\\npe \\\npet \\\npf \\\npfizer \\\npg \\\nph \\\npharmacy \\\nphd \\\nphilips \\\nphone \\\nphoto \\\nphotography \\\nphotos \\\nphysio \\\npics \\\npictet \\\npictures \\\npid \\\npin \\\nping \\\npink \\\npioneer \\\npizza \\\npk \\\npl \\\nplace \\\nplay \\\nplaystation \\\nplumbing \\\nplus \\\npm \\\npn \\\npnc \\\npohl \\\npoker \\\npolitie \\\nporn \\\npost \\\npr \\\npramerica \\\npraxi \\\npress \\\nprime \\\npro \\\nprod \\\nproductions \\\nprof \\\nprogressive \\\npromo \\\nproperties \\\nproperty \\\nprotection \\\npru \\\nprudential \\\nps \\\npt \\\npub \\\npw \\\npwc \\\npy \\\nqa \\\nqpon \\\nquebec \\\nquest \\\nqvc \\\nracing \\\nradio \\\nraid \\\nre \\\nread \\\nrealestate \\\nrealtor \\\nrealty \\\nrecipes \\\nred \\\nredstone \\\nredumbrella \\\nrehab \\\nreise \\\nreisen \\\nreit \\\nreliance \\\nren \\\nrent \\\nrentals \\\nrepair \\\nreport \\\nrepublican \\\nrest \\\nrestaurant \\\nreview \\\nreviews \\\nrexroth \\\nrich \\\nrichardli \\\nricoh \\\nril \\\nrio \\\nrip \\\nrmit \\\nro \\\nrocher \\\nrocks \\\nrodeo \\\nrogers \\\nroom \\\nrs \\\nrsvp \\\nru \\\nrugby \\\nruhr \\\nrun \\\nrw \\\nrwe \\\nryukyu \\\nsa \\\nsaarland \\\nsafe \\\nsafety \\\nsakura \\\nsale \\\nsalon \\\nsamsclub \\\nsamsung \\\nsandvik \\\nsandvikcoromant \\\nsanofi \\\nsap \\\nsarl \\\nsas \\\nsave \\\nsaxo \\\nsb \\\nsbi \\\nsbs \\\nsc \\\nsca \\\nscb \\\nschaeffler \\\nschmidt \\\nscholarships \\\nschool \\\nschule \\\nschwarz \\\nscience \\\nscjohnson \\\nscot \\\nsd \\\nse \\\nsearch \\\nseat \\\nsecure \\\nsecurity \\\nseek \\\nselect \\\nsener \\\nservices \\\nses \\\nseven \\\nsew \\\nsex \\\nsexy \\\nsfr \\\nsg \\\nsh \\\nshangrila \\\nsharp \\\nshaw \\\nshell \\\nshia \\\nshiksha \\\nshoes \\\nshop \\\nshopping \\\nshouji \\\nshow \\\nshowtime \\\nsi \\\nsilk \\\nsina \\\nsingles \\\nsite \\\nsj \\\nsk \\\nski \\\nskin \\\nsky \\\nskype \\\nsl \\\nsling \\\nsm \\\nsmart \\\nsmile \\\nsn \\\nsncf \\\nso \\\nsoccer \\\nsocial \\\nsoftbank \\\nsoftware \\\nsohu \\\nsolar \\\nsolutions \\\nsong \\\nsony \\\nsoy \\\nspa \\\nspace \\\nsport \\\nspot \\\nspreadbetting \\\nsr \\\nsrl \\\nss \\\nst \\\nstada \\\nstaples \\\nstar \\\nstatebank \\\nstatefarm \\\nstc \\\nstcgroup \\\nstockholm \\\nstorage \\\nstore \\\nstream \\\nstudio \\\nstudy \\\nstyle \\\nsu \\\nsucks \\\nsupplies \\\nsupply \\\nsupport \\\nsurf \\\nsurgery \\\nsuzuki \\\nsv \\\nswatch \\\nswiftcover \\\nswiss \\\nsx \\\nsy \\\nsydney \\\nsystems \\\nsz \\\ntab \\\ntaipei \\\ntalk \\\ntaobao \\\ntarget \\\ntatamotors \\\ntatar \\\ntattoo \\\ntax \\\ntaxi \\\ntc \\\ntci \\\ntd \\\ntdk \\\nteam \\\ntech \\\ntechnology \\\ntel \\\ntemasek \\\ntennis \\\nteva \\\ntf \\\ntg \\\nth \\\nthd \\\ntheater \\\ntheatre \\\ntiaa \\\ntickets \\\ntienda \\\ntiffany \\\ntips \\\ntires \\\ntirol \\\ntj \\\ntjmaxx \\\ntjx \\\ntk \\\ntkmaxx \\\ntl \\\ntm \\\ntmall \\\ntn \\\nto \\\ntoday \\\ntokyo \\\ntools \\\ntop \\\ntoray \\\ntoshiba \\\ntotal \\\ntours \\\ntown \\\ntoyota \\\ntoys \\\ntr \\\ntrade \\\ntrading \\\ntraining \\\ntravel \\\ntravelchannel \\\ntravelers \\\ntravelersinsurance \\\ntrust \\\ntrv \\\ntt \\\ntube \\\ntui \\\ntunes \\\ntushu \\\ntv \\\ntvs \\\ntw \\\ntz \\\nua \\\nubank \\\nubs \\\nug \\\nuk \\\nunicom \\\nuniversity \\\nuno \\\nuol \\\nups \\\nus \\\nuy \\\nuz \\\nva \\\nvacations \\\nvana \\\nvanguard \\\nvc \\\nve \\\nvegas \\\nventures \\\nverisign \\\nversicherung \\\nvet \\\nvg \\\nvi \\\nviajes \\\nvideo \\\nvig \\\nviking \\\nvillas \\\nvin \\\nvip \\\nvirgin \\\nvisa \\\nvision \\\nviva \\\nvivo \\\nvlaanderen \\\nvn \\\nvodka \\\nvolkswagen \\\nvolvo \\\nvote \\\nvoting \\\nvoto \\\nvoyage \\\nvu \\\nvuelos \\\nwales \\\nwalmart \\\nwalter \\\nwang \\\nwanggou \\\nwatch \\\nwatches \\\nweather \\\nweatherchannel \\\nwebcam \\\nweber \\\nwebsite \\\nwed \\\nwedding \\\nweibo \\\nweir \\\nwf \\\nwhoswho \\\nwien \\\nwiki \\\nwilliamhill \\\nwin \\\nwindows \\\nwine \\\nwinners \\\nwme \\\nwolterskluwer \\\nwoodside \\\nwork \\\nworks \\\nworld \\\nwow \\\nws \\\nwtc \\\nwtf \\\nxbox \\\nxerox \\\nxfinity \\\nxihuan \\\nxin \\\nxxx \\\nxyz \\\nyachts \\\nyahoo \\\nyamaxun \\\nyandex \\\nye \\\nyodobashi \\\nyoga \\\nyokohama \\\nyou \\\nyoutube \\\nyt \\\nyun \\\nza \\\nzappos \\\nzara \\\nzero \\\nzip \\\nzm \\\nzone \\\nzuerich \\\nzw \\\nvermögensberater-ctb \\\nvermögensberatung-pwb \\\nελ \\\nευ \\\nбг \\\nбел \\\nдети \\\nею \\\nкатолик \\\nком \\\nқаз \\\nмкд \\\nмон \\\nмосква \\\nонлайн \\\nорг \\\nрус \\\nрф \\\nсайт \\\nсрб \\\nукр \\\nგე \\\nհայ \\\nישראל \\\nקום \\\nابوظبي \\\nاتصالات \\\nارامكو \\\nالاردن \\\nالبحرين \\\nالجزائر \\\nالسعودية \\\nالعليان \\\nالمغرب \\\nامارات \\\nایران \\\nبارت \\\nبازار \\\nبھارت \\\nبيتك \\\nپاکستان \\\nڀارت \\\nتونس \\\nسودان \\\nسورية \\\nشبكة \\\nعراق \\\nعرب \\\nعمان \\\nفلسطين \\\nقطر \\\nكاثوليك \\\nكوم \\\nمصر \\\nمليسيا \\\nموريتانيا \\\nموقع \\\nهمراه \\\nकॉम \\\nनेट \\\nभारत \\\nभारतम् \\\nभारोत \\\nसंगठन \\\nবাংলা \\\nভারত \\\nভাৰত \\\nਭਾਰਤ \\\nભારત \\\nଭାରତ \\\nஇந்தியா \\\nஇலங்கை \\\nசிங்கப்பூர் \\\nభారత్ \\\nಭಾರತ \\\nഭാരതം \\\nලංකා \\\nคอม \\\nไทย \\\nລາວ \\\n닷넷 \\\n닷컴 \\\n삼성 \\\n한국 \\\nアマゾン \\\nグーグル \\\nクラウド \\\nコム \\\nストア \\\nセール \\\nファッション \\\nポイント \\\nみんな \\\n世界 \\\n中信 \\\n中国 \\\n中國 \\\n中文网 \\\n亚马逊 \\\n企业 \\\n佛山 \\\n信息 \\\n健康 \\\n八卦 \\\n公司 \\\n公益 \\\n台湾 \\\n台灣 \\\n商城 \\\n商店 \\\n商标 \\\n嘉里 \\\n嘉里大酒店 \\\n在线 \\\n大众汽车 \\\n大拿 \\\n天主教 \\\n娱乐 \\\n家電 \\\n广东 \\\n微博 \\\n慈善 \\\n我爱你 \\\n手机 \\\n招聘 \\\n政务 \\\n政府 \\\n新加坡 \\\n新闻 \\\n时尚 \\\n書籍 \\\n机构 \\\n淡马锡 \\\n游戏 \\\n澳門 \\\n点看 \\\n移动 \\\n组织机构 \\\n网址 \\\n网店 \\\n网站 \\\n网络 \\\n联通 \\\n诺基亚 \\\n谷歌 \\\n购物 \\\n通販 \\\n集团 \\\n電訊盈科 \\\n飞利浦 \\\n食品 \\\n餐厅 \\\n香格里拉 \\\n香港'.split(' ');\n\n/**\n\tThe scanner provides an interface that takes a string of text as input, and\n\toutputs an array of tokens instances that can be used for easy URL parsing.\n\n\t@module linkify\n\t@submodule scanner\n\t@main scanner\n*/\n\nvar LETTER = /(?:[A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08C7\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3400-\\u4DBF\\u4E00-\\u9FFC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7CA\\uA7F5-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD23\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF45\\uDFB0-\\uDFC4\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDEB8\\uDF00-\\uDF1A]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCDF\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDEE0-\\uDEF2\\uDFB0]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD4E\\uDEC0-\\uDEEB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43\\uDD4B]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDEDD\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/; // Any Unicode character with letter data type\n\nvar EMOJI = /(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26A7\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDED5-\\uDED7\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])/; // Any Unicode emoji character\n\nvar EMOJI_VARIATION = /\\uFE0F/; // Variation selector, follows heart and others\n\nvar DIGIT = /\\d/;\nvar SPACE = /\\s/;\n/**\n * Initialize the scanner character-based state machine for the given start state\n * @return {State} scanner starting state\n */\n\nfunction init$2() {\n  var customProtocols = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  // Frequently used states\n  var S_START = makeState();\n  var S_NUM = makeAcceptingState(NUM);\n  var S_DOMAIN = makeAcceptingState(DOMAIN);\n  var S_DOMAIN_HYPHEN = makeState(); // domain followed by 1 or more hyphen characters\n\n  var S_WS = makeAcceptingState(WS);\n  var DOMAIN_REGEX_TRANSITIONS = [[DIGIT, S_DOMAIN], [LETTER, S_DOMAIN], [EMOJI, S_DOMAIN], [EMOJI_VARIATION, S_DOMAIN]]; // Create a state which emits a domain token\n\n  var makeDomainState = function makeDomainState() {\n    var state = makeAcceptingState(DOMAIN);\n    state.j = {\n      '-': S_DOMAIN_HYPHEN\n    };\n    state.jr = [].concat(DOMAIN_REGEX_TRANSITIONS);\n    return state;\n  }; // Create a state which does not emit a domain state but the usual alphanumeric\n  // transitions are domains\n\n\n  var makeNearDomainState = function makeNearDomainState(token) {\n    var state = makeDomainState();\n    state.t = token;\n    return state;\n  }; // States for special URL symbols that accept immediately after start\n\n\n  makeBatchT(S_START, [[\"'\", makeAcceptingState(APOSTROPHE)], ['{', makeAcceptingState(OPENBRACE)], ['[', makeAcceptingState(OPENBRACKET)], ['<', makeAcceptingState(OPENANGLEBRACKET)], ['(', makeAcceptingState(OPENPAREN)], ['}', makeAcceptingState(CLOSEBRACE)], [']', makeAcceptingState(CLOSEBRACKET)], ['>', makeAcceptingState(CLOSEANGLEBRACKET)], [')', makeAcceptingState(CLOSEPAREN)], ['&', makeAcceptingState(AMPERSAND)], ['*', makeAcceptingState(ASTERISK)], ['@', makeAcceptingState(AT)], ['`', makeAcceptingState(BACKTICK)], ['^', makeAcceptingState(CARET)], [':', makeAcceptingState(COLON)], [',', makeAcceptingState(COMMA)], ['$', makeAcceptingState(DOLLAR)], ['.', makeAcceptingState(DOT)], ['=', makeAcceptingState(EQUALS)], ['!', makeAcceptingState(EXCLAMATION)], ['-', makeAcceptingState(HYPHEN)], ['%', makeAcceptingState(PERCENT)], ['|', makeAcceptingState(PIPE)], ['+', makeAcceptingState(PLUS)], ['#', makeAcceptingState(POUND)], ['?', makeAcceptingState(QUERY)], ['\"', makeAcceptingState(QUOTE)], ['/', makeAcceptingState(SLASH)], [';', makeAcceptingState(SEMI)], ['~', makeAcceptingState(TILDE)], ['_', makeAcceptingState(UNDERSCORE)], ['\\\\', makeAcceptingState(BACKSLASH)]]); // Whitespace jumps\n  // Tokens of only non-newline whitespace are arbitrarily long\n\n  makeT(S_START, '\\n', makeAcceptingState(NL));\n  makeRegexT(S_START, SPACE, S_WS); // If any whitespace except newline, more whitespace!\n\n  makeT(S_WS, '\\n', makeState()); // non-accepting state\n\n  makeRegexT(S_WS, SPACE, S_WS); // Generates states for top-level domains\n  // Note that this is most accurate when tlds are in alphabetical order\n\n  for (var i = 0; i < tlds.length; i++) {\n    makeChainT(S_START, tlds[i], makeNearDomainState(TLD), makeDomainState);\n  } // Collect the states generated by different protocls\n\n\n  var S_PROTOCOL_FILE = makeDomainState();\n  var S_PROTOCOL_FTP = makeDomainState();\n  var S_PROTOCOL_HTTP = makeDomainState();\n  var S_MAILTO = makeDomainState();\n  makeChainT(S_START, 'file', S_PROTOCOL_FILE, makeDomainState);\n  makeChainT(S_START, 'ftp', S_PROTOCOL_FTP, makeDomainState);\n  makeChainT(S_START, 'http', S_PROTOCOL_HTTP, makeDomainState);\n  makeChainT(S_START, 'mailto', S_MAILTO, makeDomainState); // Protocol states\n\n  var S_PROTOCOL_SECURE = makeDomainState();\n  var S_FULL_PROTOCOL = makeAcceptingState(PROTOCOL); // Full protocol ends with COLON\n\n  var S_FULL_MAILTO = makeAcceptingState(MAILTO); // Mailto ends with COLON\n  // Secure protocols (end with 's')\n\n  makeT(S_PROTOCOL_FTP, 's', S_PROTOCOL_SECURE);\n  makeT(S_PROTOCOL_FTP, ':', S_FULL_PROTOCOL);\n  makeT(S_PROTOCOL_HTTP, 's', S_PROTOCOL_SECURE);\n  makeT(S_PROTOCOL_HTTP, ':', S_FULL_PROTOCOL); // Become protocol tokens after a COLON\n\n  makeT(S_PROTOCOL_FILE, ':', S_FULL_PROTOCOL);\n  makeT(S_PROTOCOL_SECURE, ':', S_FULL_PROTOCOL);\n  makeT(S_MAILTO, ':', S_FULL_MAILTO); // Register custom protocols\n\n  var S_CUSTOM_PROTOCOL = makeDomainState();\n\n  for (var _i = 0; _i < customProtocols.length; _i++) {\n    makeChainT(S_START, customProtocols[_i], S_CUSTOM_PROTOCOL, makeDomainState);\n  }\n\n  makeT(S_CUSTOM_PROTOCOL, ':', S_FULL_PROTOCOL); // Localhost\n\n  makeChainT(S_START, 'localhost', makeNearDomainState(LOCALHOST), makeDomainState); // Everything else\n  // DOMAINs make more DOMAINs\n  // Number and character transitions\n\n  makeRegexT(S_START, DIGIT, S_NUM);\n  makeRegexT(S_START, LETTER, S_DOMAIN);\n  makeRegexT(S_START, EMOJI, S_DOMAIN);\n  makeRegexT(S_START, EMOJI_VARIATION, S_DOMAIN);\n  makeRegexT(S_NUM, DIGIT, S_NUM);\n  makeRegexT(S_NUM, LETTER, S_DOMAIN); // number becomes DOMAIN\n\n  makeRegexT(S_NUM, EMOJI, S_DOMAIN); // number becomes DOMAIN\n\n  makeRegexT(S_NUM, EMOJI_VARIATION, S_DOMAIN); // number becomes DOMAIN\n\n  makeT(S_NUM, '-', S_DOMAIN_HYPHEN); // Default domain transitions\n\n  makeT(S_DOMAIN, '-', S_DOMAIN_HYPHEN);\n  makeT(S_DOMAIN_HYPHEN, '-', S_DOMAIN_HYPHEN);\n  makeRegexT(S_DOMAIN, DIGIT, S_DOMAIN);\n  makeRegexT(S_DOMAIN, LETTER, S_DOMAIN);\n  makeRegexT(S_DOMAIN, EMOJI, S_DOMAIN);\n  makeRegexT(S_DOMAIN, EMOJI_VARIATION, S_DOMAIN);\n  makeRegexT(S_DOMAIN_HYPHEN, DIGIT, S_DOMAIN);\n  makeRegexT(S_DOMAIN_HYPHEN, LETTER, S_DOMAIN);\n  makeRegexT(S_DOMAIN_HYPHEN, EMOJI, S_DOMAIN);\n  makeRegexT(S_DOMAIN_HYPHEN, EMOJI_VARIATION, S_DOMAIN); // Set default transition for start state (some symbol)\n\n  S_START.jd = makeAcceptingState(SYM);\n  return S_START;\n}\n/**\n\tGiven a string, returns an array of TOKEN instances representing the\n\tcomposition of that string.\n\n\t@method run\n\t@param {State} start scanner starting state\n\t@param {string} str input string to scan\n\t@return {{t: string, v: string, s: number, l: number}[]} list of tokens, each with a type and value\n*/\n\nfunction run$1(start, str) {\n  // State machine is not case sensitive, so input is tokenized in lowercased\n  // form (still returns the regular case though) Uses selective `toLowerCase`\n  // is used because lowercasing the entire string causes the length and\n  // character position to vary in some non-English strings with V8-based\n  // runtimes.\n  var iterable = stringToArray(str.replace(/[A-Z]/g, function (c) {\n    return c.toLowerCase();\n  }));\n  var charCount = iterable.length; // <= len if there are emojis, etc\n\n  var tokens = []; // return value\n  // cursor through the string itself, accounting for characters that have\n  // width with length 2 such as emojis\n\n  var cursor = 0; // Cursor through the array-representation of the string\n\n  var charCursor = 0; // Tokenize the string\n\n  while (charCursor < charCount) {\n    var state = start;\n    var nextState = null;\n    var tokenLength = 0;\n    var latestAccepting = null;\n    var sinceAccepts = -1;\n    var charsSinceAccepts = -1;\n\n    while (charCursor < charCount && (nextState = takeT(state, iterable[charCursor]))) {\n      state = nextState; // Keep track of the latest accepting state\n\n      if (state.accepts()) {\n        sinceAccepts = 0;\n        charsSinceAccepts = 0;\n        latestAccepting = state;\n      } else if (sinceAccepts >= 0) {\n        sinceAccepts += iterable[charCursor].length;\n        charsSinceAccepts++;\n      }\n\n      tokenLength += iterable[charCursor].length;\n      cursor += iterable[charCursor].length;\n      charCursor++;\n    } // Roll back to the latest accepting state\n\n\n    cursor -= sinceAccepts;\n    charCursor -= charsSinceAccepts;\n    tokenLength -= sinceAccepts; // No more jumps, just make a new token from the last accepting one\n    // TODO: If possible, don't output v, instead output range where values ocur\n\n    tokens.push({\n      t: latestAccepting.t,\n      // token type/name\n      v: str.substr(cursor - tokenLength, tokenLength),\n      // string value\n      s: cursor - tokenLength,\n      // start index\n      e: cursor // end index (excluding)\n\n    });\n  }\n\n  return tokens;\n}\n/**\n * Convert a String to an Array of characters, taking into account that some\n * characters like emojis take up two string indexes.\n *\n * Adapted from core-js (MIT license)\n * https://github.com/zloirock/core-js/blob/2d69cf5f99ab3ea3463c395df81e5a15b68f49d9/packages/core-js/internals/string-multibyte.js\n *\n * @function stringToArray\n * @param {string} str\n * @returns {string[]}\n */\n\nfunction stringToArray(str) {\n  var result = [];\n  var len = str.length;\n  var index = 0;\n\n  while (index < len) {\n    var first = str.charCodeAt(index);\n    var second = void 0;\n    var char = first < 0xd800 || first > 0xdbff || index + 1 === len || (second = str.charCodeAt(index + 1)) < 0xdc00 || second > 0xdfff ? str[index] // single character\n    : str.slice(index, index + 2); // two-index characters\n\n    result.push(char);\n    index += char.length;\n  }\n\n  return result;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\n/**\n * @property {string} defaultProtocol\n * @property {{[string]: (event) => void}]} [events]\n */\nvar defaults = {\n  defaultProtocol: 'http',\n  events: null,\n  format: noop,\n  formatHref: noop,\n  nl2br: false,\n  tagName: 'a',\n  target: null,\n  rel: null,\n  validate: true,\n  truncate: 0,\n  className: null,\n  attributes: null,\n  ignoreTags: []\n};\n/**\n * @class Options\n * @param {Object} [opts] Set option properties besides the defaults\n */\n\nfunction Options(opts) {\n  opts = opts || {};\n  this.defaultProtocol = 'defaultProtocol' in opts ? opts.defaultProtocol : defaults.defaultProtocol;\n  this.events = 'events' in opts ? opts.events : defaults.events;\n  this.format = 'format' in opts ? opts.format : defaults.format;\n  this.formatHref = 'formatHref' in opts ? opts.formatHref : defaults.formatHref;\n  this.nl2br = 'nl2br' in opts ? opts.nl2br : defaults.nl2br;\n  this.tagName = 'tagName' in opts ? opts.tagName : defaults.tagName;\n  this.target = 'target' in opts ? opts.target : defaults.target;\n  this.rel = 'rel' in opts ? opts.rel : defaults.rel;\n  this.validate = 'validate' in opts ? opts.validate : defaults.validate;\n  this.truncate = 'truncate' in opts ? opts.truncate : defaults.truncate;\n  this.className = 'className' in opts ? opts.className : defaults.className;\n  this.attributes = opts.attributes || defaults.attributes;\n  this.ignoreTags = []; // Make all tags names upper case\n\n  var ignoredTags = 'ignoreTags' in opts ? opts.ignoreTags : defaults.ignoreTags;\n\n  for (var i = 0; i < ignoredTags.length; i++) {\n    this.ignoreTags.push(ignoredTags[i].toUpperCase());\n  }\n}\nOptions.prototype = {\n  /**\n   * Given the token, return all options for how it should be displayed\n   */\n  resolve: function resolve(token) {\n    var href = token.toHref(this.defaultProtocol);\n    return {\n      formatted: this.get('format', token.toString(), token),\n      formattedHref: this.get('formatHref', href, token),\n      tagName: this.get('tagName', href, token),\n      className: this.get('className', href, token),\n      target: this.get('target', href, token),\n      rel: this.get('rel', href, token),\n      events: this.getObject('events', href, token),\n      attributes: this.getObject('attributes', href, token),\n      truncate: this.get('truncate', href, token)\n    };\n  },\n\n  /**\n   * Returns true or false based on whether a token should be displayed as a\n   * link based on the user options. By default,\n   */\n  check: function check(token) {\n    return this.get('validate', token.toString(), token);\n  },\n  // Private methods\n\n  /**\n   * Resolve an option's value based on the value of the option and the given\n   * params.\n   * @param {string} key Name of option to use\n   * @param operator will be passed to the target option if it's method\n   * @param {MultiToken} token The token from linkify.tokenize\n   */\n  get: function get(key, operator, token) {\n    var option = this[key];\n\n    if (!option) {\n      return option;\n    }\n\n    var optionValue;\n\n    switch (_typeof(option)) {\n      case 'function':\n        return option(operator, token.t);\n\n      case 'object':\n        optionValue = token.t in option ? option[token.t] : defaults[key];\n        return typeof optionValue === 'function' ? optionValue(operator, token.t) : optionValue;\n    }\n\n    return option;\n  },\n  getObject: function getObject(key, operator, token) {\n    var option = this[key];\n    return typeof option === 'function' ? option(operator, token.t) : option;\n  }\n};\n\nfunction noop(val) {\n  return val;\n}\n\nvar options = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tdefaults: defaults,\n\tOptions: Options\n});\n\n/******************************************************************************\n\tMulti-Tokens\n\tTokens composed of arrays of TextTokens\n******************************************************************************/\n\nfunction inherits(parent, child) {\n  var props = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var extended = Object.create(parent.prototype);\n\n  for (var p in props) {\n    extended[p] = props[p];\n  }\n\n  extended.constructor = child;\n  child.prototype = extended;\n  return child;\n}\n/**\n\tAbstract class used for manufacturing tokens of text tokens. That is rather\n\tthan the value for a token being a small string of text, it's value an array\n\tof text tokens.\n\n\tUsed for grouping together URLs, emails, hashtags, and other potential\n\tcreations.\n\n\t@class MultiToken\n\t@param {string} value\n\t@param {{t: string, v: string, s: number, e: number}[]} tokens\n\t@abstract\n*/\n\n\nfunction MultiToken() {}\nMultiToken.prototype = {\n  /**\n  \tString representing the type for this token\n  \t@property t\n  \t@default 'token'\n  */\n  t: 'token',\n\n  /**\n  \tIs this multitoken a link?\n  \t@property isLink\n  \t@default false\n  */\n  isLink: false,\n\n  /**\n  \tReturn the string this token represents.\n  \t@method toString\n  \t@return {string}\n  */\n  toString: function toString() {\n    return this.v;\n  },\n\n  /**\n  \tWhat should the value for this token be in the `href` HTML attribute?\n  \tReturns the `.toString` value by default.\n  \t\t@method toHref\n  \t@return {string}\n  */\n  toHref: function toHref() {\n    return this.toString();\n  },\n\n  /**\n   * The start index of this token in the original input string\n   * @returns {number}\n   */\n  startIndex: function startIndex() {\n    return this.tk[0].s;\n  },\n\n  /**\n   * The end index of this token in the original input string (up to this\n   * index but not including it)\n   * @returns {number}\n   */\n  endIndex: function endIndex() {\n    return this.tk[this.tk.length - 1].e;\n  },\n\n  /**\n  \tReturns a hash of relevant values for this token, which includes keys\n  \t* type - Kind of token ('url', 'email', etc.)\n  \t* value - Original text\n  \t* href - The value that should be added to the anchor tag's href\n  \t\tattribute\n  \t\t@method toObject\n  \t@param {string} [protocol] `'http'` by default\n  */\n  toObject: function toObject() {\n    var protocol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaults.defaultProtocol;\n    return {\n      type: this.t,\n      value: this.v,\n      isLink: this.isLink,\n      href: this.toHref(protocol),\n      start: this.startIndex(),\n      end: this.endIndex()\n    };\n  }\n}; // Base token\n/**\n * Create a new token that can be emitted by the parser state machine\n * @param {string} type readable type of the token\n * @param {object} props properties to assign or override, including isLink = true or false\n * @returns {(value: string, tokens: {t: string, v: string, s: number, e: number}) => MultiToken} new token class\n */\n\nfunction createTokenClass(type, props) {\n  function Token(value, tokens) {\n    this.t = type;\n    this.v = value;\n    this.tk = tokens;\n  }\n\n  inherits(MultiToken, Token, props);\n  return Token;\n}\n/**\n\tRepresents an arbitrarily mailto email address with the prefix included\n\t@class MailtoEmail\n\t@extends MultiToken\n*/\n\nvar MailtoEmail = createTokenClass('email', {\n  isLink: true\n});\n/**\n\tRepresents a list of tokens making up a valid email address\n\t@class Email\n\t@extends MultiToken\n*/\n\nvar Email = createTokenClass('email', {\n  isLink: true,\n  toHref: function toHref() {\n    return 'mailto:' + this.toString();\n  }\n});\n/**\n\tRepresents some plain text\n\t@class Text\n\t@extends MultiToken\n*/\n\nvar Text = createTokenClass('text');\n/**\n\tMulti-linebreak token - represents a line break\n\t@class Nl\n\t@extends MultiToken\n*/\n\nvar Nl = createTokenClass('nl');\n/**\n\tRepresents a list of text tokens making up a valid URL\n\t@class Url\n\t@extends MultiToken\n*/\n\nvar Url = createTokenClass('url', {\n  isLink: true,\n\n  /**\n  \tLowercases relevant parts of the domain and adds the protocol if\n  \trequired. Note that this will not escape unsafe HTML characters in the\n  \tURL.\n  \t\t@method href\n  \t@param {string} protocol\n  \t@return {string}\n  */\n  toHref: function toHref() {\n    var protocol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaults.defaultProtocol;\n    var tokens = this.tk;\n    var hasProtocol = false;\n    var hasSlashSlash = false;\n    var result = [];\n    var i = 0; // Make the first part of the domain lowercase\n    // Lowercase protocol\n\n    while (tokens[i].t === PROTOCOL) {\n      hasProtocol = true;\n      result.push(tokens[i].v);\n      i++;\n    } // Skip slash-slash\n\n\n    while (tokens[i].t === SLASH) {\n      hasSlashSlash = true;\n      result.push(tokens[i].v);\n      i++;\n    } // Continue pushing characters\n\n\n    for (; i < tokens.length; i++) {\n      result.push(tokens[i].v);\n    }\n\n    result = result.join('');\n\n    if (!(hasProtocol || hasSlashSlash)) {\n      result = \"\".concat(protocol, \"://\").concat(result);\n    }\n\n    return result;\n  },\n  hasProtocol: function hasProtocol() {\n    return this.tk[0].t === PROTOCOL;\n  }\n});\n\nvar multi = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tMultiToken: MultiToken,\n\tBase: MultiToken,\n\tcreateTokenClass: createTokenClass,\n\tMailtoEmail: MailtoEmail,\n\tEmail: Email,\n\tText: Text,\n\tNl: Nl,\n\tUrl: Url\n});\n\n/**\n\tNot exactly parser, more like the second-stage scanner (although we can\n\ttheoretically hotswap the code here with a real parser in the future... but\n\tfor a little URL-finding utility abstract syntax trees may be a little\n\toverkill).\n\n\tURL format: http://en.wikipedia.org/wiki/URI_scheme\n\tEmail format: http://en.wikipedia.org/wiki/Email_address (links to RFC in\n\treference)\n\n\t@module linkify\n\t@submodule parser\n\t@main run\n*/\n/**\n * Generate the parser multi token-based state machine\n * @returns {State} the starting state\n */\n\nfunction init$1() {\n  // The universal starting state.\n  var S_START = makeState(); // Intermediate states for URLs. Note that domains that begin with a protocol\n  // are treated slighly differently from those that don't.\n\n  var S_PROTOCOL = makeState(); // e.g., 'http:'\n\n  var S_MAILTO = makeState(); // 'mailto:'\n\n  var S_PROTOCOL_SLASH = makeState(); // e.g., 'http:/''\n\n  var S_PROTOCOL_SLASH_SLASH = makeState(); // e.g.,'http://'\n\n  var S_DOMAIN = makeState(); // parsed string ends with a potential domain name (A)\n\n  var S_DOMAIN_DOT = makeState(); // (A) domain followed by DOT\n\n  var S_TLD = makeAcceptingState(Url); // (A) Simplest possible URL with no query string\n\n  var S_TLD_COLON = makeState(); // (A) URL followed by colon (potential port number here)\n\n  var S_TLD_PORT = makeAcceptingState(Url); // TLD followed by a port number\n\n  var S_URL = makeAcceptingState(Url); // Long URL with optional port and maybe query string\n\n  var S_URL_NON_ACCEPTING = makeState(); // URL followed by some symbols (will not be part of the final URL)\n\n  var S_URL_OPENBRACE = makeState(); // URL followed by {\n\n  var S_URL_OPENBRACKET = makeState(); // URL followed by [\n\n  var S_URL_OPENANGLEBRACKET = makeState(); // URL followed by <\n\n  var S_URL_OPENPAREN = makeState(); // URL followed by (\n\n  var S_URL_OPENBRACE_Q = makeAcceptingState(Url); // URL followed by { and some symbols that the URL can end it\n\n  var S_URL_OPENBRACKET_Q = makeAcceptingState(Url); // URL followed by [ and some symbols that the URL can end it\n\n  var S_URL_OPENANGLEBRACKET_Q = makeAcceptingState(Url); // URL followed by < and some symbols that the URL can end it\n\n  var S_URL_OPENPAREN_Q = makeAcceptingState(Url); // URL followed by ( and some symbols that the URL can end it\n\n  var S_URL_OPENBRACE_SYMS = makeState(); // S_URL_OPENBRACE_Q followed by some symbols it cannot end it\n\n  var S_URL_OPENBRACKET_SYMS = makeState(); // S_URL_OPENBRACKET_Q followed by some symbols it cannot end it\n\n  var S_URL_OPENANGLEBRACKET_SYMS = makeState(); // S_URL_OPENANGLEBRACKET_Q followed by some symbols it cannot end it\n\n  var S_URL_OPENPAREN_SYMS = makeState(); // S_URL_OPENPAREN_Q followed by some symbols it cannot end it\n\n  var S_EMAIL_DOMAIN = makeState(); // parsed string starts with local email info + @ with a potential domain name (C)\n\n  var S_EMAIL_DOMAIN_DOT = makeState(); // (C) domain followed by DOT\n\n  var S_EMAIL = makeAcceptingState(Email); // (C) Possible email address (could have more tlds)\n\n  var S_EMAIL_COLON = makeState(); // (C) URL followed by colon (potential port number here)\n\n  var S_EMAIL_PORT = makeAcceptingState(Email); // (C) Email address with a port\n\n  var S_MAILTO_EMAIL = makeAcceptingState(MailtoEmail); // Email that begins with the mailto prefix (D)\n\n  var S_MAILTO_EMAIL_NON_ACCEPTING = makeState(); // (D) Followed by some non-query string chars\n\n  var S_LOCALPART = makeState(); // Local part of the email address\n\n  var S_LOCALPART_AT = makeState(); // Local part of the email address plus @\n\n  var S_LOCALPART_DOT = makeState(); // Local part of the email address plus '.' (localpart cannot end in .)\n\n  var S_NL = makeAcceptingState(Nl); // single new line\n  // Make path from start to protocol (with '//')\n\n  makeT(S_START, NL, S_NL);\n  makeT(S_START, PROTOCOL, S_PROTOCOL);\n  makeT(S_START, MAILTO, S_MAILTO);\n  makeT(S_PROTOCOL, SLASH, S_PROTOCOL_SLASH);\n  makeT(S_PROTOCOL_SLASH, SLASH, S_PROTOCOL_SLASH_SLASH); // The very first potential domain name\n\n  makeT(S_START, TLD, S_DOMAIN);\n  makeT(S_START, DOMAIN, S_DOMAIN);\n  makeT(S_START, LOCALHOST, S_TLD);\n  makeT(S_START, NUM, S_DOMAIN); // Force URL for protocol followed by anything sane\n\n  makeT(S_PROTOCOL_SLASH_SLASH, TLD, S_URL);\n  makeT(S_PROTOCOL_SLASH_SLASH, DOMAIN, S_URL);\n  makeT(S_PROTOCOL_SLASH_SLASH, NUM, S_URL);\n  makeT(S_PROTOCOL_SLASH_SLASH, LOCALHOST, S_URL); // Account for dots and hyphens\n  // hyphens are usually parts of domain names\n\n  makeT(S_DOMAIN, DOT, S_DOMAIN_DOT);\n  makeT(S_EMAIL_DOMAIN, DOT, S_EMAIL_DOMAIN_DOT); // Hyphen can jump back to a domain name\n  // After the first domain and a dot, we can find either a URL or another domain\n\n  makeT(S_DOMAIN_DOT, TLD, S_TLD);\n  makeT(S_DOMAIN_DOT, DOMAIN, S_DOMAIN);\n  makeT(S_DOMAIN_DOT, NUM, S_DOMAIN);\n  makeT(S_DOMAIN_DOT, LOCALHOST, S_DOMAIN);\n  makeT(S_EMAIL_DOMAIN_DOT, TLD, S_EMAIL);\n  makeT(S_EMAIL_DOMAIN_DOT, DOMAIN, S_EMAIL_DOMAIN);\n  makeT(S_EMAIL_DOMAIN_DOT, NUM, S_EMAIL_DOMAIN);\n  makeT(S_EMAIL_DOMAIN_DOT, LOCALHOST, S_EMAIL_DOMAIN); // S_TLD accepts! But the URL could be longer, try to find a match greedily\n  // The `run` function should be able to \"rollback\" to the accepting state\n\n  makeT(S_TLD, DOT, S_DOMAIN_DOT);\n  makeT(S_EMAIL, DOT, S_EMAIL_DOMAIN_DOT); // Become real URLs after `SLASH` or `COLON NUM SLASH`\n  // Here PSS and non-PSS converge\n\n  makeT(S_TLD, COLON, S_TLD_COLON);\n  makeT(S_TLD, SLASH, S_URL);\n  makeT(S_TLD_COLON, NUM, S_TLD_PORT);\n  makeT(S_TLD_PORT, SLASH, S_URL);\n  makeT(S_EMAIL, COLON, S_EMAIL_COLON);\n  makeT(S_EMAIL_COLON, NUM, S_EMAIL_PORT); // Types of characters the URL can definitely end in\n\n  var qsAccepting = [AMPERSAND, ASTERISK, AT, BACKSLASH, BACKTICK, CARET, DOLLAR, DOMAIN, EQUALS, HYPHEN, LOCALHOST, NUM, PERCENT, PIPE, PLUS, POUND, PROTOCOL, SLASH, SYM, TILDE, TLD, UNDERSCORE]; // Types of tokens that can follow a URL and be part of the query string\n  // but cannot be the very last characters\n  // Characters that cannot appear in the URL at all should be excluded\n\n  var qsNonAccepting = [APOSTROPHE, CLOSEANGLEBRACKET, CLOSEBRACE, CLOSEBRACKET, CLOSEPAREN, COLON, COMMA, DOT, EXCLAMATION, OPENANGLEBRACKET, OPENBRACE, OPENBRACKET, OPENPAREN, QUERY, QUOTE, SEMI]; // These states are responsible primarily for determining whether or not to\n  // include the final round bracket.\n  // URL, followed by an opening bracket\n\n  makeT(S_URL, OPENBRACE, S_URL_OPENBRACE);\n  makeT(S_URL, OPENBRACKET, S_URL_OPENBRACKET);\n  makeT(S_URL, OPENANGLEBRACKET, S_URL_OPENANGLEBRACKET);\n  makeT(S_URL, OPENPAREN, S_URL_OPENPAREN); // URL with extra symbols at the end, followed by an opening bracket\n\n  makeT(S_URL_NON_ACCEPTING, OPENBRACE, S_URL_OPENBRACE);\n  makeT(S_URL_NON_ACCEPTING, OPENBRACKET, S_URL_OPENBRACKET);\n  makeT(S_URL_NON_ACCEPTING, OPENANGLEBRACKET, S_URL_OPENANGLEBRACKET);\n  makeT(S_URL_NON_ACCEPTING, OPENPAREN, S_URL_OPENPAREN); // Closing bracket component. This character WILL be included in the URL\n\n  makeT(S_URL_OPENBRACE, CLOSEBRACE, S_URL);\n  makeT(S_URL_OPENBRACKET, CLOSEBRACKET, S_URL);\n  makeT(S_URL_OPENANGLEBRACKET, CLOSEANGLEBRACKET, S_URL);\n  makeT(S_URL_OPENPAREN, CLOSEPAREN, S_URL);\n  makeT(S_URL_OPENBRACE_Q, CLOSEBRACE, S_URL);\n  makeT(S_URL_OPENBRACKET_Q, CLOSEBRACKET, S_URL);\n  makeT(S_URL_OPENANGLEBRACKET_Q, CLOSEANGLEBRACKET, S_URL);\n  makeT(S_URL_OPENPAREN_Q, CLOSEPAREN, S_URL);\n  makeT(S_URL_OPENBRACE_SYMS, CLOSEBRACE, S_URL);\n  makeT(S_URL_OPENBRACKET_SYMS, CLOSEBRACKET, S_URL);\n  makeT(S_URL_OPENANGLEBRACKET_SYMS, CLOSEANGLEBRACKET, S_URL);\n  makeT(S_URL_OPENPAREN_SYMS, CLOSEPAREN, S_URL); // URL that beings with an opening bracket, followed by a symbols.\n  // Note that the final state can still be `S_URL_OPENBRACE_Q` (if the URL only\n  // has a single opening bracket for some reason).\n\n  makeMultiT(S_URL_OPENBRACE, qsAccepting, S_URL_OPENBRACE_Q);\n  makeMultiT(S_URL_OPENBRACKET, qsAccepting, S_URL_OPENBRACKET_Q);\n  makeMultiT(S_URL_OPENANGLEBRACKET, qsAccepting, S_URL_OPENANGLEBRACKET_Q);\n  makeMultiT(S_URL_OPENPAREN, qsAccepting, S_URL_OPENPAREN_Q);\n  makeMultiT(S_URL_OPENBRACE, qsNonAccepting, S_URL_OPENBRACE_SYMS);\n  makeMultiT(S_URL_OPENBRACKET, qsNonAccepting, S_URL_OPENBRACKET_SYMS);\n  makeMultiT(S_URL_OPENANGLEBRACKET, qsNonAccepting, S_URL_OPENANGLEBRACKET_SYMS);\n  makeMultiT(S_URL_OPENPAREN, qsNonAccepting, S_URL_OPENPAREN_SYMS); // URL that begins with an opening bracket, followed by some symbols\n\n  makeMultiT(S_URL_OPENBRACE_Q, qsAccepting, S_URL_OPENBRACE_Q);\n  makeMultiT(S_URL_OPENBRACKET_Q, qsAccepting, S_URL_OPENBRACKET_Q);\n  makeMultiT(S_URL_OPENANGLEBRACKET_Q, qsAccepting, S_URL_OPENANGLEBRACKET_Q);\n  makeMultiT(S_URL_OPENPAREN_Q, qsAccepting, S_URL_OPENPAREN_Q);\n  makeMultiT(S_URL_OPENBRACE_Q, qsNonAccepting, S_URL_OPENBRACE_Q);\n  makeMultiT(S_URL_OPENBRACKET_Q, qsNonAccepting, S_URL_OPENBRACKET_Q);\n  makeMultiT(S_URL_OPENANGLEBRACKET_Q, qsNonAccepting, S_URL_OPENANGLEBRACKET_Q);\n  makeMultiT(S_URL_OPENPAREN_Q, qsNonAccepting, S_URL_OPENPAREN_Q);\n  makeMultiT(S_URL_OPENBRACE_SYMS, qsAccepting, S_URL_OPENBRACE_Q);\n  makeMultiT(S_URL_OPENBRACKET_SYMS, qsAccepting, S_URL_OPENBRACKET_Q);\n  makeMultiT(S_URL_OPENANGLEBRACKET_SYMS, qsAccepting, S_URL_OPENANGLEBRACKET_Q);\n  makeMultiT(S_URL_OPENPAREN_SYMS, qsAccepting, S_URL_OPENPAREN_Q);\n  makeMultiT(S_URL_OPENBRACE_SYMS, qsNonAccepting, S_URL_OPENBRACE_SYMS);\n  makeMultiT(S_URL_OPENBRACKET_SYMS, qsNonAccepting, S_URL_OPENBRACKET_SYMS);\n  makeMultiT(S_URL_OPENANGLEBRACKET_SYMS, qsNonAccepting, S_URL_OPENANGLEBRACKET_SYMS);\n  makeMultiT(S_URL_OPENPAREN_SYMS, qsNonAccepting, S_URL_OPENPAREN_SYMS); // Account for the query string\n\n  makeMultiT(S_URL, qsAccepting, S_URL);\n  makeMultiT(S_URL_NON_ACCEPTING, qsAccepting, S_URL);\n  makeMultiT(S_URL, qsNonAccepting, S_URL_NON_ACCEPTING);\n  makeMultiT(S_URL_NON_ACCEPTING, qsNonAccepting, S_URL_NON_ACCEPTING); // Email address-specific state definitions\n  // Note: We are not allowing '/' in email addresses since this would interfere\n  // with real URLs\n  // For addresses with the mailto prefix\n  // 'mailto:' followed by anything sane is a valid email\n\n  makeT(S_MAILTO, TLD, S_MAILTO_EMAIL);\n  makeT(S_MAILTO, DOMAIN, S_MAILTO_EMAIL);\n  makeT(S_MAILTO, NUM, S_MAILTO_EMAIL);\n  makeT(S_MAILTO, LOCALHOST, S_MAILTO_EMAIL); // Greedily get more potential valid email values\n\n  makeMultiT(S_MAILTO_EMAIL, qsAccepting, S_MAILTO_EMAIL);\n  makeMultiT(S_MAILTO_EMAIL, qsNonAccepting, S_MAILTO_EMAIL_NON_ACCEPTING);\n  makeMultiT(S_MAILTO_EMAIL_NON_ACCEPTING, qsAccepting, S_MAILTO_EMAIL);\n  makeMultiT(S_MAILTO_EMAIL_NON_ACCEPTING, qsNonAccepting, S_MAILTO_EMAIL_NON_ACCEPTING); // For addresses without the mailto prefix\n  // Tokens allowed in the localpart of the email\n\n  var localpartAccepting = [AMPERSAND, APOSTROPHE, ASTERISK, BACKSLASH, BACKTICK, CARET, CLOSEBRACE, DOLLAR, DOMAIN, EQUALS, HYPHEN, NUM, OPENBRACE, PERCENT, PIPE, PLUS, POUND, QUERY, SLASH, SYM, TILDE, TLD, UNDERSCORE]; // Some of the tokens in `localpartAccepting` are already accounted for here and\n  // will not be overwritten (don't worry)\n\n  makeMultiT(S_DOMAIN, localpartAccepting, S_LOCALPART);\n  makeT(S_DOMAIN, AT, S_LOCALPART_AT);\n  makeMultiT(S_TLD, localpartAccepting, S_LOCALPART);\n  makeT(S_TLD, AT, S_LOCALPART_AT);\n  makeMultiT(S_DOMAIN_DOT, localpartAccepting, S_LOCALPART); // Now in localpart of address\n  // TODO: IP addresses and what if the email starts with numbers?\n\n  makeMultiT(S_LOCALPART, localpartAccepting, S_LOCALPART);\n  makeT(S_LOCALPART, AT, S_LOCALPART_AT); // close to an email address now\n\n  makeT(S_LOCALPART, DOT, S_LOCALPART_DOT);\n  makeMultiT(S_LOCALPART_DOT, localpartAccepting, S_LOCALPART);\n  makeT(S_LOCALPART_AT, TLD, S_EMAIL_DOMAIN);\n  makeT(S_LOCALPART_AT, DOMAIN, S_EMAIL_DOMAIN);\n  makeT(S_LOCALPART_AT, NUM, S_EMAIL_DOMAIN);\n  makeT(S_LOCALPART_AT, LOCALHOST, S_EMAIL); // States following `@` defined above\n\n  return S_START;\n}\n/**\n * Run the parser state machine on a list of scanned string-based tokens to\n * create a list of multi tokens, each of which represents a URL, email address,\n * plain text, etc.\n *\n * @param {State} start parser start state\n * @param {string} input the original input used to generate the given tokens\n * @param {{t: string, v: string, s: number, e: number}[]} tokens list of scanned tokens\n * @returns {MultiToken[]}\n */\n\nfunction run(start, input, tokens) {\n  var len = tokens.length;\n  var cursor = 0;\n  var multis = [];\n  var textTokens = [];\n\n  while (cursor < len) {\n    var state = start;\n    var secondState = null;\n    var nextState = null;\n    var multiLength = 0;\n    var latestAccepting = null;\n    var sinceAccepts = -1;\n\n    while (cursor < len && !(secondState = takeT(state, tokens[cursor].t))) {\n      // Starting tokens with nowhere to jump to.\n      // Consider these to be just plain text\n      textTokens.push(tokens[cursor++]);\n    }\n\n    while (cursor < len && (nextState = secondState || takeT(state, tokens[cursor].t))) {\n      // Get the next state\n      secondState = null;\n      state = nextState; // Keep track of the latest accepting state\n\n      if (state.accepts()) {\n        sinceAccepts = 0;\n        latestAccepting = state;\n      } else if (sinceAccepts >= 0) {\n        sinceAccepts++;\n      }\n\n      cursor++;\n      multiLength++;\n    }\n\n    if (sinceAccepts < 0) {\n      // No accepting state was found, part of a regular text token\n      // Add all the tokens we looked at to the text tokens array\n      for (var i = cursor - multiLength; i < cursor; i++) {\n        textTokens.push(tokens[i]);\n      }\n    } else {\n      // Accepting state!\n      // First close off the textTokens (if available)\n      if (textTokens.length > 0) {\n        multis.push(parserCreateMultiToken(Text, input, textTokens));\n        textTokens = [];\n      } // Roll back to the latest accepting state\n\n\n      cursor -= sinceAccepts;\n      multiLength -= sinceAccepts; // Create a new multitoken\n\n      var Multi = latestAccepting.t;\n      var subtokens = tokens.slice(cursor - multiLength, cursor);\n      multis.push(parserCreateMultiToken(Multi, input, subtokens));\n    }\n  } // Finally close off the textTokens (if available)\n\n\n  if (textTokens.length > 0) {\n    multis.push(parserCreateMultiToken(Text, input, textTokens));\n  }\n\n  return multis;\n}\n/**\n * Utility function for instantiating a new multitoken with all the relevant\n * fields during parsing.\n * @param {Class<MultiToken>} Multi class to instantiate\n * @param {string} input original input string\n * @param {{t: string, v: string, s: number, e: number}[]} tokens consecutive tokens scanned from input string\n * @returns {MultiToken}\n */\n\nfunction parserCreateMultiToken(Multi, input, tokens) {\n  var startIdx = tokens[0].s;\n  var endIdx = tokens[tokens.length - 1].e;\n  var value = input.substr(startIdx, endIdx - startIdx);\n  return new Multi(value, tokens);\n}\n\nvar warn = typeof console !== 'undefined' && console && console.warn || function () {}; // Side-effect initialization state\n\n\nvar INIT = {\n  scanner: null,\n  parser: null,\n  pluginQueue: [],\n  customProtocols: [],\n  initialized: false\n};\n/**\n * De-register all plugins and reset the internal state-machine. Used for\n * testing; not required in practice.\n * @private\n */\n\nfunction reset() {\n  INIT.scanner = null;\n  INIT.parser = null;\n  INIT.pluginQueue = [];\n  INIT.customProtocols = [];\n  INIT.initialized = false;\n}\n/**\n * Register a linkify extension plugin\n * @param {string} name of plugin to register\n * @param {Function} plugin function that accepts mutable linkify state\n */\n\nfunction registerPlugin(name, plugin) {\n  for (var i = 0; i < INIT.pluginQueue.length; i++) {\n    if (name === INIT.pluginQueue[i][0]) {\n      warn(\"linkifyjs: plugin \\\"\".concat(name, \"\\\" already registered - will be overwritten\"));\n      INIT.pluginQueue[i] = [name, plugin];\n      return;\n    }\n  }\n\n  INIT.pluginQueue.push([name, plugin]);\n\n  if (INIT.initialized) {\n    warn(\"linkifyjs: already initialized - will not register plugin \\\"\".concat(name, \"\\\" until you manually call linkify.init(). To avoid this warning, please register all plugins before invoking linkify the first time.\"));\n  }\n}\n/**\n * Detect URLs with the following additional protocol. Anything following\n * \"protocol:\" will be considered a link.\n * @param {string} protocol\n */\n\nfunction registerCustomProtocol(protocol) {\n  if (INIT.initialized) {\n    warn(\"linkifyjs: already initialized - will not register custom protocol \\\"\".concat(protocol, \"\\\" until you manually call linkify.init(). To avoid this warning, please register all custom protocols before invoking linkify the first time.\"));\n  }\n\n  if (!/^[a-z-]+$/.test(protocol)) {\n    throw Error('linkifyjs: protocols containing characters other than a-z or - (hyphen) are not supported');\n  }\n\n  INIT.customProtocols.push(protocol);\n}\n/**\n * Initialize the linkify state machine. Called automatically the first time\n * linkify is called on a string, but may be called manually as well.\n */\n\nfunction init() {\n  // Initialize state machines\n  INIT.scanner = {\n    start: init$2(INIT.customProtocols),\n    tokens: text\n  };\n  INIT.parser = {\n    start: init$1(),\n    tokens: multi\n  };\n  var utils = {\n    createTokenClass: createTokenClass\n  }; // Initialize plugins\n\n  for (var i = 0; i < INIT.pluginQueue.length; i++) {\n    INIT.pluginQueue[i][1]({\n      scanner: INIT.scanner,\n      parser: INIT.parser,\n      utils: utils\n    });\n  }\n\n  INIT.initialized = true;\n}\n/**\n\tParse a string into tokens that represent linkable and non-linkable sub-components\n\t@param {string} str\n\t@return {MultiToken[]} tokens\n*/\n\nfunction tokenize(str) {\n  if (!INIT.initialized) {\n    init();\n  }\n\n  return run(INIT.parser.start, str, run$1(INIT.scanner.start, str));\n}\n/**\n\tFind a list of linkable items in the given string.\n\t@param {string} str string to find links in\n\t@param {string} [type] (optional) only find links of a specific type, e.g.,\n\t'url' or 'email'\n*/\n\nfunction find(str) {\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var tokens = tokenize(str);\n  var filtered = [];\n\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (token.isLink && (!type || token.t === type)) {\n      filtered.push(token.toObject());\n    }\n  }\n\n  return filtered;\n}\n/**\n * Is the given string valid linkable text of some sort. Note that this does not\n * trim the text for you.\n *\n * Optionally pass in a second `type` param, which is the type of link to test\n * for.\n *\n * For example,\n *\n *     linkify.test(str, 'email');\n *\n * Returns `true` if str is a valid email.\n * @param {string} str string to test for links\n * @param {string} [type] optional specific link type to look for\n * @returns boolean true/false\n */\n\nfunction test(str) {\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var tokens = tokenize(str);\n  return tokens.length === 1 && tokens[0].isLink && (!type || tokens[0].t === type);\n}\n\nexport { Options, find, init, options, registerCustomProtocol, registerPlugin, reset, test, tokenize };\n","export * from \"../node_modules/preact/dist/preact.module.js\";\n\nimport { h } from \"../node_modules/preact/dist/preact.module.js\";\nimport htm from \"../node_modules/htm/dist/htm.module.js\";\nexport const html = htm.bind(h);\n\nimport * as linkifyjs from \"../node_modules/linkifyjs/dist/linkify.module.js\";\nexport { linkifyjs };\n","// RFC 1459\nexport const RPL_WELCOME = \"001\";\nexport const RPL_YOURHOST = \"002\";\nexport const RPL_CREATED = \"003\";\nexport const RPL_MYINFO = \"004\";\nexport const RPL_ISUPPORT = \"005\";\nexport const RPL_UMODEIS = \"221\";\nexport const RPL_WHOISUSER = \"311\";\nexport const RPL_WHOISSERVER = \"312\";\nexport const RPL_WHOISOPERATOR = \"313\";\nexport const RPL_WHOISIDLE = \"317\";\nexport const RPL_ENDOFWHOIS = \"318\";\nexport const RPL_WHOISCHANNELS = \"319\";\nexport const RPL_ENDOFWHO = \"315\";\nexport const RPL_CHANNELMODEIS = \"324\";\nexport const RPL_NOTOPIC = \"331\";\nexport const RPL_TOPIC = \"332\";\nexport const RPL_TOPICWHOTIME = \"333\";\nexport const RPL_INVITING = \"341\";\nexport const RPL_INVITELIST = \"346\";\nexport const RPL_ENDOFINVITELIST = \"347\";\nexport const RPL_EXCEPTLIST = \"348\";\nexport const RPL_ENDOFEXCEPTLIST = \"349\";\nexport const RPL_WHOREPLY = \"352\";\nexport const RPL_NAMREPLY = \"353\";\nexport const RPL_WHOSPCRPL = \"354\";\nexport const RPL_ENDOFNAMES = \"366\";\nexport const RPL_BANLIST = \"367\";\nexport const RPL_ENDOFBANLIST = \"368\";\nexport const RPL_MOTD = \"372\";\nexport const RPL_MOTDSTART = \"375\";\nexport const RPL_ENDOFMOTD = \"376\";\nexport const ERR_NOSUCHNICK = \"401\";\nexport const ERR_NOMOTD = \"422\";\nexport const ERR_ERRONEUSNICKNAME = \"432\";\nexport const ERR_NICKNAMEINUSE = \"433\";\nexport const ERR_NICKCOLLISION = \"436\";\nexport const ERR_NOPERMFORHOST = \"463\";\nexport const ERR_PASSWDMISMATCH = \"464\";\nexport const ERR_YOUREBANNEDCREEP = \"465\";\n// RFC 2812\nexport const ERR_UNAVAILRESOURCE = \"437\";\n// Other\nexport const RPL_CREATIONTIME = \"329\";\nexport const RPL_QUIETLIST = \"728\";\nexport const RPL_ENDOFQUIETLIST = \"729\";\n// IRCv3 MONITOR: https://ircv3.net/specs/extensions/monitor\nexport const RPL_MONONLINE = \"730\";\nexport const RPL_MONOFFLINE = \"731\";\nexport const RPL_MONLIST = \"732\";\nexport const RPL_ENDOFMONLIST = \"733\";\nexport const ERR_MONLISTFULL = \"734\";\n// IRCv3 SASL: https://ircv3.net/specs/extensions/sasl-3.1\nexport const RPL_LOGGEDIN = \"900\";\nexport const RPL_LOGGEDOUT = \"901\";\nexport const ERR_NICKLOCKED = \"902\";\nexport const RPL_SASLSUCCESS = \"903\";\nexport const ERR_SASLFAIL = \"904\";\nexport const ERR_SASLTOOLONG = \"905\";\nexport const ERR_SASLABORTED = \"906\";\nexport const ERR_SASLALREADY = \"907\";\n\nexport const STD_MEMBERSHIPS = \"~&@%+\";\nexport const STD_CHANTYPES = \"#&+!\";\nexport const STD_CHANMODES = \"beI,k,l,imnst\";\n\nconst tagEscapeMap = {\n\t\";\": \"\\\\:\",\n\t\" \": \"\\\\s\",\n\t\"\\\\\": \"\\\\\\\\\",\n\t\"\\r\": \"\\\\r\",\n\t\"\\n\": \"\\\\n\",\n};\n\nconst tagUnescapeMap = Object.fromEntries(Object.entries(tagEscapeMap).map(([from, to]) => [to, from]));\n\nfunction escapeTag(s) {\n\treturn String(s).replace(/[; \\\\\\r\\n]/g, (ch) => tagEscapeMap[ch]);\n}\n\nfunction unescapeTag(s) {\n\treturn s.replace(/\\\\[:s\\\\rn]/g, (seq) => tagUnescapeMap[seq]);\n}\n\nexport function parseTags(s) {\n\tlet tags = {};\n\ts.split(\";\").forEach((s) => {\n\t\tif (!s) {\n\t\t\treturn;\n\t\t}\n\t\tlet parts = s.split(\"=\", 2);\n\t\tlet k = parts[0];\n\t\tlet v = null;\n\t\tif (parts.length == 2) {\n\t\t\tv = unescapeTag(parts[1]);\n\t\t\tif (v.endsWith(\"\\\\\")) {\n\t\t\t\tv = v.slice(0, v.length - 1)\n\t\t\t}\n\t\t}\n\t\ttags[k] = v;\n\t});\n\treturn tags;\n}\n\nexport function formatTags(tags) {\n\tlet l = [];\n\tfor (let k in tags) {\n\t\tif (tags[k] === undefined || tags[k] === null) {\n\t\t\tl.push(k);\n\t\t\tcontinue;\n\t\t}\n\t\tlet v = escapeTag(tags[k]);\n\t\tl.push(k + \"=\" + v);\n\t}\n\treturn l.join(\";\");\n}\n\nexport function parsePrefix(s) {\n\tlet prefix = {\n\t\tname: null,\n\t\tuser: null,\n\t\thost: null,\n\t};\n\n\tlet host = null;\n\tlet i = s.indexOf(\"@\");\n\tif (i > 0) {\n\t\thost = s.slice(i + 1);\n\t\ts = s.slice(0, i);\n\t}\n\n\tlet user = null;\n\ti = s.indexOf(\"!\");\n\tif (i > 0) {\n\t\tuser = s.slice(i + 1);\n\t\ts = s.slice(0, i);\n\t}\n\n\treturn { name: s, user, host };\n}\n\nfunction formatPrefix(prefix) {\n\tlet s = prefix.name;\n\tif (prefix.user) {\n\t\ts += \"!\" + prefix.user;\n\t}\n\tif (prefix.host) {\n\t\ts += \"@\" + prefix.host;\n\t}\n\treturn s;\n}\n\nexport function parseMessage(s) {\n\tif (s.endsWith(\"\\r\\n\")) {\n\t\ts = s.slice(0, s.length - 2);\n\t}\n\n\tlet msg = {\n\t\ttags: {},\n\t\tprefix: null,\n\t\tcommand: null,\n\t\tparams: [],\n\t};\n\n\tif (s.startsWith(\"@\")) {\n\t\tlet i = s.indexOf(\" \");\n\t\tif (i < 0) {\n\t\t\tthrow new Error(\"expected a space after tags\");\n\t\t}\n\t\tmsg.tags = parseTags(s.slice(1, i));\n\t\ts = s.slice(i + 1);\n\t}\n\n\tif (s.startsWith(\":\")) {\n\t\tlet i = s.indexOf(\" \");\n\t\tif (i < 0) {\n\t\t\tthrow new Error(\"expected a space after prefix\");\n\t\t}\n\t\tmsg.prefix = parsePrefix(s.slice(1, i));\n\t\ts = s.slice(i + 1);\n\t}\n\n\tlet i = s.indexOf(\" \");\n\tif (i < 0) {\n\t\tmsg.command = s;\n\t\treturn msg;\n\t}\n\tmsg.command = s.slice(0, i);\n\ts = s.slice(i + 1);\n\n\twhile (true) {\n\t\tif (s.startsWith(\":\")) {\n\t\t\tmsg.params.push(s.slice(1));\n\t\t\tbreak;\n\t\t}\n\n\t\ti = s.indexOf(\" \");\n\t\tif (i < 0) {\n\t\t\tmsg.params.push(s);\n\t\t\tbreak;\n\t\t}\n\n\t\tmsg.params.push(s.slice(0, i));\n\t\ts = s.slice(i + 1);\n\t}\n\n\treturn msg;\n}\n\nexport function formatMessage(msg) {\n\tlet s = \"\";\n\tif (msg.tags && Object.keys(msg.tags).length > 0) {\n\t\ts += \"@\" + formatTags(msg.tags) + \" \";\n\t}\n\tif (msg.prefix) {\n\t\ts += \":\" + formatPrefix(msg.prefix) + \" \";\n\t}\n\ts += msg.command;\n\tif (msg.params && msg.params.length > 0) {\n\t\tfor (let i = 0; i < msg.params.length - 1; i++) {\n\t\t\ts += \" \" + msg.params[i]\n\t\t}\n\n\t\tlet last = String(msg.params[msg.params.length - 1]);\n\t\tif (last.length === 0 || last.startsWith(\":\") || last.indexOf(\" \") >= 0) {\n\t\t\ts += \" :\" + last;\n\t\t} else {\n\t\t\ts += \" \" + last;\n\t\t}\n\t}\n\treturn s;\n}\n\n/** Split a prefix and a name out of a target. */\nexport function parseTargetPrefix(s, allowedPrefixes = STD_MEMBERSHIPS) {\n\tlet i;\n\tfor (i = 0; i < s.length; i++) {\n\t\tif (allowedPrefixes.indexOf(s[i]) < 0) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn {\n\t\tprefix: s.slice(0, i),\n\t\tname: s.slice(i),\n\t};\n}\n\nconst alphaNum = (() => {\n\ttry {\n\t\treturn new RegExp(/^\\p{L}$/, \"u\");\n\t} catch (e) {\n\t\treturn new RegExp(/^[a-zA-Z0-9]$/, \"u\");\n\t}\n})();\n\nfunction isWordBoundary(ch) {\n\tswitch (ch) {\n\tcase \"-\":\n\tcase \"_\":\n\tcase \"|\":\n\t\treturn false;\n\tcase \"\\u00A0\":\n\t\treturn true;\n\tdefault:\n\t\treturn !alphaNum.test(ch);\n\t}\n}\n\nexport function isHighlight(msg, nick, cm) {\n\tif (msg.command != \"PRIVMSG\" && msg.command != \"NOTICE\") {\n\t\treturn false;\n\t}\n\n\tnick = cm(nick);\n\n\tif (msg.prefix && cm(msg.prefix.name) == nick) {\n\t\treturn false; // Our own messages aren't highlights\n\t}\n\n\tlet text = cm(msg.params[1]);\n\twhile (true) {\n\t\tlet i = text.indexOf(nick);\n\t\tif (i < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect word boundaries\n\t\tlet left = \"\\x00\", right = \"\\x00\";\n\t\tif (i > 0) {\n\t\t\tleft = text[i - 1];\n\t\t}\n\t\tif (i < text.length) {\n\t\t\tright = text[i + nick.length];\n\t\t}\n\t\tif (isWordBoundary(left) && isWordBoundary(right)) {\n\t\t\treturn true;\n\t\t}\n\n\t\ttext = text.slice(i + nick.length);\n\t}\n}\n\nexport function isServerBroadcast(msg) {\n\tif (msg.command != \"PRIVMSG\" && msg.command != \"NOTICE\") {\n\t\treturn false;\n\t}\n\treturn msg.params[0].startsWith(\"$\");\n}\n\nexport function isError(cmd) {\n\tif (cmd >= \"400\" && cmd <= \"568\") {\n\t\treturn true;\n\t}\n\tswitch (cmd) {\n\tcase ERR_NICKLOCKED:\n\tcase ERR_SASLFAIL:\n\tcase ERR_SASLTOOLONG:\n\tcase ERR_SASLABORTED:\n\tcase ERR_SASLALREADY:\n\tcase ERR_MONLISTFULL:\n\t\treturn true;\n\tcase \"FAIL\":\n\t\treturn true;\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nexport function formatDate(date) {\n\t// ISO 8601\n\tlet YYYY = date.getUTCFullYear().toString().padStart(4, \"0\");\n\tlet MM = (date.getUTCMonth() + 1).toString().padStart(2, \"0\");\n\tlet DD = date.getUTCDate().toString().padStart(2, \"0\");\n\tlet hh = date.getUTCHours().toString().padStart(2, \"0\");\n\tlet mm = date.getUTCMinutes().toString().padStart(2, \"0\");\n\tlet ss = date.getUTCSeconds().toString().padStart(2, \"0\");\n\tlet sss = date.getUTCMilliseconds().toString().padStart(3, \"0\");\n\treturn `${YYYY}-${MM}-${DD}T${hh}:${mm}:${ss}.${sss}Z`;\n}\n\nexport function parseCTCP(msg) {\n\tif (msg.command != \"PRIVMSG\" && msg.command != \"NOTICE\") {\n\t\treturn null;\n\t}\n\n\tlet text = msg.params[1];\n\tif (!text.startsWith(\"\\x01\")) {\n\t\treturn null;\n\t}\n\ttext = text.slice(1);\n\tif (text.endsWith(\"\\x01\")) {\n\t\ttext = text.slice(0, -1);\n\t}\n\n\tlet ctcp;\n\tlet i = text.indexOf(\" \");\n\tif (i >= 0) {\n\t\tctcp = { command: text.slice(0, i), param: text.slice(i + 1) };\n\t} else {\n\t\tctcp = { command: text, param: \"\" };\n\t}\n\tctcp.command = ctcp.command.toUpperCase();\n\treturn ctcp;\n}\n\nfunction unescapeISUPPORTValue(s) {\n\treturn s.replace(/\\\\x[0-9A-Z]{2}/gi, (esc) => {\n\t\tlet hex = esc.slice(2);\n\t\treturn String.fromCharCode(parseInt(hex, 16));\n\t});\n}\n\nexport function parseISUPPORT(tokens, params) {\n\tlet changed = [];\n\ttokens.forEach((tok) => {\n\t\tif (tok.startsWith(\"-\")) {\n\t\t\tlet k = tok.slice(1);\n\t\t\tparams.delete(k.toUpperCase());\n\t\t\treturn;\n\t\t}\n\n\t\tlet i = tok.indexOf(\"=\");\n\t\tlet k = tok, v = \"\";\n\t\tif (i >= 0) {\n\t\t\tk = tok.slice(0, i);\n\t\t\tv = unescapeISUPPORTValue(tok.slice(i + 1));\n\t\t}\n\n\t\tk = k.toUpperCase();\n\n\t\tparams.set(k, v);\n\t\tchanged.push(k);\n\t});\n\treturn changed;\n}\n\nexport const CaseMapping = {\n\tASCII(str) {\n\t\tlet out = \"\";\n\t\tfor (let i = 0; i < str.length; i++) {\n\t\t\tlet ch = str[i];\n\t\t\tif (\"A\" <= ch && ch <= \"Z\") {\n\t\t\t\tch = ch.toLowerCase();\n\t\t\t}\n\t\t\tout += ch;\n\t\t}\n\t\treturn out;\n\t},\n\n\tRFC1459(str) {\n\t\tlet out = \"\";\n\t\tfor (let i = 0; i < str.length; i++) {\n\t\t\tlet ch = str[i];\n\t\t\tif (\"A\" <= ch && ch <= \"Z\") {\n\t\t\t\tch = ch.toLowerCase();\n\t\t\t} else if (ch == \"{\") {\n\t\t\t\tch = \"[\";\n\t\t\t} else if (ch == \"}\") {\n\t\t\t\tch = \"]\";\n\t\t\t} else if (ch == \"\\\\\") {\n\t\t\t\tch = \"|\";\n\t\t\t} else if (ch == \"~\") {\n\t\t\t\tch = \"^\";\n\t\t\t}\n\t\t\tout += ch;\n\t\t}\n\t\treturn out;\n\t},\n\n\tRFC1459Strict(str) {\n\t\tlet out = \"\";\n\t\tfor (let i = 0; i < str.length; i++) {\n\t\t\tlet ch = str[i];\n\t\t\tif (\"A\" <= ch && ch <= \"Z\") {\n\t\t\t\tch = ch.toLowerCase();\n\t\t\t} else if (ch == \"{\") {\n\t\t\t\tch = \"[\";\n\t\t\t} else if (ch == \"}\") {\n\t\t\t\tch = \"]\";\n\t\t\t} else if (ch == \"\\\\\") {\n\t\t\t\tch = \"|\";\n\t\t\t}\n\t\t\tout += ch;\n\t\t}\n\t\treturn out;\n\t},\n\n\tbyName(name) {\n\t\tswitch (name) {\n\t\tcase \"ascii\":\n\t\t\treturn CaseMapping.ASCII;\n\t\tcase \"rfc1459\":\n\t\t\treturn CaseMapping.RFC1459;\n\t\tcase \"rfc1459-strict\":\n\t\t\treturn CaseMapping.RFC1459Strict;\n\t\t}\n\t\treturn null;\n\t},\n};\n\nfunction createIterator(next) {\n\tlet it = { next };\n\t// Not defining this can lead to surprises when feeding the iterator\n\t// to e.g. Array.from\n\tit[Symbol.iterator] = () => it;\n\treturn it;\n}\n\nfunction mapIterator(it, f) {\n\treturn createIterator(() => {\n\t\tlet { value, done } = it.next();\n\t\tif (done) {\n\t\t\treturn { done: true };\n\t\t}\n\t\treturn { value: f(value), done: false };\n\t});\n}\n\nexport class CaseMapMap {\n\tcaseMap = null;\n\tmap = null;\n\n\tconstructor(iterable, cm) {\n\t\tif ((iterable instanceof CaseMapMap) && (iterable.caseMap === cm || !cm)) {\n\t\t\t// Fast-path if we're just cloning another CaseMapMap\n\t\t\tthis.caseMap = iterable.caseMap;\n\t\t\tthis.map = new Map(iterable.map);\n\t\t} else {\n\t\t\tif (!cm) {\n\t\t\t\tthrow new Error(\"Missing case-mapping when creating CaseMapMap\");\n\t\t\t}\n\n\t\t\tthis.caseMap = cm;\n\t\t\tthis.map = new Map();\n\n\t\t\tif (iterable) {\n\t\t\t\tfor (let [key, value] of iterable) {\n\t\t\t\t\tthis.set(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tget size() {\n\t\treturn this.map.size;\n\t}\n\n\thas(key) {\n\t\treturn this.map.has(this.caseMap(key));\n\t}\n\n\tget(key) {\n\t\tlet kv = this.map.get(this.caseMap(key));\n\t\tif (kv) {\n\t\t\treturn kv.value;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tset(key, value) {\n\t\tthis.map.set(this.caseMap(key), { key, value });\n\t}\n\n\tdelete(key) {\n\t\tthis.map.delete(this.caseMap(key));\n\t}\n\n\tentries() {\n\t\tlet it = this.map.values();\n\t\treturn mapIterator(it, (kv) => {\n\t\t\treturn [kv.key, kv.value];\n\t\t});\n\t}\n\n\tkeys() {\n\t\tlet it = this.map.values();\n\t\treturn mapIterator(it, (kv) => {\n\t\t\treturn kv.key;\n\t\t});\n\t}\n\n\tvalues() {\n\t\tlet it = this.map.values();\n\t\treturn mapIterator(it, (kv) => {\n\t\t\treturn kv.value;\n\t\t});\n\t}\n\n\t[Symbol.iterator]() {\n\t\treturn this.entries();\n\t}\n}\n\n/** Parse the ISUPPORT PREFIX token */\nexport function parseMembershipModes(str) {\n\tif (str[0] !== \"(\") {\n\t\tthrow new Error(\"malformed ISUPPORT PREFIX value: expected opening parenthesis\");\n\t}\n\n\tlet sep = str.indexOf(\")\");\n\tif (sep < 0) {\n\t\tthrow new Error(\"malformed ISUPPORT PREFIX value: expected closing parenthesis\");\n\t}\n\n\tlet n = str.length - sep - 1;\n\tlet memberships = [];\n\tfor (let i = 0; i < n; i++) {\n\t\tlet mode = str[i + 1];\n\t\tlet prefix = str[sep + i + 1];\n\t\tmemberships.push({ mode, prefix });\n\t}\n\treturn memberships;\n}\n\nexport function findBatchByType(msg, type) {\n\tlet batch = msg.batch;\n\twhile (batch) {\n\t\tif (batch.type === type) {\n\t\t\treturn batch;\n\t\t}\n\t\tbatch = batch.parent;\n\t}\n\treturn null;\n}\n\nexport function getMessageLabel(msg) {\n\tif (msg.tags.label) {\n\t\treturn msg.tags.label;\n\t}\n\n\tlet batch = msg.batch;\n\twhile (batch) {\n\t\tif (batch.tags.label) {\n\t\t\treturn batch.tags.label;\n\t\t}\n\t\tbatch = batch.parent;\n\t}\n\n\treturn null;\n}\n\nexport function forEachChannelModeUpdate(msg, isupport, callback) {\n\tlet chanmodes = isupport.get(\"CHANMODES\") || STD_CHANMODES;\n\tlet prefix = isupport.get(\"PREFIX\") || \"\";\n\n\tlet typeByMode = new Map();\n\tlet [a, b, c, d] = chanmodes.split(\",\");\n\tArray.from(a).forEach((mode) => typeByMode.set(mode, \"A\"));\n\tArray.from(b).forEach((mode) => typeByMode.set(mode, \"B\"));\n\tArray.from(c).forEach((mode) => typeByMode.set(mode, \"C\"));\n\tArray.from(d).forEach((mode) => typeByMode.set(mode, \"D\"));\n\tparseMembershipModes(prefix).forEach((membership) => typeByMode.set(membership.mode, \"B\"));\n\n\tif (msg.command !== \"MODE\") {\n\t\tthrow new Error(\"Expected a MODE message\");\n\t}\n\tlet change = msg.params[1];\n\tlet args = msg.params.slice(2);\n\n\tlet plusMinus = null;\n\tlet j = 0;\n\tfor (let i = 0; i < change.length; i++) {\n\t\tif (change[i] === \"+\" || change[i] === \"-\") {\n\t\t\tplusMinus = change[i];\n\t\t\tcontinue;\n\t\t}\n\t\tif (!plusMinus) {\n\t\t\tthrow new Error(\"malformed mode string: missing plus/minus\");\n\t\t}\n\n\t\tlet mode = change[i];\n\t\tlet add = plusMinus === \"+\";\n\n\t\tlet modeType = typeByMode.get(mode);\n\t\tif (!modeType) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet arg = null;\n\t\tif (modeType === \"A\" || modeType === \"B\" || (modeType === \"C\" && add)) {\n\t\t\targ = args[j];\n\t\t\tj++;\n\t\t}\n\n\t\tcallback(mode, add, arg);\n\t}\n}\n\n/**\n * Check if a realname is worth displaying.\n *\n * Since the realname is mandatory, many clients set a meaningless realname.\n */\nexport function isMeaningfulRealname(realname, nick) {\n\tif (!realname || realname === nick) {\n\t\treturn false;\n\t}\n\n\tif (realname.toLowerCase() === \"realname\" || realname.toLowerCase() === \"unknown\" || realname.toLowerCase() === \"fullname\") {\n\t\treturn false;\n\t}\n\n\t// TODO: add more quirks\n\n\treturn true;\n}\n\n/* Parse an irc:// URL.\n *\n * See: https://datatracker.ietf.org/doc/html/draft-butcher-irc-url-04\n */\nexport function parseURL(str) {\n\tif (!str.startsWith(\"irc://\") && !str.startsWith(\"ircs://\")) {\n\t\treturn null;\n\t}\n\n\tstr = str.slice(str.indexOf(\":\") + \"://\".length);\n\n\tlet loc;\n\tlet i = str.indexOf(\"/\");\n\tif (i < 0) {\n\t\tloc = str;\n\t\tstr = \"\";\n\t} else {\n\t\tloc = str.slice(0, i);\n\t\tstr = str.slice(i + 1);\n\t}\n\n\tlet host = loc;\n\ti = loc.indexOf(\"@\");\n\tif (i >= 0) {\n\t\thost = loc.slice(i + 1);\n\t\t// TODO: parse authinfo\n\t}\n\n\ti = str.indexOf(\"?\");\n\tif (i >= 0) {\n\t\tstr = str.slice(0, i);\n\t\t// TODO: parse options\n\t}\n\n\tlet enttype;\n\ti = str.indexOf(\",\");\n\tif (i >= 0) {\n\t\tlet flags = str.slice(i + 1).split(\",\");\n\t\tstr = str.slice(0, i);\n\n\t\tif (flags.indexOf(\"isuser\") >= 0) {\n\t\t\tenttype = \"user\";\n\t\t} else if (flags.indexOf(\"ischannel\") >= 0) {\n\t\t\tenttype = \"channel\";\n\t\t}\n\n\t\t// TODO: parse hosttype\n\t}\n\n\tlet entity = decodeURIComponent(str);\n\tif (!enttype) {\n\t\t// TODO: technically we should use the PREFIX ISUPPORT here\n\t\tenttype = entity.startsWith(\"#\") ? \"channel\" : \"user\";\n\t}\n\n\treturn { host, enttype, entity };\n}\n","import * as irc from \"./irc.js\";\n\n// Static list of capabilities that are always requested when supported by the\n// server\nconst permanentCaps = [\n\t\"account-notify\",\n\t\"away-notify\",\n\t\"batch\",\n\t\"chghost\",\n\t\"echo-message\",\n\t\"extended-join\",\n\t\"invite-notify\",\n\t\"labeled-response\",\n\t\"message-tags\",\n\t\"multi-prefix\",\n\t\"server-time\",\n\t\"setname\",\n\n\t\"draft/chathistory\",\n\t\"draft/event-playback\",\n\t\"draft/extended-monitor\",\n\n\t\"soju.im/bouncer-networks\",\n];\n\nconst RECONNECT_DELAY_SEC = 10;\n\n// WebSocket status codes\n// https://www.rfc-editor.org/rfc/rfc6455.html#section-7.4.1\nconst NORMAL_CLOSURE = 1000;\nconst GOING_AWAY = 1001;\nconst UNSUPPORTED_DATA = 1003;\n\n// See https://github.com/quakenet/snircd/blob/master/doc/readme.who\n// Sorted by order of appearance in RPL_WHOSPCRPL\nconst WHOX_FIELDS = {\n\t\"channel\": \"c\",\n\t\"username\": \"u\",\n\t\"hostname\": \"h\",\n\t\"server\": \"s\",\n\t\"nick\": \"n\",\n\t\"flags\": \"f\",\n\t\"account\": \"a\",\n\t\"realname\": \"r\",\n};\n\nlet lastLabel = 0;\nlet lastWhoxToken = 0;\n\nexport default class Client extends EventTarget {\n\tstatic Status = {\n\t\tDISCONNECTED: \"disconnected\",\n\t\tCONNECTING: \"connecting\",\n\t\tREGISTERING: \"registering\",\n\t\tREGISTERED: \"registered\",\n\t};\n\n\tstatus = Client.Status.DISCONNECTED;\n\tserverPrefix = { name: \"*\" };\n\tnick = null;\n\tsupportsCap = false;\n\tavailableCaps = {};\n\tenabledCaps = {};\n\tisupport = new Map();\n\n\tws = null;\n\tparams = {\n\t\turl: null,\n\t\tusername: null,\n\t\trealname: null,\n\t\tnick: null,\n\t\tpass: null,\n\t\tsaslPlain: null,\n\t\tsaslExternal: false,\n\t\tbouncerNetwork: null,\n\t};\n\tbatches = new Map();\n\tautoReconnect = true;\n\treconnectTimeoutID = null;\n\tpingIntervalID = null;\n\tpendingCmds = {\n\t\tWHO: Promise.resolve(null),\n\t\tCHATHISTORY: Promise.resolve(null),\n\t};\n\tcm = irc.CaseMapping.RFC1459;\n\tmonitored = new irc.CaseMapMap(null, irc.CaseMapping.RFC1459);\n\tpendingLists = new irc.CaseMapMap(null, irc.CaseMapping.RFC1459);\n\twhoxQueries = new Map();\n\n\tconstructor(params) {\n\t\tsuper();\n\n\t\tthis.params = { ...this.params, ...params };\n\n\t\tthis.reconnect();\n\t}\n\n\treconnect() {\n\t\tlet autoReconnect = this.autoReconnect;\n\t\tthis.disconnect();\n\t\tthis.autoReconnect = autoReconnect;\n\n\t\tconsole.log(\"Connecting to \" + this.params.url);\n\t\tthis.setStatus(Client.Status.CONNECTING);\n\n\t\ttry {\n\t\t\tthis.ws = new WebSocket(this.params.url);\n\t\t} catch (err) {\n\t\t\tconsole.error(\"Failed to create connection:\", err);\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.dispatchEvent(new CustomEvent(\"error\", { detail: \"Failed to create connection: \" + err }));\n\t\t\t\tthis.setStatus(Client.Status.DISCONNECTED);\n\t\t\t}, 0);\n\t\t\treturn;\n\t\t}\n\t\tthis.ws.addEventListener(\"open\", this.handleOpen.bind(this));\n\t\tthis.ws.addEventListener(\"message\", this.handleMessage.bind(this));\n\n\t\tthis.ws.addEventListener(\"close\", (event) => {\n\t\t\tconsole.log(\"Connection closed (code: \" + event.code + \")\");\n\n\t\t\tif (event.code !== NORMAL_CLOSURE && event.code !== GOING_AWAY) {\n\t\t\t\tthis.dispatchEvent(new CustomEvent(\"error\", { detail: \"Connection error\" }));\n\t\t\t}\n\n\t\t\tthis.ws = null;\n\t\t\tthis.setStatus(Client.Status.DISCONNECTED);\n\t\t\tthis.nick = null;\n\t\t\tthis.serverPrefix = null;\n\t\t\tthis.availableCaps = {};\n\t\t\tthis.enabledCaps = {};\n\t\t\tthis.batches = new Map();\n\t\t\tObject.keys(this.pendingCmds).forEach((k) => {\n\t\t\t\tthis.pendingCmds[k] = Promise.resolve(null);\n\t\t\t});\n\t\t\tthis.isupport = new Map();\n\t\t\tthis.monitored = new irc.CaseMapMap(null, irc.CaseMapping.RFC1459);\n\n\t\t\tif (this.autoReconnect) {\n\t\t\t\tif (!navigator.onLine) {\n\t\t\t\t\tconsole.info(\"Waiting for network to go back online\");\n\t\t\t\t\tconst handleOnline = () => {\n\t\t\t\t\t\twindow.removeEventListener(\"online\", handleOnline);\n\t\t\t\t\t\tthis.reconnect();\n\t\t\t\t\t};\n\t\t\t\t\twindow.addEventListener(\"online\", handleOnline);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.info(\"Reconnecting to server in \" + RECONNECT_DELAY_SEC + \" seconds\");\n\t\t\t\t\tclearTimeout(this.reconnectTimeoutID);\n\t\t\t\t\tthis.reconnectTimeoutID = setTimeout(() => {\n\t\t\t\t\t\tthis.reconnect();\n\t\t\t\t\t}, RECONNECT_DELAY_SEC * 1000);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tdisconnect() {\n\t\tthis.autoReconnect = false;\n\n\t\tclearTimeout(this.reconnectTimeoutID);\n\t\tthis.reconnectTimeoutID = null;\n\n\t\tthis.setPingInterval(0);\n\n\t\tif (this.ws) {\n\t\t\tthis.ws.close(NORMAL_CLOSURE);\n\t\t}\n\t}\n\n\tsetStatus(status) {\n\t\tif (this.status === status) {\n\t\t\treturn;\n\t\t}\n\t\tthis.status = status;\n\t\tthis.dispatchEvent(new CustomEvent(\"status\"));\n\t}\n\n\thandleOpen() {\n\t\tconsole.log(\"Connection opened\");\n\t\tthis.setStatus(Client.Status.REGISTERING);\n\n\t\tthis.nick = this.params.nick;\n\n\t\tthis.send({ command: \"CAP\", params: [\"LS\", \"302\"] });\n\t\tif (this.params.pass) {\n\t\t\tthis.send({ command: \"PASS\", params: [this.params.pass] });\n\t\t}\n\t\tthis.send({ command: \"NICK\", params: [this.nick] });\n\t\tthis.send({\n\t\t\tcommand: \"USER\",\n\t\t\tparams: [this.params.username, \"0\", \"*\", this.params.realname],\n\t\t});\n\t}\n\n\tpushPendingList(k, msg) {\n\t\tlet l = this.pendingLists.get(k);\n\t\tif (!l) {\n\t\t\tl = [];\n\t\t\tthis.pendingLists.set(k, l);\n\t\t}\n\t\tl.push(msg);\n\t}\n\n\tendPendingList(k, msg) {\n\t\tmsg.list = this.pendingLists.get(k) || [];\n\t\tthis.pendingLists.delete(k);\n\t}\n\n\thandleMessage(event) {\n\t\tif (typeof event.data !== \"string\") {\n\t\t\tconsole.error(\"Received unsupported data type:\", event.data);\n\t\t\tthis.ws.close(UNSUPPORTED_DATA);\n\t\t\treturn;\n\t\t}\n\n\t\tlet msg = irc.parseMessage(event.data);\n\t\tconsole.debug(\"Received:\", msg);\n\n\t\t// If the prefix is missing, assume it's coming from the server on the\n\t\t// other end of the connection\n\t\tif (!msg.prefix) {\n\t\t\tmsg.prefix = this.serverPrefix;\n\t\t}\n\n\t\tlet msgBatch = null;\n\t\tif (msg.tags[\"batch\"]) {\n\t\t\tmsgBatch = this.batches.get(msg.tags[\"batch\"]);\n\t\t\tif (msgBatch) {\n\t\t\t\tmsg.batch = msgBatch;\n\t\t\t}\n\t\t}\n\n\t\tlet deleteBatch = null;\n\t\tlet k;\n\t\tswitch (msg.command) {\n\t\tcase irc.RPL_WELCOME:\n\t\t\tif (this.params.saslPlain && !this.supportsCap) {\n\t\t\t\tthis.dispatchEvent(new CustomEvent(\"error\", { detail: \"Server doesn't support SASL PLAIN\" }));\n\t\t\t\tthis.disconnect();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (msg.prefix) {\n\t\t\t\tthis.serverPrefix = msg.prefix;\n\t\t\t}\n\n\t\t\tconsole.log(\"Registration complete\");\n\t\t\tthis.setStatus(Client.Status.REGISTERED);\n\t\t\tbreak;\n\t\tcase irc.RPL_ISUPPORT:\n\t\t\tlet tokens = msg.params.slice(1, -1);\n\t\t\tlet changed = irc.parseISUPPORT(tokens, this.isupport);\n\t\t\tif (changed.indexOf(\"CASEMAPPING\") >= 0) {\n\t\t\t\tthis.setCaseMapping(this.isupport.get(\"CASEMAPPING\"));\n\t\t\t}\n\t\t\tif (changed.indexOf(\"MONITOR\") >= 0 && this.isupport.has(\"MONITOR\") && this.monitored.size > 0) {\n\t\t\t\tlet targets = Array.from(this.monitored.keys()).slice(0, this.maxMonitorTargets());\n\t\t\t\tthis.send({ command: \"MONITOR\", params: [\"+\", targets.join(\",\")] });\n\t\t\t}\n\t\t\tbreak;\n\t\tcase irc.RPL_ENDOFMOTD:\n\t\tcase irc.ERR_NOMOTD:\n\t\t\t// These messages are used to indicate the end of the ISUPPORT list\n\t\t\tif (!this.isupport.has(\"CASEMAPPING\")) {\n\t\t\t\t// Server didn't send any CASEMAPPING token, assume RFC 1459\n\t\t\t\tthis.setCaseMapping(\"rfc1459\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"CAP\":\n\t\t\tthis.handleCap(msg);\n\t\t\tbreak;\n\t\tcase \"AUTHENTICATE\":\n\t\t\tthis.handleAuthenticate(msg);\n\t\t\tbreak;\n\t\tcase irc.RPL_LOGGEDIN:\n\t\t\tconsole.log(\"Logged in\");\n\t\t\tbreak;\n\t\tcase irc.RPL_LOGGEDOUT:\n\t\t\tconsole.log(\"Logged out\");\n\t\t\tbreak;\n\t\tcase irc.RPL_SASLSUCCESS:\n\t\t\tconsole.log(\"SASL authentication success\");\n\t\t\tif (this.status != Client.Status.REGISTERED) {\n\t\t\t\tif (this.enabledCaps[\"soju.im/bouncer-networks\"] && this.params.bouncerNetwork) {\n\t\t\t\t\tthis.send({ command: \"BOUNCER\", params: [\"BIND\", this.params.bouncerNetwork] });\n\t\t\t\t}\n\t\t\t\tthis.send({ command: \"CAP\", params: [\"END\"] });\n\t\t\t}\n\t\t\tbreak;\n\t\tcase irc.RPL_NAMREPLY:\n\t\t\tthis.pushPendingList(\"NAMES \" + msg.params[2], msg);\n\t\t\tbreak;\n\t\tcase irc.RPL_ENDOFNAMES:\n\t\t\tthis.endPendingList(\"NAMES \" + msg.params[1], msg);\n\t\t\tbreak;\n\t\tcase irc.RPL_WHOISUSER:\n\t\tcase irc.RPL_WHOISSERVER:\n\t\tcase irc.RPL_WHOISOPERATOR:\n\t\tcase irc.RPL_WHOISIDLE:\n\t\tcase irc.RPL_WHOISCHANNELS:\n\t\t\tthis.pushPendingList(\"WHOIS \" + msg.params[1], msg);\n\t\t\tbreak;\n\t\tcase irc.RPL_ENDOFWHOIS:\n\t\t\tthis.endPendingList(\"WHOIS \" + msg.params[1], msg);\n\t\t\tbreak;\n\t\tcase irc.RPL_WHOREPLY:\n\t\tcase irc.RPL_WHOSPCRPL:\n\t\t\tthis.pushPendingList(\"WHO\", msg);\n\t\t\tbreak;\n\t\tcase irc.RPL_ENDOFWHO:\n\t\t\tthis.endPendingList(\"WHO\", msg);\n\t\t\tbreak;\n\t\tcase irc.ERR_NICKLOCKED:\n\t\tcase irc.ERR_SASLFAIL:\n\t\tcase irc.ERR_SASLTOOLONG:\n\t\tcase irc.ERR_SASLABORTED:\n\t\tcase irc.ERR_SASLALREADY:\n\t\t\tthis.dispatchEvent(new CustomEvent(\"error\", { detail: \"SASL error (\" + msg.command + \"): \" + msg.params[1] }));\n\t\t\tthis.disconnect();\n\t\t\tbreak;\n\t\tcase \"PING\":\n\t\t\tthis.send({ command: \"PONG\", params: [msg.params[0]] });\n\t\t\tbreak;\n\t\tcase \"NICK\":\n\t\t\tlet newNick = msg.params[0];\n\t\t\tif (this.isMyNick(msg.prefix.name)) {\n\t\t\t\tthis.nick = newNick;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"BATCH\":\n\t\t\tlet enter = msg.params[0].startsWith(\"+\");\n\t\t\tlet name = msg.params[0].slice(1);\n\t\t\tif (enter) {\n\t\t\t\tlet batch = {\n\t\t\t\t\tname,\n\t\t\t\t\ttype: msg.params[1],\n\t\t\t\t\tparams: msg.params.slice(2),\n\t\t\t\t\ttags: msg.tags,\n\t\t\t\t\tparent: msgBatch,\n\t\t\t\t};\n\t\t\t\tthis.batches.set(name, batch);\n\t\t\t} else {\n\t\t\t\tdeleteBatch = name;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"ERROR\":\n\t\t\tthis.dispatchEvent(new CustomEvent(\"error\", { detail: \"Fatal IRC error: \" + msg.params[0] }));\n\t\t\tthis.disconnect();\n\t\t\tbreak;\n\t\tcase irc.ERR_PASSWDMISMATCH:\n\t\tcase irc.ERR_ERRONEUSNICKNAME:\n\t\tcase irc.ERR_NICKNAMEINUSE:\n\t\tcase irc.ERR_NICKCOLLISION:\n\t\tcase irc.ERR_UNAVAILRESOURCE:\n\t\tcase irc.ERR_NOPERMFORHOST:\n\t\tcase irc.ERR_YOUREBANNEDCREEP:\n\t\t\tthis.dispatchEvent(new CustomEvent(\"error\", { detail: \"Error (\" + msg.command + \"): \" + msg.params[msg.params.length - 1] }));\n\t\t\tif (this.status != Client.Status.REGISTERED) {\n\t\t\t\tthis.disconnect();\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"FAIL\":\n\t\t\tif (msg.params[0] === \"BOUNCER\" && msg.params[2] === \"BIND\") {\n\t\t\t\tthis.dispatchEvent(new CustomEvent(\"error\", {\n\t\t\t\t\tdetail: \"Failed to bind to bouncer network: \" + msg.params[3],\n\t\t\t\t}));\n\t\t\t\tthis.disconnect();\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\n\t\tthis.dispatchEvent(new CustomEvent(\"message\", {\n\t\t\tdetail: { message: msg, batch: msgBatch },\n\t\t}));\n\n\t\t// Delete after firing the message event so that handlers can access\n\t\t// the batch\n\t\tif (deleteBatch) {\n\t\t\tthis.batches.delete(deleteBatch);\n\t\t}\n\t}\n\n\twho(mask, options) {\n\t\tlet params = [mask];\n\n\t\tlet fields = \"\", token = \"\";\n\t\tif (options && this.isupport.has(\"WHOX\")) {\n\t\t\tlet match = \"\"; // Matches exact channel or nick\n\n\t\t\tfields = \"t\"; // Always include token in reply\n\t\t\tif (options.fields) {\n\t\t\t\toptions.fields.forEach((k) => {\n\t\t\t\t\tif (!WHOX_FIELDS[k]) {\n\t\t\t\t\t\tthrow new Error(`Unknown WHOX field ${k}`);\n\t\t\t\t\t}\n\t\t\t\t\tfields += WHOX_FIELDS[k];\n\t\t\t\t});\n\t\t\t}\n\n\t\t\ttoken = String(lastWhoxToken % 1000);\n\t\t\tlastWhoxToken++;\n\n\t\t\tparams.push(`${match}%${fields},${token}`);\n\t\t\tthis.whoxQueries.set(token, fields);\n\t\t}\n\n\t\tlet msg = { command: \"WHO\", params };\n\t\tlet l = [];\n\t\tlet promise = this.pendingCmds.WHO.then(() => {\n\t\t\treturn this.roundtrip(msg, (msg) => {\n\t\t\t\tswitch (msg.command) {\n\t\t\t\tcase irc.RPL_WHOREPLY:\n\t\t\t\t\tl.push(this.parseWhoReply(msg));\n\t\t\t\t\tbreak;\n\t\t\t\tcase irc.RPL_WHOSPCRPL:\n\t\t\t\t\tif (msg.params.length !== fields.length || msg.params[1] !== token) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tl.push(this.parseWhoReply(msg));\n\t\t\t\t\tbreak;\n\t\t\t\tcase irc.RPL_ENDOFWHO:\n\t\t\t\t\tif (msg.params[1] === mask) {\n\t\t\t\t\t\treturn l;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}).finally(() => {\n\t\t\t\tthis.whoxQueries.delete(token);\n\t\t\t});\n\t\t});\n\t\tthis.pendingCmds.WHO = promise.catch(() => {});\n\t\treturn promise;\n\t}\n\n\tparseWhoReply(msg) {\n\t\tswitch (msg.command) {\n\t\tcase irc.RPL_WHOREPLY:\n\t\t\tlet last = msg.params[msg.params.length - 1];\n\t\t\treturn {\n\t\t\t\tusername: msg.params[2],\n\t\t\t\thostname: msg.params[3],\n\t\t\t\tserver: msg.params[4],\n\t\t\t\tnick: msg.params[5],\n\t\t\t\tflags: msg.params[6],\n\t\t\t\trealname: last.slice(last.indexOf(\" \") + 1),\n\t\t\t};\n\t\tcase irc.RPL_WHOSPCRPL:\n\t\t\tlet token = msg.params[1];\n\t\t\tlet fields = this.whoxQueries.get(token);\n\t\t\tif (!fields) {\n\t\t\t\tthrow new Error(\"Unknown WHOX token: \" + token);\n\t\t\t}\n\t\t\tlet who = {};\n\t\t\tlet i = 0;\n\t\t\tObject.keys(WHOX_FIELDS).forEach((k) => {\n\t\t\t\tif (fields.indexOf(WHOX_FIELDS[k]) < 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\twho[k] = msg.params[2 + i];\n\t\t\t\ti++;\n\t\t\t});\n\t\t\tif (who.account === \"0\") {\n\t\t\t\t// WHOX uses \"0\" to mean \"no account\"\n\t\t\t\twho.account = null;\n\t\t\t}\n\t\t\treturn who;\n\t\tdefault:\n\t\t\tthrow new Error(\"Not a WHO reply: \" + msg.command);\n\t\t}\n\t}\n\n\twhois(target) {\n\t\tlet targetCM = this.cm(target);\n\t\tlet msg = { command: \"WHOIS\", params: [target] };\n\t\treturn this.roundtrip(msg, (msg) => {\n\t\t\tlet nick;\n\t\t\tswitch (msg.command) {\n\t\t\tcase irc.RPL_ENDOFWHOIS:\n\t\t\t\tnick = msg.params[1];\n\t\t\t\tif (this.cm(nick) === targetCM) {\n\t\t\t\t\tlet whois = {};\n\t\t\t\t\tmsg.list.forEach((reply) => {\n\t\t\t\t\t\twhois[reply.command] = reply;\n\t\t\t\t\t});\n\t\t\t\t\treturn whois;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase irc.ERR_NOSUCHNICK:\n\t\t\t\tnick = msg.params[1];\n\t\t\t\tif (this.cm(nick) === targetCM) {\n\t\t\t\t\tthrow msg;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t}\n\n\taddAvailableCaps(s) {\n\t\tlet l = s.split(\" \");\n\t\tl.forEach((s) => {\n\t\t\tlet i = s.indexOf(\"=\");\n\t\t\tlet k = s, v = \"\";\n\t\t\tif (i >= 0) {\n\t\t\t\tk = s.slice(0, i);\n\t\t\t\tv = s.slice(i + 1);\n\t\t\t}\n\t\t\tthis.availableCaps[k.toLowerCase()] = v;\n\t\t});\n\t}\n\n\tsupportsSASL(mech) {\n\t\tlet saslCap = this.availableCaps[\"sasl\"];\n\t\tif (saslCap === undefined) {\n\t\t\treturn false;\n\t\t}\n\t\treturn saslCap.split(\",\").includes(mech);\n\t}\n\n\trequestCaps(extra) {\n\t\tlet reqCaps = extra || [];\n\n\t\tpermanentCaps.forEach((cap) => {\n\t\t\tif (this.availableCaps[cap] !== undefined && !this.enabledCaps[cap]) {\n\t\t\t\treqCaps.push(cap);\n\t\t\t}\n\t\t});\n\n\t\tif (reqCaps.length > 0) {\n\t\t\tthis.send({ command: \"CAP\", params: [\"REQ\", reqCaps.join(\" \")] });\n\t\t}\n\t}\n\n\thandleCap(msg) {\n\t\tlet subCmd = msg.params[1];\n\t\tlet args = msg.params.slice(2);\n\t\tswitch (subCmd) {\n\t\tcase \"LS\":\n\t\t\tthis.supportsCap = true;\n\t\t\tthis.addAvailableCaps(args[args.length - 1]);\n\t\t\tif (args[0] != \"*\") {\n\t\t\t\tconsole.log(\"Available server caps:\", this.availableCaps);\n\n\t\t\t\tlet reqCaps = [];\n\t\t\t\tlet capEnd = true;\n\t\t\t\tif ((this.params.saslPlain && this.supportsSASL(\"PLAIN\")) || (this.params.saslExternal && this.supportsSASL(\"EXTERNAL\"))) {\n\t\t\t\t\t// CAP END is deferred after authentication finishes\n\t\t\t\t\treqCaps.push(\"sasl\");\n\t\t\t\t\tcapEnd = false;\n\t\t\t\t}\n\n\t\t\t\tif (!this.params.bouncerNetwork && this.availableCaps[\"soju.im/bouncer-networks-notify\"] !== undefined) {\n\t\t\t\t\treqCaps.push(\"soju.im/bouncer-networks-notify\");\n\t\t\t\t}\n\n\t\t\t\tthis.requestCaps(reqCaps);\n\n\t\t\t\tif (this.status != Client.Status.REGISTERED && capEnd) {\n\t\t\t\t\tthis.send({ command: \"CAP\", params: [\"END\"] });\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"NEW\":\n\t\t\tthis.addAvailableCaps(args[0]);\n\t\t\tconsole.log(\"Server added available caps:\", args[0]);\n\t\t\tthis.requestCaps();\n\t\t\tbreak;\n\t\tcase \"DEL\":\n\t\t\targs[0].split(\" \").forEach((cap) => {\n\t\t\t\tcap = cap.toLowerCase();\n\t\t\t\tdelete this.availableCaps[cap];\n\t\t\t\tdelete this.enabledCaps[cap];\n\t\t\t});\n\t\t\tconsole.log(\"Server removed available caps:\", args[0]);\n\t\t\tbreak;\n\t\tcase \"ACK\":\n\t\t\tconsole.log(\"Server ack'ed caps:\", args[0]);\n\t\t\targs[0].split(\" \").forEach((cap) => {\n\t\t\t\tcap = cap.toLowerCase();\n\t\t\t\tthis.enabledCaps[cap] = true;\n\n\t\t\t\tif (cap == \"sasl\" && this.params.saslPlain) {\n\t\t\t\t\tconsole.log(\"Starting SASL PLAIN authentication\");\n\t\t\t\t\tthis.send({ command: \"AUTHENTICATE\", params: [\"PLAIN\"] });\n\t\t\t\t} else if (cap == \"sasl\" && this.params.saslExternal) {\n\t\t\t\t\tconsole.log(\"Starting SASL EXTERNAL authentication\");\n\t\t\t\t\tthis.send({ command: \"AUTHENTICATE\", params: [\"EXTERNAL\"] });\n\t\t\t\t}\n\t\t\t});\n\t\t\tbreak;\n\t\tcase \"NAK\":\n\t\t\tconsole.log(\"Server nak'ed caps:\", args[0]);\n\t\t\tif (this.status != Client.Status.REGISTERED) {\n\t\t\t\tthis.send({ command: \"CAP\", params: [\"END\"] });\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n\n\thandleAuthenticate(msg) {\n\t\tlet challengeStr = msg.params[0];\n\n\t\tif (challengeStr != \"+\") {\n\t\t\tthis.dispatchEvent(new CustomEvent(\"error\", { detail: \"Expected an empty challenge, got: \" + challengeStr }));\n\t\t\tthis.send({ command: \"AUTHENTICATE\", params: [\"*\"] });\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.params.saslPlain) {\n\t\t\tlet respStr = btoa(\"\\0\" + this.params.saslPlain.username + \"\\0\" + this.params.saslPlain.password);\n\t\t\tthis.send({ command: \"AUTHENTICATE\", params: [respStr] });\n\t\t} else if (this.params.saslExternal) {\n\t\t\tthis.send({ command: \"AUTHENTICATE\", params: [btoa(\"\")] });\n\t\t} else {\n\t\t\tthrow new Error(\"Received AUTHENTICATE for unknown mechanism\");\n\t\t}\n\t}\n\n\tsend(msg) {\n\t\tif (!this.ws) {\n\t\t\tthrow new Error(\"Failed to send IRC message \" + msg.command + \": socket is closed\");\n\t\t}\n\t\tthis.ws.send(irc.formatMessage(msg));\n\t\tconsole.debug(\"Sent:\", msg);\n\t}\n\n\tsetCaseMapping(name) {\n\t\tthis.cm = irc.CaseMapping.byName(name);\n\t\tif (!this.cm) {\n\t\t\tconsole.error(\"Unsupported case-mapping '\" + name + \"', falling back to RFC 1459\");\n\t\t\tthis.cm = irc.CaseMapping.RFC1459;\n\t\t}\n\n\t\tthis.pendingLists = new irc.CaseMapMap(this.pendingLists, this.cm);\n\t\tthis.monitored = new irc.CaseMapMap(this.monitored, this.cm);\n\t}\n\n\tisServer(name) {\n\t\treturn name === \"*\" || this.cm(name) === this.cm(this.serverPrefix.name);\n\t}\n\n\tisMyNick(nick) {\n\t\treturn this.cm(nick) == this.cm(this.nick);\n\t}\n\n\tisChannel(name) {\n\t\tlet chanTypes = this.isupport.get(\"CHANTYPES\") || irc.STD_CHANTYPES;\n\t\treturn chanTypes.indexOf(name[0]) >= 0;\n\t}\n\n\tsetPingInterval(sec) {\n\t\tclearInterval(this.pingIntervalID);\n\t\tthis.pingIntervalID = null;\n\n\t\tif (sec <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pingIntervalID = setInterval(() => {\n\t\t\tif (this.ws) {\n\t\t\t\tthis.send({ command: \"PING\", params: [\"gamja\"] });\n\t\t\t}\n\t\t}, sec * 1000);\n\t}\n\n\t/* Execute a command that expects a response. `done` is called with message\n\t * events until it returns a truthy value. */\n\troundtrip(msg, done) {\n\t\tlet label;\n\t\tif (this.enabledCaps[\"labeled-response\"]) {\n\t\t\tlastLabel++;\n\t\t\tlabel = String(lastLabel);\n\t\t\tmsg.tags = { ...msg.tags, label };\n\t\t}\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet removeEventListeners;\n\n\t\t\tlet handleMessage = (event) => {\n\t\t\t\tlet msg = event.detail.message;\n\n\t\t\t\tlet msgLabel = irc.getMessageLabel(msg);\n\t\t\t\tif (msgLabel && msgLabel != label) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet result;\n\t\t\t\ttry {\n\t\t\t\t\tresult = done(msg);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tremoveEventListeners();\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t\tif (result) {\n\t\t\t\t\tremoveEventListeners();\n\t\t\t\t\tresolve(result);\n\t\t\t\t}\n\n\t\t\t\t// TODO: handle end of labeled response somehow\n\t\t\t};\n\n\t\t\tlet handleStatus = () => {\n\t\t\t\tif (this.status === Client.Status.DISCONNECTED) {\n\t\t\t\t\tremoveEventListeners();\n\t\t\t\t\treject(new Error(\"Connection closed\"));\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tremoveEventListeners = () => {\n\t\t\t\tthis.removeEventListener(\"message\", handleMessage);\n\t\t\t\tthis.removeEventListener(\"status\", handleStatus);\n\t\t\t};\n\n\t\t\tthis.addEventListener(\"message\", handleMessage);\n\t\t\tthis.addEventListener(\"status\", handleStatus);\n\t\t\tthis.send(msg);\n\t\t});\n\t}\n\n\tfetchBatch(msg, batchType) {\n\t\tlet batchName = null;\n\t\tlet messages = [];\n\t\tlet cmd = msg.command;\n\t\treturn this.roundtrip(msg, (msg) => {\n\t\t\tif (batchName) {\n\t\t\t\tlet batch = msg.batch;\n\t\t\t\twhile (batch) {\n\t\t\t\t\tif (batch.name === batchName) {\n\t\t\t\t\t\tmessages.push(msg);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tbatch = batch.parent;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tswitch (msg.command) {\n\t\t\tcase \"BATCH\":\n\t\t\t\tlet enter = msg.params[0].startsWith(\"+\");\n\t\t\t\tlet name = msg.params[0].slice(1);\n\t\t\t\tif (enter && msg.params[1] === batchType) {\n\t\t\t\t\tbatchName = name;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (!enter && name === batchName) {\n\t\t\t\t\treturn { ...this.batches.get(name), messages };\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"FAIL\":\n\t\t\t\tif (msg.params[0] === cmd) {\n\t\t\t\t\tthrow msg;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t}\n\n\troundtripChatHistory(params) {\n\t\t// Don't send multiple CHATHISTORY commands in parallel, we can't\n\t\t// properly handle batches and errors.\n\t\tlet promise = this.pendingCmds.CHATHISTORY.then(() => {\n\t\t\tlet msg = {\n\t\t\t\tcommand: \"CHATHISTORY\",\n\t\t\t\tparams,\n\t\t\t};\n\t\t\treturn this.fetchBatch(msg, \"chathistory\").then((batch) => batch.messages);\n\t\t});\n\t\tthis.pendingCmds.CHATHISTORY = promise.catch(() => {});\n\t\treturn promise;\n\t}\n\n\tchatHistoryPageSize() {\n\t\tif (this.isupport.has(\"CHATHISTORY\")) {\n\t\t\tlet pageSize = parseInt(this.isupport.get(\"CHATHISTORY\"), 10);\n\t\t\tif (pageSize > 0) {\n\t\t\t\treturn pageSize;\n\t\t\t}\n\t\t}\n\t\treturn 100;\n\t}\n\n\t/* Fetch one page of history before the given date. */\n\tfetchHistoryBefore(target, before, limit) {\n\t\tlet max = Math.min(limit, this.chatHistoryPageSize());\n\t\tlet params = [\"BEFORE\", target, \"timestamp=\" + before, max];\n\t\treturn this.roundtripChatHistory(params).then((messages) => {\n\t\t\treturn { more: messages.length >= max };\n\t\t});\n\t}\n\n\t/* Fetch history in ascending order. */\n\tfetchHistoryBetween(target, after, before, limit) {\n\t\tlet max = Math.min(limit, this.chatHistoryPageSize());\n\t\tlet params = [\"AFTER\", target, \"timestamp=\" + after.time, max];\n\t\treturn this.roundtripChatHistory(params).then((messages) => {\n\t\t\tlimit -= messages.length;\n\t\t\tif (limit <= 0) {\n\t\t\t\tthrow new Error(\"Cannot fetch all chat history: too many messages\");\n\t\t\t}\n\t\t\tif (messages.length == max) {\n\t\t\t\t// There are still more messages to fetch\n\t\t\t\tafter.time = messages[messages.length - 1].tags.time;\n\t\t\t\treturn this.fetchHistoryBetween(target, after, before, limit);\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\t}\n\n\tfetchHistoryTargets(t1, t2) {\n\t\tlet msg = {\n\t\t\tcommand: \"CHATHISTORY\",\n\t\t\tparams: [\"TARGETS\", \"timestamp=\" + t1, \"timestamp=\" + t2, 1000],\n\t\t};\n\t\treturn this.fetchBatch(msg, \"draft/chathistory-targets\").then((batch) => {\n\t\t\treturn batch.messages.map((msg) => {\n\t\t\t\tif (msg.command != \"CHATHISTORY\" || msg.params[0] != \"TARGETS\") {\n\t\t\t\t\tthrow new Error(\"Cannot fetch chat history targets: unexpected message \" + msg);\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tname: msg.params[1],\n\t\t\t\t\tlatestMessage: msg.params[2],\n\t\t\t\t};\n\t\t\t});\n\t\t});\n\t}\n\n\tlistBouncerNetworks() {\n\t\tif (!this.enabledCaps[\"soju.im/bouncer-networks\"]) {\n\t\t\treturn Promise.reject(new Error(\"Server doesn't support the BOUNCER extension\"));\n\t\t}\n\n\t\tlet req = { command: \"BOUNCER\", params: [\"LISTNETWORKS\"] };\n\t\treturn this.fetchBatch(req, \"soju.im/bouncer-networks\").then((batch) => {\n\t\t\tlet networks = new Map();\n\t\t\tfor (let msg of batch.messages) {\n\t\t\t\tconsole.assert(msg.command === \"BOUNCER\" && msg.params[0] === \"NETWORK\");\n\t\t\t\tlet id = msg.params[1];\n\t\t\t\tlet params = irc.parseTags(msg.params[2]);\n\t\t\t\tnetworks.set(id, params);\n\t\t\t}\n\t\t\treturn networks;\n\t\t});\n\t}\n\n\tmaxMonitorTargets() {\n\t\tif (!this.isupport.has(\"MONITOR\")) {\n\t\t\treturn 0;\n\t\t}\n\t\tlet v = this.isupport.get(\"MONITOR\");\n\t\tif (v === \"\") {\n\t\t\treturn Infinity;\n\t\t}\n\t\treturn parseInt(v, 10);\n\t}\n\n\tmonitor(target) {\n\t\tif (this.monitored.has(target)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.monitored.set(target, true);\n\n\t\t// TODO: add poll-based fallback when MONITOR is not supported\n\t\tif (this.monitored.size + 1 > this.maxMonitorTargets()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.send({ command: \"MONITOR\", params: [\"+\", target] });\n\t}\n\n\tunmonitor(target) {\n\t\tif (!this.monitored.has(target)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.monitored.delete(target);\n\n\t\tif (!this.isupport.has(\"MONITOR\")) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.send({ command: \"MONITOR\", params: [\"-\", target] });\n\t}\n\n\tcreateBouncerNetwork(attrs) {\n\t\tlet msg = {\n\t\t\tcommand: \"BOUNCER\",\n\t\t\tparams: [\"ADDNETWORK\", irc.formatTags(attrs)],\n\t\t};\n\t\treturn this.roundtrip(msg, (msg) => {\n\t\t\tif (msg.command === \"BOUNCER\" && msg.params[0] === \"ADDNETWORK\") {\n\t\t\t\treturn msg.params[1];\n\t\t\t}\n\t\t});\n\t}\n}\n","import { linkifyjs, html } from \"./index.js\";\n\nlinkifyjs.options.defaults.defaultProtocol = \"https\";\n\nlinkifyjs.registerCustomProtocol(\"irc\");\nlinkifyjs.registerCustomProtocol(\"ircs\");\n\nlinkifyjs.registerPlugin(\"ircChannel\", ({ scanner, parser, utils }) => {\n\tconst { POUND, DOMAIN, TLD, LOCALHOST, UNDERSCORE, DOT, HYPHEN } = scanner.tokens;\n\tconst START_STATE = parser.start;\n\n\tconst Channel = utils.createTokenClass(\"ircChannel\", {\n\t\tisLink: true,\n\t\ttoHref() {\n\t\t\treturn \"irc:///\" + this.toString();\n\t\t},\n\t});\n\n\tconst HASH_STATE = START_STATE.tt(POUND);\n\n\tconst CHAN_STATE = HASH_STATE.tt(DOMAIN, Channel);\n\tHASH_STATE.tt(TLD, CHAN_STATE);\n\tHASH_STATE.tt(LOCALHOST, CHAN_STATE);\n\tHASH_STATE.tt(POUND, CHAN_STATE);\n\n\tCHAN_STATE.tt(UNDERSCORE, CHAN_STATE);\n\tCHAN_STATE.tt(DOMAIN, CHAN_STATE);\n\tCHAN_STATE.tt(TLD, CHAN_STATE);\n\tCHAN_STATE.tt(LOCALHOST, CHAN_STATE);\n\n\tconst CHAN_DIVIDER_STATE = CHAN_STATE.tt(DOT);\n\n\tCHAN_DIVIDER_STATE.tt(UNDERSCORE, CHAN_STATE);\n\tCHAN_DIVIDER_STATE.tt(DOMAIN, CHAN_STATE);\n\tCHAN_DIVIDER_STATE.tt(TLD, CHAN_STATE);\n\tCHAN_DIVIDER_STATE.tt(LOCALHOST, CHAN_STATE);\n});\n\nexport default function linkify(text, onClick) {\n\tlet links = linkifyjs.find(text);\n\n\tlet children = [];\n\tlet last = 0;\n\tlinks.forEach((match) => {\n\t\tif (!match.isLink) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst prefix = text.substring(last, match.start)\n\t\tchildren.push(prefix);\n\n\t\tchildren.push(html`\n\t\t\t<a\n\t\t\t\thref=${match.href}\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noreferrer noopener\"\n\t\t\t\tonClick=${onClick}\n\t\t\t>${match.value}</a>\n\t\t`);\n\n\t\tlast = match.end;\n\t});\n\n\tconst suffix = text.substring(last)\n\tchildren.push(suffix);\n\n\treturn children;\n}\n","// See https://modern.ircdocs.horse/formatting.html\n\nconst BOLD = \"\\x02\";\nconst ITALIC = \"\\x1D\";\nconst UNDERLINE = \"\\x1F\";\nconst STRIKETHROUGH = \"\\x1E\";\nconst MONOSPACE = \"\\x11\";\nconst COLOR = \"\\x03\";\nconst COLOR_HEX = \"\\x04\";\nconst REVERSE_COLOR = \"\\x16\";\nconst RESET = \"\\x0F\";\n\nfunction isDigit(ch) {\n\treturn ch >= \"0\" && ch <= \"9\";\n}\n\nexport function strip(text) {\n\tlet out = \"\";\n\tfor (let i = 0; i < text.length; i++) {\n\t\tlet ch = text[i];\n\t\tswitch (ch) {\n\t\tcase BOLD:\n\t\tcase ITALIC:\n\t\tcase UNDERLINE:\n\t\tcase STRIKETHROUGH:\n\t\tcase MONOSPACE:\n\t\tcase REVERSE_COLOR:\n\t\tcase RESET:\n\t\t\tbreak; // skip\n\t\tcase COLOR:\n\t\t\tif (!isDigit(text[i + 1])) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ti++;\n\t\t\tif (isDigit(text[i + 1])) {\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tif (text[i + 1] == \",\" && isDigit(text[i + 2])) {\n\t\t\t\ti += 2;\n\t\t\t\tif (isDigit(text[i + 1])) {\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\tcase COLOR_HEX:\n\t\t\ti += 6;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tout += ch;\n\t\t}\n\t}\n\treturn out;\n}\n","import * as irc from \"./lib/irc.js\";\nimport Client from \"./lib/client.js\";\n\nexport const SERVER_BUFFER = \"*\";\n\nexport const BufferType = {\n\tSERVER: \"server\",\n\tCHANNEL: \"channel\",\n\tNICK: \"nick\",\n};\n\nexport const ServerStatus = Client.Status;\n\nexport const Unread = {\n\tNONE: \"\",\n\tMESSAGE: \"message\",\n\tHIGHLIGHT: \"highlight\",\n\n\tcompare(a, b) {\n\t\tconst priority = {\n\t\t\t[Unread.NONE]: 0,\n\t\t\t[Unread.MESSAGE]: 1,\n\t\t\t[Unread.HIGHLIGHT]: 2,\n\t\t};\n\t\treturn priority[a] - priority[b];\n\t},\n\tunion(a, b) {\n\t\treturn (Unread.compare(a, b) > 0) ? a : b;\n\t},\n};\n\nexport const ReceiptType = {\n\tDELIVERED: \"delivered\",\n\tREAD: \"read\",\n};\n\nexport function getNickURL(nick) {\n\treturn \"irc:///\" + encodeURIComponent(nick) + \",isuser\";\n}\n\nexport function getChannelURL(channel) {\n\treturn \"irc:///\" + encodeURIComponent(channel);\n}\n\nexport function getBufferURL(buf) {\n\tswitch (buf.type) {\n\tcase BufferType.SERVER:\n\t\treturn \"irc:///\";\n\tcase BufferType.CHANNEL:\n\t\treturn getChannelURL(buf.name);\n\tcase BufferType.NICK:\n\t\treturn getNickURL(buf.name);\n\t}\n\tthrow new Error(\"Unknown buffer type: \" + buf.type);\n}\n\nexport function getMessageURL(buf, msg) {\n\tlet bufURL = getBufferURL(buf);\n\tif (msg.tags.msgid) {\n\t\treturn bufURL + \"?msgid=\" + encodeURIComponent(msg.tags.msgid);\n\t} else {\n\t\treturn bufURL + \"?timestamp=\" + encodeURIComponent(msg.tags.time);\n\t}\n}\n\nexport function getServerName(server, bouncerNetwork, isBouncer) {\n\tlet netName = server.isupport.get(\"NETWORK\");\n\n\tif (bouncerNetwork && bouncerNetwork.name && bouncerNetwork.name !== bouncerNetwork.host) {\n\t\t// User has picked a custom name for the network, use that\n\t\treturn bouncerNetwork.name;\n\t}\n\n\tif (netName) {\n\t\t// Server has specified a name\n\t\treturn netName;\n\t}\n\n\tif (bouncerNetwork) {\n\t\treturn bouncerNetwork.name || bouncerNetwork.host || \"server\";\n\t} else if (isBouncer) {\n\t\treturn \"bouncer\";\n\t} else {\n\t\treturn \"server\";\n\t}\n}\n\nfunction updateState(state, updater) {\n\tlet updated;\n\tif (typeof updater === \"function\") {\n\t\tupdated = updater(state, state);\n\t} else {\n\t\tupdated = updater;\n\t}\n\tif (state === updated || !updated) {\n\t\treturn;\n\t}\n\treturn { ...state, ...updated };\n}\n\nfunction isServerBuffer(buf) {\n\treturn buf.type == BufferType.SERVER;\n}\n\n/* Returns 1 if a should appear after b, -1 if a should appear before b, or\n * 0 otherwise. */\nfunction compareBuffers(a, b) {\n\tif (a.server != b.server) {\n\t\treturn a.server > b.server ? 1 : -1;\n\t}\n\tif (isServerBuffer(a) != isServerBuffer(b)) {\n\t\treturn isServerBuffer(b) ? 1 : -1;\n\t}\n\tif (a.name != b.name) {\n\t\treturn a.name > b.name ? 1 : -1;\n\t}\n\treturn 0;\n}\n\nfunction updateMembership(membership, letter, add, client) {\n\tlet prefix = client.isupport.get(\"PREFIX\") || \"\";\n\n\tlet prefixPrivs = new Map(irc.parseMembershipModes(prefix).map((membership, i) => {\n\t\treturn [membership.prefix, i];\n\t}));\n\n\tif (add) {\n\t\tlet i = membership.indexOf(letter);\n\t\tif (i < 0) {\n\t\t\tmembership += letter;\n\t\t\tmembership = Array.from(membership).sort((a, b) => {\n\t\t\t\treturn prefixPrivs.get(a) - prefixPrivs.get(b);\n\t\t\t}).join(\"\");\n\t\t}\n\t} else {\n\t\tmembership = membership.replace(letter, \"\");\n\t}\n\n\treturn membership;\n}\n\n/* Insert a message in an immutable list of sorted messages. */\nfunction insertMessage(list, msg) {\n\tif (list.length == 0) {\n\t\treturn [msg];\n\t} else if (!irc.findBatchByType(msg, \"chathistory\") || list[list.length - 1].tags.time <= msg.tags.time) {\n\t\treturn list.concat(msg);\n\t}\n\n\tlet insertBefore = -1;\n\tfor (let i = 0; i < list.length; i++) {\n\t\tlet other = list[i];\n\t\tif (msg.tags.time < other.tags.time) {\n\t\t\tinsertBefore = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tconsole.assert(insertBefore >= 0, \"\");\n\n\tlist = [ ...list ];\n\tlist.splice(insertBefore, 0, msg);\n\treturn list;\n}\n\nlet lastServerID = 0;\nlet lastBufferID = 0;\nlet lastMessageKey = 0;\n\nexport const State = {\n\tcreate() {\n\t\treturn {\n\t\t\tservers: new Map(),\n\t\t\tbuffers: new Map(),\n\t\t\tactiveBuffer: null,\n\t\t};\n\t},\n\tupdateServer(state, id, updater) {\n\t\tlet server = state.servers.get(id);\n\t\tif (!server) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet updated = updateState(server, updater);\n\t\tif (!updated) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet servers = new Map(state.servers);\n\t\tservers.set(id, updated);\n\t\treturn { servers };\n\t},\n\tupdateBuffer(state, id, updater) {\n\t\tlet buf = State.getBuffer(state, id);\n\t\tif (!buf) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet updated = updateState(buf, updater);\n\t\tif (!updated) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet buffers = new Map(state.buffers);\n\t\tbuffers.set(buf.id, updated);\n\t\treturn { buffers };\n\t},\n\tgetActiveServerID(state) {\n\t\tlet buf = state.buffers.get(state.activeBuffer);\n\t\tif (!buf) {\n\t\t\treturn null;\n\t\t}\n\t\treturn buf.server;\n\t},\n\tgetBuffer(state, id) {\n\t\tswitch (typeof id) {\n\t\tcase \"number\":\n\t\t\treturn state.buffers.get(id);\n\t\tcase \"object\":\n\t\t\tif (id.id) {\n\t\t\t\treturn state.buffers.get(id.id);\n\t\t\t}\n\n\t\t\tlet serverID = id.server, name = id.name;\n\t\t\tif (!serverID) {\n\t\t\t\tserverID = State.getActiveServerID(state);\n\t\t\t}\n\t\t\tif (!name) {\n\t\t\t\tname = SERVER_BUFFER;\n\t\t\t}\n\n\t\t\tlet cm = irc.CaseMapping.RFC1459;\n\t\t\tlet server = state.servers.get(serverID);\n\t\t\tif (server) {\n\t\t\t\tcm = irc.CaseMapping.byName(server.isupport.get(\"CASEMAPPING\")) || cm;\n\t\t\t}\n\n\t\t\tlet nameCM = cm(name);\n\t\t\tfor (let buf of state.buffers.values()) {\n\t\t\t\tif (buf.server === serverID && cm(buf.name) === nameCM) {\n\t\t\t\t\treturn buf;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\tdefault:\n\t\t\tthrow new Error(\"Invalid buffer ID type: \" + (typeof id));\n\t\t}\n\t},\n\tcreateServer(state) {\n\t\tlastServerID++;\n\t\tlet id = lastServerID;\n\n\t\tlet servers = new Map(state.servers);\n\t\tservers.set(id, {\n\t\t\tid,\n\t\t\tstatus: ServerStatus.DISCONNECTED,\n\t\t\tisupport: new Map(),\n\t\t\tusers: new irc.CaseMapMap(null, irc.CaseMapping.RFC1459),\n\t\t});\n\t\treturn [id, { servers }];\n\t},\n\tcreateBuffer(state, name, serverID, client) {\n\t\tlet buf = State.getBuffer(state, { server: serverID, name });\n\t\tif (buf) {\n\t\t\treturn [buf.id, null];\n\t\t}\n\n\t\tlastBufferID++;\n\t\tlet id = lastBufferID;\n\n\t\tlet type;\n\t\tif (name == SERVER_BUFFER) {\n\t\t\ttype = BufferType.SERVER;\n\t\t} else if (client.isChannel(name)) {\n\t\t\ttype = BufferType.CHANNEL;\n\t\t} else {\n\t\t\ttype = BufferType.NICK;\n\t\t}\n\n\t\tlet bufferList = Array.from(state.buffers.values());\n\t\tbufferList.push({\n\t\t\tid,\n\t\t\tname,\n\t\t\ttype,\n\t\t\tserver: serverID,\n\t\t\tserverInfo: null, // if server\n\t\t\tjoined: false, // if channel\n\t\t\ttopic: null, // if channel\n\t\t\tmembers: new irc.CaseMapMap(null, client.cm), // if channel\n\t\t\tmessages: [],\n\t\t\tunread: Unread.NONE,\n\t\t\tprevReadReceipt: null,\n\t\t});\n\t\tbufferList = bufferList.sort(compareBuffers);\n\t\tlet buffers = new Map(bufferList.map((buf) => [buf.id, buf]));\n\t\treturn [id, { buffers }];\n\t},\n\thandleMessage(state, msg, serverID, client) {\n\t\tfunction updateServer(updater) {\n\t\t\treturn State.updateServer(state, serverID, updater);\n\t\t}\n\t\tfunction updateBuffer(name, updater) {\n\t\t\treturn State.updateBuffer(state, { server: serverID, name }, updater);\n\t\t}\n\t\tfunction updateUser(name, updater) {\n\t\t\treturn updateServer((server) => {\n\t\t\t\tlet users = new irc.CaseMapMap(server.users);\n\t\t\t\tlet updated = updateState(users.get(name), updater);\n\t\t\t\tif (!updated) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tusers.set(name, updated);\n\t\t\t\treturn { users };\n\t\t\t});\n\t\t}\n\n\t\t// Don't update our internal state if it's a chat history message\n\t\tif (irc.findBatchByType(msg, \"chathistory\")) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet target, channel, topic, targets, who, update, buffers;\n\t\tswitch (msg.command) {\n\t\tcase irc.RPL_MYINFO:\n\t\t\t// TODO: parse available modes\n\t\t\tlet serverInfo = {\n\t\t\t\tname: msg.params[1],\n\t\t\t\tversion: msg.params[2],\n\t\t\t};\n\t\t\treturn updateBuffer(SERVER_BUFFER, { serverInfo });\n\t\tcase irc.RPL_ISUPPORT:\n\t\t\tbuffers = new Map(state.buffers);\n\t\t\tstate.buffers.forEach((buf) => {\n\t\t\t\tif (buf.server != serverID) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tlet members = new irc.CaseMapMap(buf.members, client.cm);\n\t\t\t\tbuffers.set(buf.id, { ...buf, members });\n\t\t\t});\n\t\t\treturn {\n\t\t\t\tbuffers,\n\t\t\t\t...updateServer((server) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tisupport: new Map(client.isupport),\n\t\t\t\t\t\tusers: new irc.CaseMapMap(server.users, client.cm),\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t};\n\t\tcase irc.RPL_NOTOPIC:\n\t\t\tchannel = msg.params[1];\n\t\t\treturn updateBuffer(channel, { topic: null });\n\t\tcase irc.RPL_TOPIC:\n\t\t\tchannel = msg.params[1];\n\t\t\ttopic = msg.params[2];\n\t\t\treturn updateBuffer(channel, { topic });\n\t\tcase irc.RPL_TOPICWHOTIME:\n\t\t\t// Ignore\n\t\t\tbreak;\n\t\tcase irc.RPL_ENDOFNAMES:\n\t\t\tchannel = msg.params[1];\n\t\t\treturn updateBuffer(channel, (buf) => {\n\t\t\t\tlet members = new irc.CaseMapMap(null, buf.members.caseMap);\n\t\t\t\tmsg.list.forEach((namreply) => {\n\t\t\t\t\tlet membersList = namreply.params[3].split(\" \");\n\t\t\t\t\tmembersList.forEach((s) => {\n\t\t\t\t\t\tlet member = irc.parseTargetPrefix(s);\n\t\t\t\t\t\tmembers.set(member.name, member.prefix);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\treturn { members };\n\t\t\t});\n\t\t\tbreak;\n\t\tcase irc.RPL_WHOREPLY:\n\t\tcase irc.RPL_WHOSPCRPL:\n\t\t\twho = client.parseWhoReply(msg);\n\n\t\t\tif (who.flags !== undefined) {\n\t\t\t\twho.away = who.flags.indexOf(\"G\") >= 0; // H for here, G for gone\n\t\t\t\twho.operator = who.flags.indexOf(\"*\") >= 0;\n\t\t\t\tdelete who.flags;\n\t\t\t}\n\n\t\t\twho.offline = false;\n\n\t\t\treturn updateUser(who.nick, who);\n\t\tcase irc.RPL_ENDOFWHO:\n\t\t\ttarget = msg.params[1];\n\t\t\tif (msg.list.length == 0 && !client.isChannel(target) && target.indexOf(\"*\") < 0) {\n\t\t\t\t// Not a channel nor a mask, likely a nick\n\t\t\t\treturn updateUser(target, (user) => {\n\t\t\t\t\treturn { offline: true };\n\t\t\t\t});\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"JOIN\":\n\t\t\tchannel = msg.params[0];\n\n\t\t\tif (client.isMyNick(msg.prefix.name)) {\n\t\t\t\tlet [id, update] = State.createBuffer(state, channel, serverID, client);\n\t\t\t\tstate = { ...state, ...update };\n\t\t\t}\n\n\t\t\tupdate = updateBuffer(channel, (buf) => {\n\t\t\t\tlet members = new irc.CaseMapMap(buf.members);\n\t\t\t\tmembers.set(msg.prefix.name, \"\");\n\n\t\t\t\tlet joined = buf.joined || client.isMyNick(msg.prefix.name);\n\n\t\t\t\treturn { members, joined };\n\t\t\t});\n\t\t\tstate = { ...state, ...update };\n\n\t\t\twho = { nick: msg.prefix.name, offline: false };\n\t\t\tif (msg.prefix.user) {\n\t\t\t\twho.username = msg.prefix.user;\n\t\t\t}\n\t\t\tif (msg.prefix.host) {\n\t\t\t\twho.hostname = msg.prefix.host;\n\t\t\t}\n\t\t\tif (msg.params.length > 2) {\n\t\t\t\twho.account = msg.params[1];\n\t\t\t\tif (who.account === \"*\") {\n\t\t\t\t\twho.account = null;\n\t\t\t\t}\n\t\t\t\twho.realname = msg.params[2];\n\t\t\t}\n\t\t\tupdate = updateUser(msg.prefix.name, who);\n\t\t\tstate = { ...state, ...update };\n\n\t\t\treturn state;\n\t\tcase \"PART\":\n\t\t\tchannel = msg.params[0];\n\n\t\t\treturn updateBuffer(channel, (buf) => {\n\t\t\t\tlet members = new irc.CaseMapMap(buf.members);\n\t\t\t\tmembers.delete(msg.prefix.name);\n\n\t\t\t\tlet joined = buf.joined && !client.isMyNick(msg.prefix.name);\n\n\t\t\t\treturn { members, joined };\n\t\t\t});\n\t\tcase \"KICK\":\n\t\t\tchannel = msg.params[0];\n\t\t\tlet nick = msg.params[1];\n\n\t\t\treturn updateBuffer(channel, (buf) => {\n\t\t\t\tlet members = new irc.CaseMapMap(buf.members);\n\t\t\t\tmembers.delete(nick);\n\t\t\t\treturn { members };\n\t\t\t});\n\t\tcase \"QUIT\":\n\t\t\tbuffers = new Map(state.buffers);\n\t\t\tstate.buffers.forEach((buf) => {\n\t\t\t\tif (buf.server != serverID) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!buf.members.has(msg.prefix.name)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tlet members = new irc.CaseMapMap(buf.members);\n\t\t\t\tmembers.delete(msg.prefix.name);\n\t\t\t\tbuffers.set(buf.id, { ...buf, members });\n\t\t\t});\n\t\t\tstate = { ...state, buffers };\n\n\t\t\tupdate = updateUser(msg.prefix.name, (user) => {\n\t\t\t\tif (!user) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\treturn { offline: true };\n\t\t\t});\n\t\t\tstate = { ...state, ...update };\n\n\t\t\treturn state;\n\t\tcase \"NICK\":\n\t\t\tlet newNick = msg.params[0];\n\n\t\t\tbuffers = new Map(state.buffers);\n\t\t\tstate.buffers.forEach((buf) => {\n\t\t\t\tif (buf.server != serverID) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!buf.members.has(msg.prefix.name)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tlet members = new irc.CaseMapMap(buf.members);\n\t\t\t\tmembers.set(newNick, members.get(msg.prefix.name));\n\t\t\t\tmembers.delete(msg.prefix.name);\n\t\t\t\tbuffers.set(buf.id, { ...buf, members });\n\t\t\t});\n\t\t\tstate = { ...state, buffers };\n\n\t\t\tupdate = updateServer((server) => {\n\t\t\t\tlet users = new irc.CaseMapMap(server.users);\n\t\t\t\tlet user = users.get(msg.prefix.name);\n\t\t\t\tif (!user) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tusers.set(newNick, user);\n\t\t\t\tusers.delete(msg.prefix.name);\n\t\t\t\treturn { users };\n\t\t\t});\n\t\t\tstate = { ...state, ...update };\n\n\t\t\treturn state;\n\t\tcase \"SETNAME\":\n\t\t\treturn updateUser(msg.prefix.name, { realname: msg.params[0] });\n\t\tcase \"CHGHOST\":\n\t\t\treturn updateUser(msg.prefix.name, {\n\t\t\t\tusername: msg.params[0],\n\t\t\t\thostname: msg.params[1],\n\t\t\t});\n\t\tcase \"ACCOUNT\":\n\t\t\tlet account = msg.params[0];\n\t\t\tif (account === \"*\") {\n\t\t\t\taccount = null;\n\t\t\t}\n\t\t\treturn updateUser(msg.prefix.name, { account });\n\t\tcase \"AWAY\":\n\t\t\tlet awayMessage = msg.params[0];\n\t\t\treturn updateUser(msg.prefix.name, { away: !!awayMessage });\n\t\tcase \"TOPIC\":\n\t\t\tchannel = msg.params[0];\n\t\t\ttopic = msg.params[1];\n\t\t\treturn updateBuffer(channel, { topic });\n\t\tcase \"MODE\":\n\t\t\ttarget = msg.params[0];\n\n\t\t\tif (!client.isChannel(target)) {\n\t\t\t\treturn; // TODO: handle user mode changes too\n\t\t\t}\n\n\t\t\tlet prefix = client.isupport.get(\"PREFIX\") || \"\";\n\t\t\tlet prefixByMode = new Map(irc.parseMembershipModes(prefix).map((membership) => {\n\t\t\t\treturn [membership.mode, membership.prefix];\n\t\t\t}));\n\n\t\t\treturn updateBuffer(target, (buf) => {\n\t\t\t\tlet members = new irc.CaseMapMap(buf.members);\n\n\t\t\t\tirc.forEachChannelModeUpdate(msg, client.isupport, (mode, add, arg) => {\n\t\t\t\t\tif (prefixByMode.has(mode)) {\n\t\t\t\t\t\tlet nick = arg;\n\t\t\t\t\t\tlet membership = members.get(nick);\n\t\t\t\t\t\tlet letter = prefixByMode.get(mode);\n\t\t\t\t\t\tmembers.set(nick, updateMembership(membership, letter, add, client));\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn { members };\n\t\t\t});\n\t\tcase irc.RPL_MONONLINE:\n\t\t\ttargets = msg.params[1].split(\",\");\n\n\t\t\tfor (let target of targets) {\n\t\t\t\tlet prefix = irc.parsePrefix(target);\n\t\t\t\tlet update = updateUser(prefix.name, { offline: false });\n\t\t\t\tstate = { ...state, ...update };\n\t\t\t}\n\n\t\t\treturn state;\n\t\tcase irc.RPL_MONOFFLINE:\n\t\t\ttargets = msg.params[1].split(\",\");\n\n\t\t\tfor (let target of targets) {\n\t\t\t\tlet prefix = irc.parsePrefix(target);\n\t\t\t\tlet update = updateUser(prefix.name, { offline: true });\n\t\t\t\tstate = { ...state, ...update };\n\t\t\t}\n\n\t\t\treturn state;\n\t\t}\n\t},\n\taddMessage(state, msg, bufID) {\n\t\tlastMessageKey++;\n\t\tmsg.key = lastMessageKey;\n\n\t\treturn State.updateBuffer(state, bufID, (buf) => {\n\t\t\tlet messages = insertMessage(buf.messages, msg);\n\t\t\treturn { messages };\n\t\t});\n\t},\n};\n","const PREFIX = \"gamja_\";\n\nclass Item {\n\tconstructor(k) {\n\t\tthis.k = PREFIX + k;\n\t}\n\n\tload() {\n\t\tlet v = localStorage.getItem(this.k);\n\t\tif (!v) {\n\t\t\treturn null;\n\t\t}\n\t\treturn JSON.parse(v);\n\t}\n\n\tput(v) {\n\t\tif (v) {\n\t\t\tlocalStorage.setItem(this.k, JSON.stringify(v));\n\t\t} else {\n\t\t\tlocalStorage.removeItem(this.k);\n\t\t}\n\t}\n}\n\nexport const autoconnect = new Item(\"autoconnect\");\nexport const naggedProtocolHandler = new Item(\"naggedProtocolHandler\");\n\nconst rawReceipts = new Item(\"receipts\");\n\nexport const receipts = {\n\tload() {\n\t\tlet v = rawReceipts.load();\n\t\treturn new Map(Object.entries(v || {}));\n\t},\n\tput(m) {\n\t\trawReceipts.put(Object.fromEntries(m));\n\t},\n};\n\nexport class Buffer {\n\traw = new Item(\"buffers\");\n\tm = null;\n\n\tconstructor() {\n\t\tlet obj = this.raw.load();\n\t\tthis.m = new Map(Object.entries(obj || {}));\n\t}\n\n\tkey(buf) {\n\t\treturn JSON.stringify({\n\t\t\tname: buf.name,\n\t\t\tserver: {\n\t\t\t\turl: buf.server.url,\n\t\t\t\tnick: buf.server.nick,\n\t\t\t\tbouncerNetwork: buf.server.bouncerNetwork,\n\t\t\t},\n\t\t});\n\t}\n\n\tsave() {\n\t\tif (this.m.size > 0) {\n\t\t\tthis.raw.put(Object.fromEntries(this.m));\n\t\t} else {\n\t\t\tthis.raw.put(null);\n\t\t}\n\t}\n\n\tget(buf) {\n\t\treturn this.m.get(this.key(buf));\n\t}\n\n\tput(buf) {\n\t\tlet key = this.key(buf);\n\n\t\tlet prev = this.m.get(key);\n\t\tif (prev && prev.unread === buf.unread) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.m.set(this.key(buf), {\n\t\t\tname: buf.name,\n\t\t\tunread: buf.unread,\n\t\t\tserver: {\n\t\t\t\turl: buf.server.url,\n\t\t\t\tnick: buf.server.nick,\n\t\t\t\tbouncerNetwork: buf.server.bouncerNetwork,\n\t\t\t},\n\t\t});\n\n\t\tthis.save();\n\t}\n\n\tdelete(buf) {\n\t\tthis.m.delete(this.key(buf));\n\t\tthis.save();\n\t}\n\n\tlist(server) {\n\t\tlet buffers = [];\n\t\tfor (const buf of this.m.values()) {\n\t\t\tif (buf.server.url !== server.url || buf.server.nick !== server.nick || buf.server.bouncerNetwork !== server.bouncerNetwork) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tbuffers.push(buf);\n\t\t}\n\t\treturn buffers;\n\t}\n\n\tclear(server) {\n\t\tif (server) {\n\t\t\tfor (const buf of this.m.values()) {\n\t\t\t\tthis.m.delete(this.key(buf));\n\t\t\t}\n\t\t} else {\n\t\t\tthis.m = new Map();\n\t\t}\n\t\tthis.save();\n\t}\n}\n","import { html, Component } from \"../lib/index.js\";\n\n// XXX: If we were feeling creative we could generate unique colors for\n// each item in ISUPPORT CHANMODES. But I am not feeling creative.\nconst names = {\n\t\"~\": \"owner\",\n\t\"&\": \"admin\",\n\t\"@\": \"op\",\n\t\"%\": \"halfop\",\n\t\"+\": \"voice\",\n};\n\nexport default function Membership(props) {\n\tif (!this.props.value) {\n\t\treturn null;\n\t}\n\n\tconst name = names[this.props.value[0]] || \"\";\n\treturn html`\n\t\t<span class=\"membership ${name}\" title=${name}>\n\t\t\t${this.props.value}\n\t\t</span>\n\t`;\n}\n","import { html, Component } from \"../lib/index.js\";\nimport linkify from \"../lib/linkify.js\";\nimport * as irc from \"../lib/irc.js\";\nimport { strip as stripANSI } from \"../lib/ansi.js\";\nimport { BufferType, getNickURL, getChannelURL, getMessageURL } from \"../state.js\";\nimport * as store from \"../store.js\";\nimport Membership from \"./membership.js\";\n\nfunction djb2(s) {\n\tlet hash = 5381;\n\tfor (let i = 0; i < s.length; i++) {\n\t\thash = (hash << 5) + hash + s.charCodeAt(i);\n\t\thash = hash >>> 0; // convert to uint32\n\t}\n\treturn hash;\n}\n\nfunction Nick(props) {\n\tfunction handleClick(event) {\n\t\tevent.preventDefault();\n\t\tprops.onClick();\n\t}\n\n\tlet colorIndex = djb2(props.nick) % 16 + 1;\n\treturn html`\n\t\t<a href=${getNickURL(props.nick)} class=\"nick nick-${colorIndex}\" onClick=${handleClick}>${props.nick}</a>\n\t`;\n}\n\nfunction Timestamp({ date, url }) {\n\tif (!date) {\n\t\treturn html`<spam class=\"timestamp\">--:--:--</span>`;\n\t}\n\n\tlet hh = date.getHours().toString().padStart(2, \"0\");\n\tlet mm = date.getMinutes().toString().padStart(2, \"0\");\n\tlet ss = date.getSeconds().toString().padStart(2, \"0\");\n\tlet timestamp = `${hh}:${mm}:${ss}`;\n\treturn html`\n\t\t<a\n\t\t\thref=${url}\n\t\t\tclass=\"timestamp\"\n\t\t\ttitle=${date.toLocaleString()}\n\t\t\tonClick=${(event) => event.preventDefault()}\n\t\t>\n\t\t\t${timestamp}\n\t\t</a>\n\t`;\n}\n\n/**\n * Check whether a message can be folded.\n *\n * Unimportant and noisy messages that may clutter the discussion should be\n * folded.\n */\nfunction canFoldMessage(msg) {\n\tswitch (msg.command) {\n\tcase \"JOIN\":\n\tcase \"PART\":\n\tcase \"QUIT\":\n\tcase \"NICK\":\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nclass LogLine extends Component {\n\tshouldComponentUpdate(nextProps) {\n\t\treturn this.props.message !== nextProps.message;\n\t}\n\n\trender() {\n\t\tlet msg = this.props.message;\n\t\tlet buf = this.props.buffer;\n\t\tlet server = this.props.server;\n\n\t\tlet onNickClick = this.props.onNickClick;\n\t\tlet onChannelClick = this.props.onChannelClick;\n\t\tfunction createNick(nick) {\n\t\t\treturn html`\n\t\t\t\t<${Nick} nick=${nick} onClick=${() => onNickClick(nick)}/>\n\t\t\t`;\n\t\t}\n\t\tfunction createChannel(channel) {\n\t\t\tfunction onClick(event) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tonChannelClick(channel);\n\t\t\t}\n\t\t\treturn html`\n\t\t\t\t<a href=${getChannelURL(channel)} onClick=${onClick}>\n\t\t\t\t\t${channel}\n\t\t\t\t</a>\n\t\t\t`;\n\t\t}\n\n\t\tlet lineClass = \"\";\n\t\tlet content;\n\t\tlet invitee, target;\n\t\tswitch (msg.command) {\n\t\tcase \"NOTICE\":\n\t\tcase \"PRIVMSG\":\n\t\t\ttarget = msg.params[0];\n\t\t\tlet text = msg.params[1];\n\n\t\t\tlet ctcp = irc.parseCTCP(msg);\n\t\t\tif (ctcp) {\n\t\t\t\tif (ctcp.command == \"ACTION\") {\n\t\t\t\t\tlineClass = \"me-tell\";\n\t\t\t\t\tcontent = html`* ${createNick(msg.prefix.name)} ${linkify(stripANSI(ctcp.param), onChannelClick)}`;\n\t\t\t\t} else {\n\t\t\t\t\tcontent = html`\n\t\t\t\t\t\t${createNick(msg.prefix.name)} has sent a CTCP command: ${ctcp.command} ${ctcp.param}\n\t\t\t\t\t`;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlineClass = \"talk\";\n\t\t\t\tlet prefix = \"<\", suffix = \">\";\n\t\t\t\tif (msg.command == \"NOTICE\") {\n\t\t\t\t\tprefix = suffix = \"-\";\n\t\t\t\t}\n\t\t\t\tcontent = html`${prefix}${createNick(msg.prefix.name)}${suffix} ${linkify(stripANSI(text), onChannelClick)}`;\n\t\t\t}\n\n\t\t\tlet status = null;\n\t\t\tlet allowedPrefixes = server.isupport.get(\"STATUSMSG\");\n\t\t\tif (target !== buf.name && allowedPrefixes) {\n\t\t\t\tlet parts = irc.parseTargetPrefix(target, allowedPrefixes);\n\t\t\t\tif (parts.name === buf.name) {\n\t\t\t\t\tcontent = [html`(<${Membership} value=${parts.prefix}/>)`, \" \", content];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (msg.isHighlight) {\n\t\t\t\tlineClass += \" highlight\";\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"JOIN\":\n\t\t\tcontent = html`\n\t\t\t\t${createNick(msg.prefix.name)} has joined\n\t\t\t`;\n\t\t\tbreak;\n\t\tcase \"PART\":\n\t\t\tcontent = html`\n\t\t\t\t${createNick(msg.prefix.name)} has left\n\t\t\t`;\n\t\t\tbreak;\n\t\tcase \"QUIT\":\n\t\t\tcontent = html`\n\t\t\t\t${createNick(msg.prefix.name)} has quit\n\t\t\t`;\n\t\t\tbreak;\n\t\tcase \"NICK\":\n\t\t\tlet newNick = msg.params[0];\n\t\t\tcontent = html`\n\t\t\t\t${createNick(msg.prefix.name)} is now known as ${createNick(newNick)}\n\t\t\t`;\n\t\t\tbreak;\n\t\tcase \"KICK\":\n\t\t\tcontent = html`\n\t\t\t\t${createNick(msg.params[1])} was kicked by ${createNick(msg.prefix.name)} (${msg.params.slice(2)})\n\t\t\t`;\n\t\t\tbreak;\n\t\tcase \"MODE\":\n\t\t\ttarget = msg.params[0];\n\t\t\tcontent = html`\n\t\t\t\t* ${createNick(msg.prefix.name)} sets mode ${msg.params.slice(1).join(\" \")}\n\t\t\t`;\n\t\t\t// TODO: case-mapping\n\t\t\tif (buf.name !== target) {\n\t\t\t\tcontent = html`${content} on ${target}`;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"TOPIC\":\n\t\t\tlet topic = msg.params[1];\n\t\t\tcontent = html`\n\t\t\t\t${createNick(msg.prefix.name)} changed the topic to: ${linkify(stripANSI(topic), onChannelClick)}\n\t\t\t`;\n\t\t\tbreak;\n\t\tcase \"INVITE\":\n\t\t\tinvitee = msg.params[0];\n\t\t\tlet channel = msg.params[1];\n\t\t\t// TODO: instead of checking buffer type, check if invitee is our nick\n\t\t\tif (buf.type === BufferType.SERVER) {\n\t\t\t\tlineClass = \"talk\";\n\t\t\t\tcontent = html`\n\t\t\t\t\tYou have been invited to ${createChannel(channel)} by ${createNick(msg.prefix.name)}\n\t\t\t\t`;\n\t\t\t} else {\n\t\t\t\tcontent = html`\n\t\t\t\t\t${createNick(msg.prefix.name)} has invited ${createNick(invitee)} to the channel\n\t\t\t\t`;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase irc.RPL_WELCOME:\n\t\t\tlet nick = msg.params[0];\n\t\t\tcontent = html`Connected to server, your nickname is ${nick}`;\n\t\t\tbreak;\n\t\tcase irc.RPL_INVITING:\n\t\t\tinvitee = msg.params[1];\n\t\t\tcontent = html`${createNick(invitee)} has been invited to the channel`;\n\t\t\tbreak;\n\t\tcase irc.RPL_MOTD:\n\t\t\tlineClass = \"motd\";\n\t\t\tcontent = linkify(stripANSI(msg.params[1]), onChannelClick);\n\t\t\tbreak;\n\t\tcase irc.RPL_LOGGEDIN:\n\t\t\tlet account = msg.params[2];\n\t\t\tcontent = html`You are now authenticated as ${account}`;\n\t\t\tbreak;\n\t\tcase irc.RPL_LOGGEDOUT:\n\t\t\tcontent = html`You are now unauthenticated`;\n\t\t\tbreak;\n\t\tcase irc.RPL_UMODEIS:\n\t\t\tlet mode = msg.params[1];\n\t\t\tif (mode) {\n\t\t\t\tcontent = html`Your user mode is ${mode}`;\n\t\t\t} else {\n\t\t\t\tcontent = html`You have no user mode`;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase irc.RPL_CHANNELMODEIS:\n\t\t\tcontent = html`Channel mode is ${msg.params.slice(2).join(\" \")}`;\n\t\t\tbreak;\n\t\tcase irc.RPL_CREATIONTIME:\n\t\t\tlet date = new Date(parseInt(msg.params[2], 10) * 1000);\n\t\t\tcontent = html`Channel was created on ${date.toLocaleString()}`;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tif (irc.isError(msg.command) && msg.command != irc.ERR_NOMOTD) {\n\t\t\t\tlineClass = \"error\";\n\t\t\t}\n\t\t\tcontent = html`${msg.command} ${msg.params.join(\" \")}`;\n\t\t}\n\n\t\treturn html`\n\t\t\t<div class=\"logline ${lineClass}\" data-key=${msg.key}>\n\t\t\t\t<${Timestamp} date=${new Date(msg.tags.time)} url=${getMessageURL(buf, msg)}/>\n\t\t\t\t${\" \"}\n\t\t\t\t${content}\n\t\t\t</div>\n\t\t`;\n\t}\n}\n\nfunction createNickList(nicks, createNick) {\n\tif (nicks.length === 0) {\n\t\treturn null;\n\t} else if (nicks.length === 1) {\n\t\treturn createNick(nicks[0]);\n\t}\n\n\tlet l = nicks.slice(0, nicks.length - 1).map((nick, i) => {\n\t\tif (i === 0) {\n\t\t\treturn createNick(nick);\n\t\t} else {\n\t\t\treturn [\", \", createNick(nick)];\n\t\t}\n\t});\n\n\tl.push(\" and \");\n\tl.push(createNick(nicks[nicks.length - 1]));\n\n\treturn l;\n}\n\nclass FoldGroup extends Component {\n\tshouldComponentUpdate(nextProps) {\n\t\treturn this.props.messages[0] !== nextProps.messages[0] ||\n\t\t\tthis.props.messages[this.props.messages.length - 1] !== nextProps.messages[nextProps.messages.length - 1];\n\t}\n\n\trender() {\n\t\tlet msgs = this.props.messages;\n\t\tlet buf = this.props.buffer;\n\n\t\tlet onNickClick = this.props.onNickClick;\n\t\tfunction createNick(nick) {\n\t\t\treturn html`\n\t\t\t\t<${Nick} nick=${nick} onClick=${() => onNickClick(nick)}/>\n\t\t\t`;\n\t\t}\n\n\t\tlet byCommand = {\n\t\t\t\"JOIN\": [],\n\t\t\t\"PART\": [],\n\t\t\t\"QUIT\": [],\n\t\t\t\"NICK\": [],\n\t\t};\n\t\tmsgs.forEach((msg) => {\n\t\t\tbyCommand[msg.command].push(msg);\n\t\t});\n\n\t\tlet first = true;\n\t\tlet content = [];\n\t\t[\"JOIN\", \"PART\", \"QUIT\"].forEach((cmd) => {\n\t\t\tif (byCommand[cmd].length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet nicks = new Set(byCommand[cmd].map((msg) => msg.prefix.name));\n\n\t\t\tlet plural = nicks.size > 1;\n\t\t\tlet action;\n\t\t\tswitch (cmd) {\n\t\t\tcase \"JOIN\":\n\t\t\t\taction = plural ? \"have joined\" : \"has joined\";\n\t\t\t\tbreak;\n\t\t\tcase \"PART\":\n\t\t\t\taction = plural ? \"have left\" : \"has left\";\n\t\t\t\tbreak;\n\t\t\tcase \"QUIT\":\n\t\t\t\taction = plural ? \"have quit\" : \"has quit\";\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (first) {\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tcontent.push(\", \");\n\t\t\t}\n\n\t\t\tcontent.push(createNickList([...nicks], createNick));\n\t\t\tcontent.push(\" \" + action);\n\t\t});\n\n\t\tbyCommand[\"NICK\"].forEach((msg) => {\n\t\t\tif (first) {\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tcontent.push(\", \");\n\t\t\t}\n\n\t\t\tlet newNick = msg.params[0];\n\t\t\tcontent.push(html`\n\t\t\t\t${createNick(msg.prefix.name)} is now known as ${createNick(newNick)}\n\t\t\t`);\n\t\t});\n\n\t\tlet lastMsg = msgs[msgs.length - 1];\n\t\tlet firstDate = new Date(msgs[0].tags.time);\n\t\tlet lastDate = new Date(lastMsg.tags.time);\n\t\tlet timestamp = html`\n\t\t\t<${Timestamp} date=${firstDate} url=${getMessageURL(buf, msgs[0])}/>\n\t\t`;\n\t\tif (lastDate - firstDate > 60 * 100) {\n\t\t\ttimestamp = [\n\t\t\t\ttimestamp,\n\t\t\t\t\" — \",\n\t\t\t\thtml`\n\t\t\t\t\t<${Timestamp} date=${lastDate} url=${getMessageURL(buf, lastMsg)}/>\n\t\t\t\t`,\n\t\t\t];\n\t\t}\n\n\t\treturn html`\n\t\t\t<div class=\"logline\" data-key=${msgs[0].key}>\n\t\t\t\t${timestamp}\n\t\t\t\t${\" \"}\n\t\t\t\t${content}\n\t\t\t</div>\n\t\t`;\n\t}\n}\n\n// Workaround for https://bugs.chromium.org/p/chromium/issues/detail?id=481856\nlet notificationsSupported = false;\nif (window.Notification) {\n\tnotificationsSupported = true;\n\tif (Notification.permission === \"default\") {\n\t\ttry {\n\t\t\tnew Notification(\"\");\n\t\t} catch (err) {\n\t\t\tif (err.name === \"TypeError\") {\n\t\t\t\tnotificationsSupported = false;\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass NotificationNagger extends Component {\n\tstate = { nag: false };\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.handleClick = this.handleClick.bind(this);\n\n\t\tthis.state.nag = this.shouldNag();\n\t}\n\n\tshouldNag() {\n\t\treturn notificationsSupported && Notification.permission === \"default\";\n\t}\n\n\thandleClick(event) {\n\t\tevent.preventDefault();\n\n\t\tNotification.requestPermission((permission) => {\n\t\t\tthis.setState({ nag: this.shouldNag() });\n\t\t});\n\t}\n\n\trender() {\n\t\tif (!this.state.nag) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn html`\n\t\t\t<div class=\"logline\">\n\t\t\t\t<${Timestamp}/>\n\t\t\t\t${\" \"}\n\t\t\t\t<a href=\"#\" onClick=${this.handleClick}>Turn on desktop notifications</a> to get notified about new messages\n\t\t\t</div>\n\t\t`;\n\t}\n}\n\nclass ProtocolHandlerNagger extends Component {\n\tstate = { nag: true };\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.handleClick = this.handleClick.bind(this);\n\n\t\tthis.state.nag = !store.naggedProtocolHandler.load();\n\t}\n\n\thandleClick(event) {\n\t\tevent.preventDefault();\n\n\t\tlet url = window.location.origin + window.location.pathname + \"?open=%s\";\n\t\ttry {\n\t\t\tnavigator.registerProtocolHandler(\"irc\", url);\n\t\t\tnavigator.registerProtocolHandler(\"ircs\", url);\n\t\t} catch (err) {\n\t\t\tconsole.error(\"Failed to register protocol handler: \", err);\n\t\t}\n\n\t\tstore.naggedProtocolHandler.put(true);\n\t\tthis.setState({ nag: false });\n\t}\n\n\trender() {\n\t\tif (!navigator.registerProtocolHandler || !this.state.nag) {\n\t\t\treturn null;\n\t\t}\n\t\tlet name = this.props.bouncerName || \"this bouncer\";\n\t\treturn html`\n\t\t\t<div class=\"logline\">\n\t\t\t\t<${Timestamp}/>\n\t\t\t\t${\" \"}\n\t\t\t\t<a href=\"#\" onClick=${this.handleClick}>Register our protocol handler</a> to open IRC links with ${name}\n\t\t\t</div>\n\t\t`;\n\t}\n}\n\nclass DateSeparator extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\tshouldComponentUpdate(nextProps) {\n\t\treturn this.props.date.getTime() !== nextProps.date.getTime();\n\t}\n\n\trender() {\n\t\tlet date = this.props.date;\n\t\tlet YYYY = date.getFullYear().toString().padStart(4, \"0\");\n\t\tlet MM = (date.getMonth() + 1).toString().padStart(2, \"0\");\n\t\tlet DD = date.getDate().toString().padStart(2, \"0\");\n\t\tlet text = `${YYYY}-${MM}-${DD}`;\n\t\treturn html`\n\t\t\t<div class=\"separator date-separator\">\n\t\t\t\t${text}\n\t\t\t</div>\n\t\t`;\n\t}\n}\n\nfunction UnreadSeparator(props) {\n\treturn html`<div class=\"separator unread-separator\">New messages</div>`;\n}\n\nfunction sameDate(d1, d2) {\n\treturn d1.getFullYear() === d2.getFullYear() && d1.getMonth() === d2.getMonth() && d1.getDate() === d2.getDate();\n}\n\nexport default class Buffer extends Component {\n\tshouldComponentUpdate(nextProps) {\n\t\treturn this.props.buffer !== nextProps.buffer;\n\t}\n\n\trender() {\n\t\tlet buf = this.props.buffer;\n\t\tlet server = this.props.server;\n\t\tif (!buf) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet children = [];\n\t\tif (buf.type == BufferType.SERVER) {\n\t\t\tchildren.push(html`<${NotificationNagger}/>`);\n\t\t}\n\t\tif (buf.type == BufferType.SERVER && this.props.isBouncer && !server.isupport.has(\"BOUNCER_NETID\")) {\n\t\t\tlet name = server.isupport.get(\"NETWORK\");\n\t\t\tchildren.push(html`<${ProtocolHandlerNagger} bouncerName=${name}/>`);\n\t\t}\n\n\t\tlet onChannelClick = this.props.onChannelClick;\n\t\tlet onNickClick = this.props.onNickClick;\n\t\tfunction createLogLine(msg) {\n\t\t\treturn html`\n\t\t\t\t<${LogLine}\n\t\t\t\t\tkey=${\"msg-\" + msg.key}\n\t\t\t\t\tmessage=${msg}\n\t\t\t\t\tbuffer=${buf}\n\t\t\t\t\tserver=${server}\n\t\t\t\t\tonChannelClick=${onChannelClick}\n\t\t\t\t\tonNickClick=${onNickClick}\n\t\t\t\t/>\n\t\t\t`;\n\t\t}\n\t\tfunction createFoldGroup(msgs) {\n\t\t\t// Filter out PART → JOIN pairs\n\t\t\tlet partIndexes = new Map();\n\t\t\tlet keep = [];\n\t\t\tmsgs.forEach((msg, i) => {\n\t\t\t\tif (msg.command === \"PART\" || msg.command === \"QUIT\") {\n\t\t\t\t\tpartIndexes.set(msg.prefix.name, i);\n\t\t\t\t}\n\t\t\t\tif (msg.command === \"JOIN\" && partIndexes.has(msg.prefix.name)) {\n\t\t\t\t\tkeep[partIndexes.get(msg.prefix.name)] = false;\n\t\t\t\t\tpartIndexes.delete(msg.prefix.name);\n\t\t\t\t\tkeep.push(false);\n\t\t\t\t} else {\n\t\t\t\t\tkeep.push(true);\n\t\t\t\t}\n\t\t\t});\n\t\t\tmsgs = msgs.filter((msg, i) => keep[i]);\n\n\t\t\tif (msgs.length === 0) {\n\t\t\t\treturn null;\n\t\t\t} else if (msgs.length === 1) {\n\t\t\t\treturn createLogLine(msgs[0]);\n\t\t\t}\n\t\t\treturn html`\n\t\t\t\t<${FoldGroup}\n\t\t\t\t\tkey=${\"fold-\" + msgs[0].key + \"-\" + msgs[msgs.length - 1].key}\n\t\t\t\t\tmessages=${msgs}\n\t\t\t\t\tbuffer=${buf}\n\t\t\t\t\tserver=${server}\n\t\t\t\t\tonNickClick=${onNickClick}\n\t\t\t\t/>\n\t\t\t`;\n\t\t}\n\n\t\tlet hasUnreadSeparator = false;\n\t\tlet prevDate = new Date();\n\t\tlet foldMessages = [];\n\t\tbuf.messages.forEach((msg) => {\n\t\t\tlet sep = [];\n\n\t\t\tif (!hasUnreadSeparator && buf.type != BufferType.SERVER && buf.prevReadReceipt && msg.tags.time > buf.prevReadReceipt.time) {\n\t\t\t\tsep.push(html`<${UnreadSeparator} key=\"unread\"/>`);\n\t\t\t\thasUnreadSeparator = true;\n\t\t\t}\n\n\t\t\tlet date = new Date(msg.tags.time);\n\t\t\tif (!sameDate(prevDate, date)) {\n\t\t\t\tsep.push(html`<${DateSeparator} key=${\"date-\" + date} date=${date}/>`);\n\t\t\t}\n\t\t\tprevDate = date;\n\n\t\t\tif (sep.length > 0) {\n\t\t\t\tchildren.push(createFoldGroup(foldMessages));\n\t\t\t\tchildren.push(sep);\n\t\t\t\tfoldMessages = [];\n\t\t\t}\n\n\t\t\t// TODO: consider checking the time difference too\n\t\t\tif (canFoldMessage(msg)) {\n\t\t\t\tfoldMessages.push(msg);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (foldMessages.length > 0) {\n\t\t\t\tchildren.push(createFoldGroup(foldMessages));\n\t\t\t\tfoldMessages = [];\n\t\t\t}\n\n\t\t\tchildren.push(createLogLine(msg));\n\t\t});\n\t\tchildren.push(createFoldGroup(foldMessages));\n\n\t\treturn html`\n\t\t\t<div class=\"logline-list\">\n\t\t\t\t${children}\n\t\t\t</div>\n\t\t`;\n\t}\n}\n","import * as irc from \"../lib/irc.js\";\nimport { html, Component } from \"../lib/index.js\";\nimport { BufferType, Unread, getBufferURL, getServerName } from \"../state.js\";\n\nfunction BufferItem(props) {\n\tfunction handleClick(event) {\n\t\tevent.preventDefault();\n\t\tprops.onClick();\n\t}\n\tfunction handleMouseDown(event) {\n\t\tif (event.button === 1) { // middle click\n\t\t\tevent.preventDefault();\n\t\t\tprops.onClose();\n\t\t}\n\t}\n\n\tlet name = props.buffer.name;\n\tif (props.buffer.type == BufferType.SERVER) {\n\t\tname = getServerName(props.server, props.bouncerNetwork, props.isBouncer);\n\t}\n\n\tlet classes = [\"type-\" + props.buffer.type];\n\tif (props.active) {\n\t\tclasses.push(\"active\");\n\t}\n\tif (props.buffer.unread != Unread.NONE) {\n\t\tclasses.push(\"unread-\" + props.buffer.unread);\n\t}\n\n\treturn html`\n\t\t<li class=\"${classes.join(\" \")}\">\n\t\t\t<a\n\t\t\t\thref=${getBufferURL(props.buffer)}\n\t\t\t\tonClick=${handleClick}\n\t\t\t\tonMouseDown=${handleMouseDown}\n\t\t\t>${name}</a>\n\t\t</li>\n\t`;\n}\n\n\nexport default function BufferList(props) {\n\tlet items = Array.from(props.buffers.values()).map((buf) => {\n\t\tlet server = props.servers.get(buf.server);\n\n\t\tlet bouncerNetwork = null;\n\t\tlet bouncerNetID = server.isupport.get(\"BOUNCER_NETID\");\n\t\tif (bouncerNetID) {\n\t\t\tbouncerNetwork = props.bouncerNetworks.get(bouncerNetID);\n\t\t}\n\n\t\treturn html`\n\t\t\t<${BufferItem}\n\t\t\t\tkey=${buf.id}\n\t\t\t\tbuffer=${buf}\n\t\t\t\tserver=${server}\n\t\t\t\tisBouncer=${props.isBouncer}\n\t\t\t\tbouncerNetwork=${bouncerNetwork}\n\t\t\t\tonClick=${() => props.onBufferClick(buf)}\n\t\t\t\tonClose=${() => props.onBufferClose(buf)}\n\t\t\t\tactive=${props.activeBuffer == buf.id}\n\t\t\t/>\n\t\t`;\n\t});\n\n\treturn html`<ul>${items}</ul>`;\n}\n","import { html, Component } from \"../lib/index.js\";\nimport linkify from \"../lib/linkify.js\";\nimport { strip as stripANSI } from \"../lib/ansi.js\";\nimport { BufferType, ServerStatus, getServerName } from \"../state.js\";\nimport * as irc from \"../lib/irc.js\";\n\nconst UserStatus = {\n\tHERE: \"here\",\n\tGONE: \"gone\",\n\tOFFLINE: \"offline\",\n};\n\nfunction NickStatus(props) {\n\tlet textMap = {\n\t\t[UserStatus.HERE]: \"User is online\",\n\t\t[UserStatus.GONE]: \"User is away\",\n\t\t[UserStatus.OFFLINE]: \"User is offline\",\n\t};\n\tlet text = textMap[props.status];\n\treturn html`<span class=\"status status-${props.status}\" title=${text}>●</span>`;\n}\n\nexport default function BufferHeader(props) {\n\tfunction handleCloseClick(event) {\n\t\tevent.preventDefault();\n\t\tprops.onClose();\n\t}\n\tfunction handleJoinClick(event) {\n\t\tevent.preventDefault();\n\t\tprops.onJoin();\n\t}\n\tfunction handleAddNetworkClick(event) {\n\t\tevent.preventDefault();\n\t\tprops.onAddNetwork();\n\t}\n\tfunction handleManageNetworkClick(event) {\n\t\tevent.preventDefault();\n\t\tprops.onManageNetwork();\n\t}\n\n\tlet description = null, actions = null;\n\tswitch (props.buffer.type) {\n\tcase BufferType.SERVER:\n\t\tswitch (props.server.status) {\n\t\tcase ServerStatus.DISCONNECTED:\n\t\t\tdescription = \"Disconnected\";\n\t\t\tbreak;\n\t\tcase ServerStatus.CONNECTING:\n\t\t\tdescription = \"Connecting...\";\n\t\t\tbreak;\n\t\tcase ServerStatus.REGISTERING:\n\t\t\tdescription = \"Logging in...\";\n\t\t\tbreak;\n\t\tcase ServerStatus.REGISTERED:\n\t\t\tif (props.bouncerNetwork) {\n\t\t\t\tswitch (props.bouncerNetwork.state) {\n\t\t\t\tcase \"disconnected\":\n\t\t\t\t\tdescription = \"Bouncer disconnected from network\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"connecting\":\n\t\t\t\t\tdescription = \"Bouncer connecting to network...\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"connected\":\n\t\t\t\t\t// host can be undefined e.g. when using UNIX domain sockets\n\t\t\t\t\tdescription = `Connected to ${props.bouncerNetwork.host || \"network\"}`;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (props.buffer.serverInfo) {\n\t\t\t\tlet serverInfo = props.buffer.serverInfo;\n\t\t\t\tdescription = `Connected to ${serverInfo.name}`;\n\t\t\t} else {\n\t\t\t\tdescription = \"Connected\";\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\n\t\tif (props.isBouncer) {\n\t\t\tif (props.server.isupport.get(\"BOUNCER_NETID\")) {\n\t\t\t\tactions = html`\n\t\t\t\t\t<button\n\t\t\t\t\t\tkey=\"join\"\n\t\t\t\t\t\tonClick=${handleJoinClick}\n\t\t\t\t\t>Join channel</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tkey=\"manage\"\n\t\t\t\t\t\tonClick=${handleManageNetworkClick}\n\t\t\t\t\t>Manage network</button>\n\t\t\t\t`;\n\t\t\t} else {\n\t\t\t\tactions = html`\n\t\t\t\t\t<button\n\t\t\t\t\t\tkey=\"add\"\n\t\t\t\t\t\tonClick=${handleAddNetworkClick}\n\t\t\t\t\t>Add network</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tkey=\"disconnect\"\n\t\t\t\t\t\tclass=\"danger\"\n\t\t\t\t\t\tonClick=${handleCloseClick}\n\t\t\t\t\t>Disconnect</button>\n\t\t\t\t`;\n\t\t\t}\n\t\t} else {\n\t\t\tactions = html`\n\t\t\t\t<button\n\t\t\t\t\tkey=\"join\"\n\t\t\t\t\tonClick=${handleJoinClick}\n\t\t\t\t>Join channel</button>\n\t\t\t\t<button\n\t\t\t\t\tkey=\"disconnect\"\n\t\t\t\t\tclass=\"danger\"\n\t\t\t\t\tonClick=${handleCloseClick}\n\t\t\t\t>Disconnect</button>\n\t\t\t`;\n\t\t}\n\t\tbreak;\n\tcase BufferType.CHANNEL:\n\t\tif (props.buffer.topic) {\n\t\t\tdescription = linkify(stripANSI(props.buffer.topic), props.onChannelClick);\n\t\t}\n\t\tif (props.buffer.joined) {\n\t\t\tactions = html`\n\t\t\t\t<button\n\t\t\t\t\tkey=\"part\"\n\t\t\t\t\tclass=\"danger\"\n\t\t\t\t\tonClick=${handleCloseClick}\n\t\t\t\t>Leave</button>\n\t\t\t`;\n\t\t} else {\n\t\t\tactions = html`\n\t\t\t\t<button\n\t\t\t\t\tkey=\"join\"\n\t\t\t\t\tonClick=${handleJoinClick}\n\t\t\t\t>Join</button>\n\t\t\t\t<button\n\t\t\t\t\tkey=\"part\"\n\t\t\t\t\tclass=\"danger\"\n\t\t\t\t\tonClick=${handleCloseClick}\n\t\t\t\t>Close</button>\n\t\t\t`;\n\t\t}\n\t\tbreak;\n\tcase BufferType.NICK:\n\t\tif (props.user) {\n\t\t\tlet status = UserStatus.HERE;\n\t\t\tif (props.user.offline) {\n\t\t\t\tstatus = UserStatus.OFFLINE;\n\t\t\t} else if (props.user.away) {\n\t\t\t\tstatus = UserStatus.GONE;\n\t\t\t}\n\n\t\t\tlet realname = props.buffer.name;\n\t\t\tif (irc.isMeaningfulRealname(props.user.realname, props.buffer.name)) {\n\t\t\t\trealname = stripANSI(props.user.realname || \"\");\n\t\t\t}\n\n\t\t\tlet details = [];\n\t\t\tif (props.user.username && props.user.hostname) {\n\t\t\t\tdetails.push(`${props.user.username}@${props.user.hostname}`);\n\t\t\t}\n\t\t\tif (props.user.account) {\n\t\t\t\tlet desc = `This user is verified and has logged in to the server with the account ${props.user.account}.`;\n\t\t\t\tlet item;\n\t\t\t\tif (props.user.account === props.buffer.name) {\n\t\t\t\t\titem = \"authenticated\";\n\t\t\t\t} else {\n\t\t\t\t\titem = `authenticated as ${props.user.account}`;\n\t\t\t\t}\n\t\t\t\tdetails.push(html`<abbr title=${desc}>${item}</abbr>`);\n\t\t\t} else if (props.server.isupport.has(\"MONITOR\") && props.server.isupport.has(\"WHOX\")) {\n\t\t\t\t// If the server supports MONITOR and WHOX, we can faithfully\n\t\t\t\t// keep user.account up-to-date for user queries\n\t\t\t\tlet desc = \"This user has not been verified and is not logged in.\";\n\t\t\t\tdetails.push(html`<abbr title=${desc}>unauthenticated</abbr>`);\n\t\t\t}\n\t\t\tif (props.user.operator) {\n\t\t\t\tlet desc = \"This user is a server operator, they have administrator privileges.\";\n\t\t\t\tdetails.push(html`<abbr title=${desc}>server operator</abbr>`);\n\t\t\t}\n\t\t\tdetails = details.map((item, i) => {\n\t\t\t\tif (i === 0) {\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t\treturn [\", \", item];\n\t\t\t});\n\t\t\tif (details.length > 0) {\n\t\t\t\tdetails = [\"(\", details, \")\"];\n\t\t\t}\n\n\t\t\tdescription = html`<${NickStatus} status=${status}/> ${realname} ${details}`;\n\t\t}\n\n\t\tactions = html`\n\t\t\t<button\n\t\t\t\tkey=\"close\"\n\t\t\t\tclass=\"danger\"\n\t\t\t\tonClick=${handleCloseClick}\n\t\t\t>Close</button>\n\t\t`;\n\t\tbreak;\n\t}\n\n\tlet name = props.buffer.name;\n\tif (props.buffer.type == BufferType.SERVER) {\n\t\tname = getServerName(props.server, props.bouncerNetwork, props.isBouncer);\n\t}\n\n\treturn html`\n\t\t<div class=\"title\">${name}</div>\n\t\t${description ? html`<div class=\"description\">${description}</div>` : null}\n\t\t<div class=\"actions\">${actions}</div>\n\t`;\n}\n","import { html, Component } from \"../lib/index.js\";\nimport { getNickURL } from \"../state.js\";\nimport { strip as stripANSI } from \"../lib/ansi.js\";\nimport Membership from \"./membership.js\";\nimport * as irc from \"../lib/irc.js\";\n\nclass MemberItem extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t}\n\n\tshouldComponentUpdate(nextProps) {\n\t\treturn this.props.nick !== nextProps.nick\n\t\t\t|| this.props.membership !== nextProps.membership;\n\t}\n\n\thandleClick(event) {\n\t\tevent.preventDefault();\n\t\tthis.props.onClick();\n\t}\n\n\trender() {\n\t\t// XXX: If we were feeling creative we could generate unique colors for\n\t\t// each item in ISUPPORT CHANMODES. But I am not feeling creative.\n\t\tconst membmap = {\n\t\t\t\"~\": \"owner\",\n\t\t\t\"&\": \"admin\",\n\t\t\t\"@\": \"op\",\n\t\t\t\"%\": \"halfop\",\n\t\t\t\"+\": \"voice\",\n\t\t};\n\t\tconst membclass = membmap[this.props.membership[0]] || \"\";\n\t\tlet membership = \"\";\n\t\tif (this.props.membership) {\n\t\t\tmembership = html`\n\t\t\t\t<span class=\"membership ${membclass}\" title=${membclass}>\n\t\t\t\t\t${this.props.membership}\n\t\t\t\t</span>\n\t\t\t`;\n\t\t};\n\n\t\tlet title = null;\n\t\tlet user = this.props.user;\n\t\tif (user) {\n\t\t\tlet mask = \"\";\n\t\t\tif (user.username && user.hostname) {\n\t\t\t\tmask = `${user.username}@${user.hostname}`;\n\t\t\t}\n\n\t\t\tif (irc.isMeaningfulRealname(user.realname, this.props.nick)) {\n\t\t\t\ttitle = stripANSI(user.realname);\n\t\t\t\tif (mask) {\n\t\t\t\t\ttitle = `${title} (${mask})`;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttitle = mask;\n\t\t\t}\n\n\t\t\tif (user.account) {\n\t\t\t\ttitle += `\\nAuthenticated as ${user.account}`;\n\t\t\t}\n\t\t}\n\n\t\treturn html`\n\t\t\t<li>\n\t\t\t\t<a\n\t\t\t\t\thref=${getNickURL(this.props.nick)}\n\t\t\t\t\tclass=\"nick\"\n\t\t\t\t\ttitle=${title}\n\t\t\t\t\tonClick=${this.handleClick}\n\t\t\t\t>\n\t\t\t\t\t<${Membership} value=${this.props.membership}/>\n\t\t\t\t\t${this.props.nick}\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t`;\n\t}\n}\n\nfunction sortMembers(a, b) {\n\tlet [nickA, membA] = a, [nickB, membB] = b;\n\n\tconst prefixPrivs = [\"~\", \"&\", \"@\", \"%\", \"+\"]; // TODO: grab it from ISUPPORT PREFIX\n\tlet i = prefixPrivs.indexOf(membA[0]), j = prefixPrivs.indexOf(membB[0]);\n\tif (i < 0) {\n\t\ti = prefixPrivs.length;\n\t}\n\tif (j < 0) {\n\t\tj = prefixPrivs.length;\n\t}\n\tif (i !== j) {\n\t\treturn i - j;\n\t}\n\n\treturn nickA < nickB ? -1 : 1;\n}\n\nexport default class MemberList extends Component {\n\tshouldComponentUpdate(nextProps) {\n\t\treturn this.props.members !== nextProps.members;\n\t}\n\n\trender() {\n\t\treturn html`\n\t\t\t<ul>\n\t\t\t\t${Array.from(this.props.members).sort(sortMembers).map(([nick, membership]) => html`\n\t\t\t\t\t<${MemberItem}\n\t\t\t\t\t\tkey=${nick}\n\t\t\t\t\t\tnick=${nick}\n\t\t\t\t\t\tmembership=${membership}\n\t\t\t\t\t\tuser=${this.props.users.get(nick)}\n\t\t\t\t\t\tonClick=${() => this.props.onNickClick(nick)}\n\t\t\t\t\t/>\n\t\t\t\t`)}\n\t\t\t</ul>\n\t\t`;\n\t}\n}\n","import { html, Component, createRef } from \"../lib/index.js\";\n\nexport default class ConnectForm extends Component {\n\tstate = {\n\t\turl: \"\",\n\t\tpass: \"\",\n\t\tnick: \"\",\n\t\tpassword: \"\",\n\t\trememberMe: false,\n\t\tusername: \"\",\n\t\trealname: \"\",\n\t\tautojoin: \"\",\n\t};\n\tnickInput = createRef();\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\n\t\tif (props.params) {\n\t\t\tthis.state = {\n\t\t\t\t...this.state,\n\t\t\t\turl: props.params.url || \"\",\n\t\t\t\tnick: props.params.nick || \"\",\n\t\t\t\trememberMe: props.params.autoconnect || false,\n\t\t\t\tusername: props.params.username || \"\",\n\t\t\t\trealname: props.params.realname || \"\",\n\t\t\t\tautojoin: (props.params.autojoin || []).join(\",\"),\n\t\t\t};\n\t\t}\n\t}\n\n\thandleChange(event) {\n\t\tlet target = event.target;\n\t\tlet value = target.type == \"checkbox\" ? target.checked : target.value;\n\t\tthis.setState({ [target.name]: value });\n\t}\n\n\thandleSubmit(event) {\n\t\tevent.preventDefault();\n\n\t\tif (this.props.connecting) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet params = {\n\t\t\turl: this.state.url,\n\t\t\tpass: this.state.pass,\n\t\t\tnick: this.state.nick,\n\t\t\tautoconnect: this.state.rememberMe,\n\t\t\tusername: this.state.username,\n\t\t\trealname: this.state.realname,\n\t\t\tsaslPlain: null,\n\t\t\tautojoin: [],\n\t\t};\n\n\t\tif (this.state.password) {\n\t\t\tparams.saslPlain = {\n\t\t\t\tusername: params.username || params.nick,\n\t\t\t\tpassword: this.state.password,\n\t\t\t};\n\t\t} else if (this.props.auth === \"external\") {\n\t\t\tparams.saslExternal = true;\n\t\t}\n\n\t\tthis.state.autojoin.split(\",\").forEach(function(ch) {\n\t\t\tch = ch.trim();\n\t\t\tif (!ch) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tparams.autojoin.push(ch);\n\t\t});\n\n\t\tthis.props.onSubmit(params);\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.nickInput.current) {\n\t\t\tthis.nickInput.current.focus();\n\t\t}\n\t}\n\n\trender() {\n\t\tlet disabled = this.props.connecting;\n\n\t\tlet serverURL = null;\n\t\tif (!this.props.params || !this.props.params.url) {\n\t\t\tserverURL = html`\n\t\t\t\t<label>\n\t\t\t\t\tServer URL:<br/>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"url\"\n\t\t\t\t\t\tvalue=${this.state.url}\n\t\t\t\t\t\tdisabled=${disabled}\n\t\t\t\t\t\tinputmode=\"url\"\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\t\t\t\t<br/><br/>\n\t\t\t`;\n\t\t}\n\n\t\tlet status = null;\n\t\tif (this.props.connecting) {\n\t\t\tstatus = html`\n\t\t\t\t<p>Connecting...</p>\n\t\t\t`;\n\t\t} else if (this.props.error) {\n\t\t\tstatus = html`\n\t\t\t\t<p class=\"error-text\">${this.props.error}</p>\n\t\t\t`;\n\t\t}\n\n\t\tlet auth = null;\n\t\tif (this.props.auth !== \"disabled\" && this.props.auth !== \"external\") {\n\t\t\tauth = html`\n\t\t\t\t<label>\n\t\t\t\t\tPassword:<br/>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tvalue=${this.state.password}\n\t\t\t\t\t\tdisabled=${disabled}\n\t\t\t\t\t\trequired=${this.props.auth === \"mandatory\"}\n\t\t\t\t\t\tplaceholder=${this.props.auth !== \"mandatory\" ? \"(optional)\" : \"\"}\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\t\t\t\t<br/><br/>\n\t\t\t`;\n\t\t}\n\n\t\tlet autojoin = html`\n\t\t\t<label>\n\t\t\t\tAuto-join channels:<br/>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"autojoin\"\n\t\t\t\t\tvalue=${this.state.autojoin}\n\t\t\t\t\tdisabled=${disabled}\n\t\t\t\t\tplaceholder=\"Comma-separated list of channels\"\n\t\t\t\t/>\n\t\t\t</label>\n\t\t\t<br/>\n\t\t`;\n\n\t\t// Show autojoin field in advanced options, except if it's pre-filled\n\t\tlet isAutojoinAdvanced = (this.props.params.autojoin || []).length === 0;\n\n\t\treturn html`\n\t\t\t<form onChange=${this.handleChange} onSubmit=${this.handleSubmit}>\n\t\t\t\t<h2>Connect to IRC</h2>\n\n\t\t\t\t<label>\n\t\t\t\t\tNickname:<br/>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"username\"\n\t\t\t\t\t\tname=\"nick\"\n\t\t\t\t\t\tvalue=${this.state.nick}\n\t\t\t\t\t\tdisabled=${disabled}\n\t\t\t\t\t\tref=${this.nickInput}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\t\t\t\t<br/><br/>\n\n\t\t\t\t${auth}\n\n\t\t\t\t${!isAutojoinAdvanced ? [autojoin, html`<br/>`] : null}\n\n\t\t\t\t<label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tname=\"rememberMe\"\n\t\t\t\t\t\tchecked=${this.state.rememberMe}\n\t\t\t\t\t\tdisabled=${disabled}\n\t\t\t\t\t/>\n\t\t\t\t\tRemember me\n\t\t\t\t</label>\n\t\t\t\t<br/><br/>\n\n\t\t\t\t<details>\n\t\t\t\t\t<summary role=\"button\">Advanced options</summary>\n\n\t\t\t\t\t<br/>\n\n\t\t\t\t\t${serverURL}\n\n\t\t\t\t\t<label>\n\t\t\t\t\t\tUsername:<br/>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"username\"\n\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\tvalue=${this.state.username}\n\t\t\t\t\t\t\tdisabled=${disabled}\n\t\t\t\t\t\t\tplaceholder=\"Same as nickname\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</label>\n\t\t\t\t\t<br/><br/>\n\n\t\t\t\t\t<label>\n\t\t\t\t\t\tReal name:<br/>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"realname\"\n\t\t\t\t\t\t\tvalue=${this.state.realname}\n\t\t\t\t\t\t\tdisabled=${disabled}\n\t\t\t\t\t\t\tplaceholder=\"Same as nickname\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</label>\n\t\t\t\t\t<br/><br/>\n\n\t\t\t\t\t<label>\n\t\t\t\t\t\tServer password:<br/>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"pass\"\n\t\t\t\t\t\t\tvalue=${this.state.pass}\n\t\t\t\t\t\t\tdisabled=${disabled}\n\t\t\t\t\t\t\tplaceholder=\"None\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</label>\n\t\t\t\t\t<br/><br/>\n\n\t\t\t\t\t${isAutojoinAdvanced ? autojoin : null}\n\t\t\t\t</details>\n\n\t\t\t\t<br/>\n\t\t\t\t<button disabled=${disabled}>Connect</button>\n\n\t\t\t\t${status}\n\t\t\t</form>\n\t\t`;\n\t}\n}\n","import { html, Component } from \"../lib/index.js\";\n\nexport default class JoinForm extends Component {\n\tstate = {\n\t\tchannel: \"#\",\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\n\t\tif (props.channel) {\n\t\t\tthis.state.channel = props.channel;\n\t\t}\n\t}\n\n\thandleChange(event) {\n\t\tlet target = event.target;\n\t\tlet value = target.type == \"checkbox\" ? target.checked : target.value;\n\t\tthis.setState({ [target.name]: value });\n\t}\n\n\thandleSubmit(event) {\n\t\tevent.preventDefault();\n\n\t\tlet params = {\n\t\t\tchannel: this.state.channel,\n\t\t};\n\n\t\tthis.props.onSubmit(params);\n\t}\n\n\trender() {\n\t\treturn html`\n\t\t\t<form onChange=${this.handleChange} onSubmit=${this.handleSubmit}>\n\t\t\t\t<label>\n\t\t\t\t\tChannel:<br/>\n\t\t\t\t\t<input type=\"text\" name=\"channel\" value=${this.state.channel} autofocus required/>\n\t\t\t\t</label>\n\t\t\t\t<br/>\n\n\t\t\t\t<br/>\n\t\t\t\t<button>Join</button>\n\t\t\t</form>\n\t\t`;\n\t}\n}\n","import { ReceiptType, Unread, BufferType, SERVER_BUFFER } from \"./state.js\";\n\nfunction getSiblingBuffer(buffers, bufID, delta) {\n\tlet bufList = Array.from(buffers.values());\n\tlet i = bufList.findIndex((buf) => buf.id === bufID);\n\tif (i < 0) {\n\t\treturn null;\n\t}\n\ti = (i + bufList.length + delta) % bufList.length;\n\treturn bufList[i];\n}\n\nexport const keybindings = [\n\t{\n\t\tkey: \"h\",\n\t\taltKey: true,\n\t\tdescription: \"Mark all messages as read\",\n\t\texecute: (app) => {\n\t\t\tapp.setState((state) => {\n\t\t\t\tlet buffers = new Map();\n\t\t\t\tstate.buffers.forEach((buf) => {\n\t\t\t\t\tif (buf.messages.length > 0) {\n\t\t\t\t\t\tlet lastMsg = buf.messages[buf.messages.length - 1];\n\t\t\t\t\t\tapp.setReceipt(buf.name, ReceiptType.READ, lastMsg);\n\t\t\t\t\t}\n\n\t\t\t\t\tbuffers.set(buf.id, {\n\t\t\t\t\t\t...buf,\n\t\t\t\t\t\tunread: Unread.NONE,\n\t\t\t\t\t\tprevReadReceipt: null,\n\t\t\t\t\t});\n\n\t\t\t\t\tlet client = app.clients.get(buf.server);\n\t\t\t\t\tapp.bufferStore.put({\n\t\t\t\t\t\tname: buf.name,\n\t\t\t\t\t\tserver: client.params,\n\t\t\t\t\t\tunread: Unread.NONE,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\treturn { buffers };\n\t\t\t});\n\t\t},\n\t},\n\t{\n\t\tkey: \"a\",\n\t\taltKey: true,\n\t\tdescription: \"Jump to next buffer with activity\",\n\t\texecute: (app) => {\n\t\t\t// TODO: order by age if same priority\n\t\t\tlet firstServerBuffer = null;\n\t\t\tlet target = null;\n\t\t\tfor (let buf of app.state.buffers.values()) {\n\t\t\t\tif (!firstServerBuffer && buf.type === BufferType.SERVER) {\n\t\t\t\t\tfirstServerBuffer = buf;\n\t\t\t\t}\n\n\t\t\t\tif (buf.unread === Unread.NONE) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (!target || Unread.compare(buf.unread, target.unread) > 0) {\n\t\t\t\t\ttarget = buf;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!target) {\n\t\t\t\ttarget = firstServerBuffer;\n\t\t\t}\n\t\t\tif (target) {\n\t\t\t\tapp.switchBuffer(target);\n\t\t\t}\n\t\t},\n\t},\n\t{\n\t\tkey: \"ArrowUp\",\n\t\taltKey: true,\n\t\tdescription: \"Jump to the previous buffer\",\n\t\texecute: (app) => {\n\t\t\tlet prev = getSiblingBuffer(app.state.buffers, app.state.activeBuffer, -1);\n\t\t\tif (prev) {\n\t\t\t\tapp.switchBuffer(prev);\n\t\t\t}\n\t\t},\n\t},\n\t{\n\t\tkey: \"ArrowDown\",\n\t\taltKey: true,\n\t\tdescription: \"Jump to the next buffer\",\n\t\texecute: (app) => {\n\t\t\tlet next = getSiblingBuffer(app.state.buffers, app.state.activeBuffer, 1);\n\t\t\tif (next) {\n\t\t\t\tapp.switchBuffer(next);\n\t\t\t}\n\t\t},\n\t},\n];\n\nexport function setup(app) {\n\tlet byKey = {};\n\tkeybindings.forEach((binding) => {\n\t\tif (!byKey[binding.key]) {\n\t\t\tbyKey[binding.key] = [];\n\t\t}\n\t\tbyKey[binding.key].push(binding);\n\t});\n\n\twindow.addEventListener(\"keydown\", (event) => {\n\t\tlet candidates = byKey[event.key];\n\t\tif (!candidates) {\n\t\t\treturn;\n\t\t}\n\t\tcandidates = candidates.filter((binding) => {\n\t\t\treturn !!binding.altKey == event.altKey && !!binding.ctrlKey == event.ctrlKey;\n\t\t});\n\t\tif (candidates.length != 1) {\n\t\t\treturn;\n\t\t}\n\t\tevent.preventDefault();\n\t\tcandidates[0].execute(app);\n\t});\n}\n","import * as irc from \"./lib/irc.js\";\nimport { SERVER_BUFFER, BufferType, Unread } from \"./state.js\";\n\nfunction getActiveClient(app) {\n\tlet buf = app.state.buffers.get(app.state.activeBuffer);\n\tif (!buf) {\n\t\tthrow new Error(\"Not connected to server\");\n\t}\n\treturn app.clients.get(buf.server);\n}\n\nfunction getActiveTarget(app) {\n\tlet activeBuffer = app.state.buffers.get(app.state.activeBuffer);\n\tif (!activeBuffer) {\n\t\tthrow new Error(\"Not in a buffer\");\n\t}\n\treturn activeBuffer.name;\n}\n\nfunction getActiveChannel(app) {\n\tlet activeBuffer = app.state.buffers.get(app.state.activeBuffer);\n\tif (!activeBuffer || activeBuffer.type !== BufferType.CHANNEL) {\n\t\tthrow new Error(\"Not in a channel\");\n\t}\n\treturn activeBuffer.name;\n}\n\nfunction setUserHostMode(app, args, mode) {\n\tlet nick = args[0];\n\tif (!nick) {\n\t\tthrow new Error(\"Missing nick\");\n\t}\n\tlet activeChannel = getActiveChannel(app);\n\tlet client = getActiveClient(app);\n\tclient.whois(nick).then((whois) => {\n\t\tconst info = whois[irc.RPL_WHOISUSER].params;\n\t\tconst user = info[2];\n\t\tconst host = info[3];\n\t\tclient.send({\n\t\t\tcommand: \"MODE\",\n\t\t\tparams: [activeChannel, mode, `*!${user}@${host}`],\n\t\t});\n\t});\n}\n\nfunction markServerBufferUnread(app) {\n\tlet activeBuffer = app.state.buffers.get(app.state.activeBuffer);\n\tif (!activeBuffer || activeBuffer.type === BufferType.SERVER) {\n\t\treturn;\n\t}\n\tapp.setBufferState({ server: activeBuffer.server }, (buf) => {\n\t\treturn { unread: Unread.union(buf.unread, Unread.MESSAGE) };\n\t});\n}\n\nconst join = {\n\tusage: \"<name>\",\n\tdescription: \"Join a channel\",\n\texecute: (app, args) => {\n\t\tlet channel = args[0];\n\t\tif (!channel) {\n\t\t\tthrow new Error(\"Missing channel name\");\n\t\t}\n\t\tapp.open(channel);\n\t},\n};\n\nconst kick = {\n\tusage: \"<nick>\",\n\tdescription: \"Remove a user from the channel\",\n\texecute: (app, args) => {\n\t\tlet nick = args[0];\n\t\tlet activeChannel = getActiveChannel(app);\n\t\tlet params = [activeChannel, nick];\n\t\tif (args.length > 1) {\n\t\t\tparams.push(args.slice(1).join(\" \"));\n\t\t}\n\t\tgetActiveClient(app).send({ command: \"KICK\", params });\n\t},\n};\n\nfunction givemode(app, args, mode) {\n\t// TODO: Handle several users at once\n\tlet nick = args[0];\n\tif (!nick) {\n\t\tthrow new Error(\"Missing nick\");\n\t}\n\tlet activeChannel = getActiveChannel(app);\n\tgetActiveClient(app).send({\n\t\tcommand: \"MODE\",\n\t\tparams: [activeChannel, mode, nick],\n\t});\n}\n\nexport default {\n\t\"ban\": {\n\t\tusage: \"[nick]\",\n\t\tdescription: \"Ban a user from the channel, or display the current ban list\",\n\t\texecute: (app, args) => {\n\t\t\tif (args.length == 0) {\n\t\t\t\tlet activeChannel = getActiveChannel(app);\n\t\t\t\tgetActiveClient(app).send({\n\t\t\t\t\tcommand: \"MODE\",\n\t\t\t\t\tparams: [activeChannel, \"+b\"],\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn setUserHostMode(app, args, \"+b\");\n\t\t\t}\n\t\t},\n\t},\n\t\"buffer\": {\n\t\tusage: \"<name>\",\n\t\tdescription: \"Switch to a buffer\",\n\t\texecute: (app, args) => {\n\t\t\tlet name = args[0];\n\t\t\tfor (let buf of app.state.buffers.values()) {\n\t\t\t\tif (buf.name === name) {\n\t\t\t\t\tapp.switchBuffer(buf);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow new Error(\"Unknown buffer\");\n\t\t},\n\t},\n\t\"close\": {\n\t\tdescription: \"Close the current buffer\",\n\t\texecute: (app, args) => {\n\t\t\tlet activeBuffer = app.state.buffers.get(app.state.activeBuffer);\n\t\t\tif (!activeBuffer || activeBuffer.type == BufferType.SERVER) {\n\t\t\t\tthrow new Error(\"Not in a user or channel buffer\");\n\t\t\t}\n\t\t\tapp.close(activeBuffer.id);\n\t\t},\n\t},\n\t\"deop\": {\n\t\tusage: \"<nick>\",\n\t\tdescription: \"Remove operator status for a user on this channel\",\n\t\texecute: (app, args) => givemode(app, args, \"-o\"),\n\t},\n\t\"devoice\": {\n\t\tusage: \"<nick>\",\n\t\tdescription: \"Remove voiced status for a user on this channel\",\n\t\texecute: (app, args) => givemode(app, args, \"-v\"),\n\t},\n\t\"disconnect\": {\n\t\tdescription: \"Disconnect from the server\",\n\t\texecute: (app, args) => {\n\t\t\tapp.disconnect();\n\t\t},\n\t},\n\t\"help\": {\n\t\tdescription: \"Show help menu\",\n\t\texecute: (app, args) => {\n\t\t\tapp.openHelp();\n\t\t},\n\t},\n\t\"invite\": {\n\t\tusage: \"<nick>\",\n\t\tdescription: \"Invite a user to the channel\",\n\t\texecute: (app, args) => {\n\t\t\tlet nick = args[0];\n\t\t\tif (!nick) {\n\t\t\t\tthrow new Error(\"Missing nick\");\n\t\t\t}\n\t\t\tlet activeChannel = getActiveChannel(app);\n\t\t\tgetActiveClient(app).send({ command: \"INVITE\", params: [\n\t\t\t\tnick, activeChannel,\n\t\t\t]});\n\t\t},\n\t},\n\t\"j\": join,\n\t\"join\": join,\n\t\"kick\": kick,\n\t\"kickban\": {\n\t\tusage: \"<target>\",\n\t\tdescription: \"Ban a user and removes them from the channel\",\n\t\texecute: (app, args) => {\n\t\t\tkick.execute(app, args);\n\t\t\tban.execute(app, args);\n\t\t},\n\t},\n\t\"lusers\": {\n\t\tusage: \"[<mask> [<target>]]\",\n\t\tdescription: \"Request user statistics about the network\",\n\t\texecute: (app, args) => {\n\t\t\tgetActiveClient(app).send({ command: \"LUSERS\", params: args });\n\t\t\tmarkServerBufferUnread(app);\n\t\t},\n\t},\n\t\"me\": {\n\t\tusage: \"<action>\",\n\t\tdescription: \"Send an action message to the current buffer\",\n\t\texecute: (app, args) => {\n\t\t\tlet action = args.join(\" \");\n\t\t\tlet target = getActiveTarget(app);\n\t\t\tlet text = `\\x01ACTION ${action}\\x01`;\n\t\t\tapp.privmsg(target, text);\n\t\t},\n\t},\n\t\"mode\": {\n\t\tusage: \"[target] [modes] [mode args...]\",\n\t\tdescription: \"Query or change a channel or user mode\",\n\t\texecute: (app, args) => {\n\t\t\tlet target = args[0];\n\t\t\tif (!target || target.startsWith(\"+\") || target.startsWith(\"-\")) {\n\t\t\t\tlet activeChannel = getActiveChannel(app);\n\t\t\t\targs = [activeChannel, ...args];\n\t\t\t}\n\t\t\tgetActiveClient(app).send({ command: \"MODE\", params: args });\n\t\t},\n\t},\n\t\"motd\": {\n\t\tusage: \"[server]\",\n\t\tdescription: \"Get the Message Of The Day\",\n\t\texecute: (app, args) => {\n\t\t\tgetActiveClient(app).send({ command: \"MOTD\", params: args });\n\t\t\tmarkServerBufferUnread(app);\n\t\t},\n\t},\n\t\"msg\": {\n\t\tusage: \"<target> <message>\",\n\t\tdescription: \"Send a message to a nickname or a channel\",\n\t\texecute: (app, args) => {\n\t\t\tlet target = args[0];\n\t\t\tlet text = args.slice(1).join(\" \");\n\t\t\tgetActiveClient(app).send({ command: \"PRIVMSG\", params: [target, text] });\n\t\t},\n\t},\n\t\"nick\": {\n\t\tusage: \"<nick>\",\n\t\tdescription: \"Change current nickname\",\n\t\texecute: (app, args) => {\n\t\t\tlet newNick = args[0];\n\t\t\tgetActiveClient(app).send({ command: \"NICK\", params: [newNick] });\n\t\t},\n\t},\n\t\"notice\": {\n\t\tusage: \"<target> <message>\",\n\t\tdescription: \"Send a notice to a nickname or a channel\",\n\t\texecute: (app, args) => {\n\t\t\tlet target = args[0];\n\t\t\tlet text = args.slice(1).join(\" \");\n\t\t\tgetActiveClient(app).send({ command: \"NOTICE\", params: [target, text] });\n\t\t},\n\t},\n\t\"op\": {\n\t\tusage: \"<nick>\",\n\t\tdescription: \"Give a user operator status on this channel\",\n\t\texecute: (app, args) => givemode(app, args, \"+o\"),\n\t},\n\t\"part\": {\n\t\tusage: \"[reason]\",\n\t\tdescription: \"Leave a channel\",\n\t\texecute: (app, args) => {\n\t\t\tlet reason = args.join(\" \");\n\t\t\tlet activeChannel = getActiveChannel(app);\n\t\t\tlet params = [activeChannel];\n\t\t\tif (reason) {\n\t\t\t\tparams.push(reason);\n\t\t\t}\n\t\t\tgetActiveClient(app).send({ command: \"PART\", params });\n\t\t},\n\t},\n\t\"query\": {\n\t\tusage: \"<nick> [message]\",\n\t\tdescription: \"Open a buffer to send messages to a nickname\",\n\t\texecute: (app, args) => {\n\t\t\tlet nick = args[0];\n\t\t\tif (!nick) {\n\t\t\t\tthrow new Error(\"Missing nickname\");\n\t\t\t}\n\t\t\tapp.open(nick);\n\n\t\t\tif (args.length > 1) {\n\t\t\t\tlet text = args.slice(1).join(\" \");\n\t\t\t\tapp.privmsg(nick, text);\n\t\t\t}\n\t\t},\n\t},\n\t\"quiet\": {\n\t\tusage: \"[nick]\",\n\t\tdescription: \"Quiet a user in the channel, or display the current quiet list\",\n\t\texecute: (app, args) => {\n\t\t\tif (args.length == 0) {\n\t\t\t\tgetActiveClient(app).send({\n\t\t\t\t\tcommand: \"MODE\",\n\t\t\t\t\tparams: [getActiveChannel(app), \"+q\"],\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn setUserHostMode(app, args, \"+q\");\n\t\t\t}\n\t\t},\n\t},\n\t\"quit\": {\n\t\tdescription: \"Quit\",\n\t\texecute: (app, args) => {\n\t\t\tapp.close({ name: SERVER_BUFFER });\n\t\t},\n\t},\n\t\"quote\": {\n\t\tusage: \"<command>\",\n\t\tdescription: \"Send a raw IRC command to the server\",\n\t\texecute: (app, args) => {\n\t\t\tlet msg;\n\t\t\ttry {\n\t\t\t\tmsg = irc.parseMessage(args.join(\" \"));\n\t\t\t} catch (err) {\n\t\t\t\tthrow new Error(\"Failed to parse IRC command: \" + err.message);\n\t\t\t}\n\t\t\tgetActiveClient(app).send(msg);\n\t\t},\n\t},\n\t\"reconnect\": {\n\t\tdescription: \"Reconnect to the server\",\n\t\texecute: (app, args) => {\n\t\t\tapp.reconnect();\n\t\t},\n\t},\n\t\"setname\": {\n\t\tusage: \"<realname>\",\n\t\tdescription: \"Change current realname\",\n\t\texecute: (app, args) => {\n\t\t\tlet newRealname = args.join(\" \");\n\t\t\tlet client = getActiveClient(app);\n\t\t\tif (!client.enabledCaps[\"setname\"]) {\n\t\t\t\tthrow new Error(\"Server doesn't support changing the realname\");\n\t\t\t}\n\t\t\tclient.send({ command: \"SETNAME\", params: [newRealname] });\n\t\t},\n\t},\n\t\"stats\": {\n\t\tusage: \"<query> [server]\",\n\t\tdescription: \"Request server statistics\",\n\t\texecute: (app, args) => {\n\t\t\tlet query = args[0];\n\t\t\tif (!query) {\n\t\t\t\tthrow new Error(\"Missing query\");\n\t\t\t}\n\t\t\tlet params = [query];\n\t\t\tif (args.length > 1) {\n\t\t\t\tparams.push(args.slice(1).join(\" \"));\n\t\t\t}\n\t\t\tgetActiveClient(app).send({ command: \"STATS\", params });\n\t\t\tmarkServerBufferUnread(app);\n\t\t},\n\t},\n\t\"topic\": {\n\t\tusage: \"<topic>\",\n\t\tdescription: \"Change the topic of the current channel\",\n\t\texecute: (app, args) => {\n\t\t\tlet activeChannel = getActiveChannel(app);\n\t\t\tlet params = [activeChannel];\n\t\t\tif (args.length > 0) {\n\t\t\t\tparams.push(args.join(\" \"));\n\t\t\t}\n\t\t\tgetActiveClient(app).send({ command: \"TOPIC\", params });\n\t\t},\n\t},\n\t\"unban\": {\n\t\tusage: \"<nick>\",\n\t\tdescription: \"Remove a user from the ban list\",\n\t\texecute: (app, args) => {\n\t\t\treturn setUserHostMode(app, args, \"-b\");\n\t\t},\n\t},\n\t\"unquiet\": {\n\t\tusage: \"<nick>\",\n\t\tdescription: \"Remove a user from the quiet list\",\n\t\texecute: (app, args) => {\n\t\t\treturn setUserHostMode(app, args, \"-q\");\n\t\t},\n\t},\n\t\"unvoice\": {\n\t\tusage: \"<nick>\",\n\t\tdescription: \"Remove a user from the voiced list\",\n\t\texecute: (app, args) => givemode(app, args, \"-v\"),\n\t},\n\t\"voice\": {\n\t\tusage: \"<nick>\",\n\t\tdescription: \"Give a user voiced status on this channel\",\n\t\texecute: (app, args) => givemode(app, args, \"+v\"),\n\t},\n\t\"who\": {\n\t\tusage: \"[<mask> [o]]\",\n\t\tdescription: \"Retrieve a list of users\",\n\t\texecute: (app, args) => {\n\t\t\tgetActiveClient(app).send({ command: \"WHO\", params: args });\n\t\t\tmarkServerBufferUnread(app);\n\t\t},\n\t},\n\t\"whois\": {\n\t\tusage: \"<nick>\",\n\t\tdescription: \"Retrieve information about a user\",\n\t\texecute: (app, args) => {\n\t\t\tlet nick = args[0];\n\t\t\tif (!nick) {\n\t\t\t\tthrow new Error(\"Missing nick\");\n\t\t\t}\n\t\t\tgetActiveClient(app).send({ command: \"WHOIS\", params: [nick] });\n\t\t\tmarkServerBufferUnread(app);\n\t\t},\n\t},\n\t\"whowas\": {\n\t\tusage: \"<nick> [count]\",\n\t\tdescription: \"Retrieve information about an offline user\",\n\t\texecute: (app, args) => {\n\t\t\tif (args.length < 1) {\n\t\t\t\tthrow new Error(\"Missing nick\");\n\t\t\t}\n\t\t\tgetActiveClient(app).send({ command: \"WHOWAS\", params: args });\n\t\t\tmarkServerBufferUnread(app);\n\t\t},\n\t},\n\t\"list\": {\n\t\tusage: \"[filter]\",\n\t\tdescription: \"Retrieve a list of channels from a network\",\n\t\texecute: (app, args) => {\n\t\t\tgetActiveClient(app).send({ command: \"LIST\", params: args });\n\t\t\tmarkServerBufferUnread(app);\n\t\t},\n\t},\n};\n","import { html, Component } from \"../lib/index.js\";\nimport { keybindings } from \"../keybindings.js\";\nimport commands from \"../commands.js\";\n\nfunction KeyBindingsHelp() {\n\tlet l = keybindings.map((binding) => {\n\t\tlet keys = [];\n\t\tif (binding.ctrlKey) {\n\t\t\tkeys.psuh(\"Ctrl\");\n\t\t}\n\t\tif (binding.altKey) {\n\t\t\tkeys.push(\"Alt\");\n\t\t}\n\t\tkeys.push(binding.key);\n\n\t\tkeys = keys.map((name, i) => {\n\t\t\treturn html`\n\t\t\t\t${i > 0 ? \"+\" : null}\n\t\t\t\t<kbd>${name}</kbd>\n\t\t\t`;\n\t\t});\n\n\t\treturn html`\n\t\t\t<dt>${keys}</dt>\n\t\t\t<dd>${binding.description}</dd>\n\t\t`;\n\t});\n\n\treturn html`\n\t\t<dl>\n\t\t\t<dt><kbd>/</kbd></dt>\n\t\t\t<dd>Start writing a command</dd>\n\n\t\t\t${l}\n\t\t</dl>\n\t`;\n}\n\nfunction CommandsHelp() {\n\tlet l = Object.keys(commands).map((name) => {\n\t\tlet cmd = commands[name];\n\n\t\tlet usage = \"/\" + name;\n\t\tif (cmd.usage) {\n\t\t\tusage += \" \" + cmd.usage;\n\t\t}\n\n\t\treturn html`\n\t\t\t<dt><strong><code>${usage}</code></strong></dt>\n\t\t\t<dd>${cmd.description}</dd>\n\t\t`;\n\t});\n\n\treturn html`<dl>${l}</dl>`;\n}\n\nexport default function Help() {\n\treturn html`\n\t\t<h3>Key bindings</h3>\n\t\t<${KeyBindingsHelp}/>\n\n\t\t<h3>Commands</h3>\n\t\t<${CommandsHelp}/>\n\t`;\n}\n","import { html, Component } from \"../lib/index.js\";\n\nconst defaultParams = {\n\tname: \"\",\n\thost: \"\",\n\tport: 6697,\n\tnickname: \"\",\n\tusername: \"\",\n\trealname: \"\",\n\tpass: \"\",\n};\n\nexport default class NetworkForm extends Component {\n\tprevParams = null;\n\tstate = {\n\t\t...defaultParams,\n\t\tautojoin: true,\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.prevParams = { ...defaultParams };\n\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\n\t\tif (props.params) {\n\t\t\tObject.keys(defaultParams).forEach((k) => {\n\t\t\t\tif (props.params[k] !== undefined) {\n\t\t\t\t\tthis.state[k] = props.params[k];\n\t\t\t\t\tthis.prevParams[k] = props.params[k];\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\thandleChange(event) {\n\t\tlet target = event.target;\n\t\tlet value = target.type == \"checkbox\" ? target.checked : target.value;\n\t\tthis.setState({ [target.name]: value });\n\t}\n\n\thandleSubmit(event) {\n\t\tevent.preventDefault();\n\n\t\tlet params = {};\n\t\tObject.keys(defaultParams).forEach((k) => {\n\t\t\tif (!this.props.isNew && this.prevParams[k] == this.state[k]) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this.props.isNew && defaultParams[k] == this.state[k]) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tparams[k] = this.state[k];\n\t\t});\n\n\t\tlet autojoin = this.state.autojoin ? this.props.autojoin : null;\n\t\tthis.props.onSubmit(params, autojoin);\n\t}\n\n\trender() {\n\t\tlet removeNetwork = null;\n\t\tif (!this.props.isNew) {\n\t\t\tremoveNetwork = html`\n\t\t\t\t<button type=\"button\" class=\"danger\" onClick=${() => this.props.onRemove()}>\n\t\t\t\t\tRemove network\n\t\t\t\t</button>\n\t\t\t`;\n\t\t}\n\n\t\tlet autojoin = null;\n\t\tif (this.props.autojoin) {\n\t\t\tautojoin = html`\n\t\t\t\t<label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tname=\"autojoin\"\n\t\t\t\t\t\tchecked=${this.state.autojoin}\n\t\t\t\t\t/>\n\t\t\t\t\tAuto-join channel <strong>${this.props.autojoin}</strong>\n\t\t\t\t</label>\n\t\t\t\t<br/><br/>\n\t\t\t`;\n\t\t}\n\n\t\treturn html`\n\t\t\t<form onChange=${this.handleChange} onSubmit=${this.handleSubmit}>\n\t\t\t\t<label>\n\t\t\t\t\tHostname:<br/>\n\t\t\t\t\t<input type=\"text\" name=\"host\" value=${this.state.host} autofocus required/>\n\t\t\t\t</label>\n\t\t\t\t<br/><br/>\n\n\t\t\t\t${autojoin}\n\n\t\t\t\t<details>\n\t\t\t\t\t<summary role=\"button\">Advanced options</summary>\n\n\t\t\t\t\t<br/>\n\n\t\t\t\t\t<label>\n\t\t\t\t\t\tPort:<br/>\n\t\t\t\t\t\t<input type=\"number\" name=\"port\" value=${this.state.port}/>\n\t\t\t\t\t</label>\n\t\t\t\t\t<br/><br/>\n\n\t\t\t\t\t<label>\n\t\t\t\t\t\tNetwork name:<br/>\n\t\t\t\t\t\t<input type=\"text\" name=\"name\" value=${this.state.name}/>\n\t\t\t\t\t</label>\n\t\t\t\t\t<br/><br/>\n\n\t\t\t\t\t<label>\n\t\t\t\t\t\tNickname:<br/>\n\t\t\t\t\t\t<input type=\"username\" name=\"nickname\" value=${this.state.nickname}/>\n\t\t\t\t\t</label>\n\t\t\t\t\t<br/><br/>\n\n\t\t\t\t\t<label>\n\t\t\t\t\t\tUsername:<br/>\n\t\t\t\t\t\t<input type=\"username\" name=\"username\" value=${this.state.username}/>\n\t\t\t\t\t</label>\n\t\t\t\t\t<br/><br/>\n\n\t\t\t\t\t<label>\n\t\t\t\t\t\tReal name:<br/>\n\t\t\t\t\t\t<input type=\"text\" name=\"realname\" value=${this.state.realname}/>\n\t\t\t\t\t</label>\n\t\t\t\t\t<br/><br/>\n\n\t\t\t\t\t<label>\n\t\t\t\t\t\tServer password:<br/>\n\t\t\t\t\t\t<input type=\"password\" name=\"pass\" value=${this.state.pass} placeholder=\"None\"/>\n\t\t\t\t\t</label>\n\t\t\t\t\t<br/>\n\t\t\t\t</details>\n\n\t\t\t\t<br/>\n\t\t\t\t${removeNetwork}\n\t\t\t\t${\" \"}\n\t\t\t\t<button>\n\t\t\t\t\t${this.props.isNew ? \"Add network\" : \"Save network\"}\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t`;\n\t}\n}\n","import { html, Component, createRef } from \"../lib/index.js\";\n\nexport default class Composer extends Component {\n\tstate = {\n\t\ttext: \"\",\n\t};\n\ttextInput = createRef();\n\tlastAutocomplete = null;\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.handleInput = this.handleInput.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.handleInputKeyDown = this.handleInputKeyDown.bind(this);\n\t\tthis.handleWindowKeyDown = this.handleWindowKeyDown.bind(this);\n\t\tthis.handleWindowPaste = this.handleWindowPaste.bind(this);\n\t}\n\n\thandleInput(event) {\n\t\tthis.setState({ [event.target.name]: event.target.value });\n\n\t\tif (this.props.readOnly && event.target.name === \"text\" && !event.target.value) {\n\t\t\tevent.target.blur();\n\t\t}\n\t}\n\n\thandleSubmit(event) {\n\t\tevent.preventDefault();\n\t\tthis.props.onSubmit(this.state.text);\n\t\tthis.setState({ text: \"\" });\n\t}\n\n\thandleInputKeyDown(event) {\n\t\tlet input = event.target;\n\n\t\tif (!this.props.autocomplete || event.key !== \"Tab\") {\n\t\t\treturn;\n\t\t}\n\n\t\tif (input.selectionStart !== input.selectionEnd) {\n\t\t\treturn;\n\t\t}\n\n\t\tevent.preventDefault();\n\n\t\tlet carretPos = input.selectionStart;\n\t\tlet text = this.state.text;\n\t\tlet autocomplete;\n\t\tif (this.lastAutocomplete && this.lastAutocomplete.text === text && this.lastAutocomplete.carretPos === carretPos) {\n\t\t\tautocomplete = this.lastAutocomplete;\n\t\t} else {\n\t\t\tthis.lastAutocomplete = null;\n\n\t\t\tlet wordStart;\n\t\t\tfor (wordStart = carretPos - 1; wordStart >= 0; wordStart--) {\n\t\t\t\tif (text[wordStart] === \" \") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\twordStart++;\n\n\t\t\tlet wordEnd;\n\t\t\tfor (wordEnd = carretPos; wordEnd < text.length; wordEnd++) {\n\t\t\t\tif (text[wordEnd] === \" \") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet word = text.slice(wordStart, wordEnd);\n\t\t\tif (!word) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet replacements = this.props.autocomplete(word);\n\t\t\tif (replacements.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tautocomplete = {\n\t\t\t\ttext,\n\t\t\t\tcarretPos: input.selectionStart,\n\t\t\t\tprefix: text.slice(0, wordStart),\n\t\t\t\tsuffix: text.slice(wordEnd),\n\t\t\t\treplacements,\n\t\t\t\treplIndex: -1,\n\t\t\t};\n\t\t}\n\n\t\tlet n = autocomplete.replacements.length;\n\t\tif (event.shiftKey) {\n\t\t\tautocomplete.replIndex--;\n\t\t} else {\n\t\t\tautocomplete.replIndex++;\n\t\t}\n\t\tautocomplete.replIndex = (autocomplete.replIndex + n) % n;\n\n\t\tlet repl = autocomplete.replacements[autocomplete.replIndex];\n\t\tif (!autocomplete.prefix && !autocomplete.suffix) {\n\t\t\tif (repl.startsWith(\"/\")) {\n\t\t\t\trepl += \" \";\n\t\t\t} else {\n\t\t\t\trepl += \": \";\n\t\t\t}\n\t\t}\n\n\t\tautocomplete.text = autocomplete.prefix + repl + autocomplete.suffix;\n\t\tautocomplete.carretPos = autocomplete.prefix.length + repl.length;\n\n\t\tinput.value = autocomplete.text;\n\t\tinput.selectionStart = autocomplete.carretPos;\n\t\tinput.selectionEnd = input.selectionStart;\n\n\t\tthis.lastAutocomplete = autocomplete;\n\n\t\tthis.setState({ text: autocomplete.text });\n\t}\n\n\thandleWindowKeyDown(event) {\n\t\t// If an <input> or <button> is focused, ignore.\n\t\tif (document.activeElement !== document.body && document.activeElement.tagName !== \"SECTION\") {\n\t\t\treturn;\n\t\t}\n\n\t\t// If a modifier is pressed, reserve for key bindings.\n\t\tif (event.altKey || event.ctrlKey || event.metaKey) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Ignore events that don't produce a Unicode string. If the key event\n\t\t// result in a character being typed by the user, KeyboardEvent.key\n\t\t// will contain the typed string. The key string may contain one\n\t\t// Unicode non-control character and multiple Unicode combining\n\t\t// characters. String.prototype.length cannot be used since it would\n\t\t// return the number of Unicode code-points. Instead, the spread\n\t\t// operator is used to count the number of non-combining Unicode\n\t\t// characters.\n\t\tif ([...event.key].length !== 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.state.text) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.props.readOnly && event.key !== \"/\") {\n\t\t\treturn;\n\t\t}\n\n\t\tevent.preventDefault();\n\t\tthis.setState({ text: event.key }, () => {\n\t\t\tthis.focus();\n\t\t});\n\t}\n\n\thandleWindowPaste(event) {\n\t\t// If an <input> is focused, ignore.\n\t\tif (document.activeElement !== document.body && document.activeElement.tagName !== \"SECTION\") {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.props.readOnly) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.textInput.current) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet text = event.clipboardData.getData('text');\n\n\t\tevent.preventDefault();\n\t\tevent.stopImmediatePropagation();\n\n\t\tthis.textInput.current.focus();\n\t\tthis.textInput.current.setRangeText(text, undefined, undefined, \"end\");\n\t\tthis.setState({ text: this.textInput.current.value });\n\t}\n\n\tcomponentDidMount() {\n\t\twindow.addEventListener(\"keydown\", this.handleWindowKeyDown);\n\t\twindow.addEventListener(\"paste\", this.handleWindowPaste);\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener(\"keydown\", this.handleWindowKeyDown);\n\t\twindow.removeEventListener(\"paste\", this.handleWindowPaste);\n\t}\n\n\tfocus() {\n\t\tif (!this.textInput.current) {\n\t\t\treturn;\n\t\t}\n\t\tdocument.activeElement.blur(); // in case we're read-only\n\t\tthis.textInput.current.focus();\n\t}\n\n\trender() {\n\t\tlet className = \"\";\n\t\tif (this.props.readOnly && !this.state.text) {\n\t\t\tclassName = \"read-only\";\n\t\t}\n\n\t\treturn html`\n\t\t\t<form\n\t\t\t\tid=\"composer\"\n\t\t\t\tclass=${className}\n\t\t\t\tonInput=${this.handleInput}\n\t\t\t\tonSubmit=${this.handleSubmit}\n\t\t\t>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"text\"\n\t\t\t\t\tref=${this.textInput}\n\t\t\t\t\tvalue=${this.state.text}\n\t\t\t\t\tautocomplete=\"off\"\n\t\t\t\t\tplaceholder=\"Type a message\"\n\t\t\t\t\tenterkeyhint=\"send\"\n\t\t\t\t\tonKeyDown=${this.handleInputKeyDown}\n\t\t\t\t/>\n\t\t\t</form>\n\t\t`;\n\t}\n}\n","import { html, Component } from \"../lib/index.js\";\n\nlet store = new Map();\n\nexport default class ScrollManager extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.handleScroll = this.handleScroll.bind(this);\n\t}\n\n\tisAtBottom() {\n\t\tlet target = this.props.target.current;\n\t\treturn target.scrollTop >= target.scrollHeight - target.offsetHeight;\n\t}\n\n\tsaveScrollPosition() {\n\t\tlet target = this.props.target.current;\n\n\t\tlet sticky = target.querySelectorAll(this.props.stickTo);\n\t\tlet stickToKey = null;\n\t\tif (!this.isAtBottom()) {\n\t\t\tfor (let i = 0; i < sticky.length; i++) {\n\t\t\t\tlet el = sticky[i];\n\t\t\t\tif (el.offsetTop >= target.scrollTop + target.offsetTop) {\n\t\t\t\t\tstickToKey = el.dataset.key;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tstore.set(this.props.scrollKey, stickToKey);\n\t}\n\n\trestoreScrollPosition() {\n\t\tlet target = this.props.target.current;\n\n\t\tlet stickToKey = store.get(this.props.scrollKey);\n\t\tif (!stickToKey) {\n\t\t\ttarget.firstChild.scrollIntoView({ block: \"end\" });\n\t\t} else {\n\t\t\tlet stickTo = target.querySelector(\"[data-key=\\\"\" + stickToKey + \"\\\"]\");\n\t\t\tif (stickTo) {\n\t\t\t\tstickTo.scrollIntoView();\n\t\t\t}\n\t\t}\n\n\t\tif (target.scrollTop == 0) {\n\t\t\tthis.props.onScrollTop();\n\t\t}\n\t}\n\n\thandleScroll() {\n\t\tif (this.props.target.current.scrollTop == 0) {\n\t\t\tthis.props.onScrollTop();\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.restoreScrollPosition();\n\t\tthis.props.target.current.addEventListener(\"scroll\", this.handleScroll);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (this.props.scrollKey !== nextProps.scrollKey || this.props.children !== nextProps.children) {\n\t\t\tthis.saveScrollPosition();\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (!this.props.target.current) {\n\t\t\treturn;\n\t\t}\n\t\tthis.restoreScrollPosition();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.props.target.current.removeEventListener(\"scroll\", this.handleScroll);\n\t\tthis.saveScrollPosition();\n\t}\n\n\trender() {\n\t\treturn this.props.children;\n\t}\n}\n","import { html, Component, createRef } from \"../lib/index.js\";\n\nexport default class Dialog extends Component {\n\tbody = createRef();\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.handleCloseClick = this.handleCloseClick.bind(this);\n\t\tthis.handleBackdropClick = this.handleBackdropClick.bind(this);\n\t\tthis.handleKeyDown = this.handleKeyDown.bind(this);\n\t}\n\n\tdismiss() {\n\t\tthis.props.onDismiss();\n\t}\n\n\thandleCloseClick(event) {\n\t\tevent.preventDefault();\n\t\tthis.dismiss();\n\t}\n\n\thandleBackdropClick(event) {\n\t\tif (event.target.className == \"dialog\") {\n\t\t\tthis.dismiss();\n\t\t}\n\t}\n\n\thandleKeyDown(event) {\n\t\tif (event.key == \"Escape\") {\n\t\t\tthis.dismiss();\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\twindow.addEventListener(\"keydown\", this.handleKeyDown);\n\n\t\tlet autofocus = this.body.current.querySelector(\"input[autofocus]\");\n\t\tif (autofocus) {\n\t\t\tautofocus.focus();\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener(\"keydown\", this.handleKeyDown);\n\t}\n\n\trender() {\n\t\treturn html`\n\t\t\t<div class=\"dialog\" onClick=${this.handleBackdropClick}>\n\t\t\t\t<div class=\"dialog-body\" ref=${this.body}>\n\t\t\t\t\t<div class=\"dialog-header\">\n\t\t\t\t\t\t<h2>${this.props.title}</h2>\n\t\t\t\t\t\t<button class=\"dialog-close\" onClick=${this.handleCloseClick}>×</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t${this.props.children}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t}\n}\n","import * as irc from \"../lib/irc.js\";\nimport Client from \"../lib/client.js\";\nimport Buffer from \"./buffer.js\";\nimport BufferList from \"./buffer-list.js\";\nimport BufferHeader from \"./buffer-header.js\";\nimport MemberList from \"./member-list.js\";\nimport ConnectForm from \"./connect-form.js\";\nimport JoinForm from \"./join-form.js\";\nimport Help from \"./help.js\";\nimport NetworkForm from \"./network-form.js\";\nimport Composer from \"./composer.js\";\nimport ScrollManager from \"./scroll-manager.js\";\nimport Dialog from \"./dialog.js\";\nimport { html, Component, createRef } from \"../lib/index.js\";\nimport { strip as stripANSI } from \"../lib/ansi.js\";\nimport { SERVER_BUFFER, BufferType, ReceiptType, ServerStatus, Unread, State } from \"../state.js\";\nimport commands from \"../commands.js\";\nimport { setup as setupKeybindings } from \"../keybindings.js\";\nimport * as store from \"../store.js\";\n\nconst baseConfig = {\n\tserver: {},\n};\n\nconst configPromise = fetch(\"./config.json\")\n\t.then((resp) => {\n\t\tif (resp.ok) {\n\t\t\treturn resp.json();\n\t\t}\n\t\tif (resp.status !== 404) {\n\t\t\tconsole.error(\"Failed to fetch config: HTTP error:\", resp.status, resp.statusText);\n\t\t}\n\t\treturn {};\n\t})\n\t.catch((err) => {\n\t\tconsole.error(\"Failed to fetch config:\", err);\n\t\treturn {};\n\t})\n\t.then((config) => {\n\t\treturn {\n\t\t\t...baseConfig,\n\t\t\t...config,\n\t\t};\n\t});\n\nconst CHATHISTORY_MAX_SIZE = 4000;\n\nfunction parseQueryString() {\n\tlet query = window.location.search.substring(1);\n\tlet params = {};\n\tquery.split('&').forEach((s) => {\n\t\tif (!s) {\n\t\t\treturn;\n\t\t}\n\t\tlet pair = s.split('=');\n\t\tparams[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || \"\");\n\t});\n\treturn params;\n}\n\nfunction splitHostPort(str) {\n\tlet host = str;\n\tlet port = null;\n\n\t// Literal IPv6 addresses contain colons and are enclosed in square brackets\n\tlet i = str.lastIndexOf(\":\");\n\tif (i > 0 && !str.endsWith(\"]\")) {\n\t\thost = str.slice(0, i);\n\t\tport = parseInt(str.slice(i + 1), 10);\n\t}\n\n\tif (host.startsWith(\"[\") && host.endsWith(\"]\")) {\n\t\thost = host.slice(1, host.length - 1);\n\t}\n\n\treturn { host, port };\n}\n\nfunction fillConnectParams(params) {\n\tlet host = window.location.host || \"localhost:8080\";\n\tlet proto = \"wss:\";\n\tif (window.location.protocol != \"https:\") {\n\t\tproto = \"ws:\";\n\t}\n\tlet path = window.location.pathname || \"/\";\n\tif (!window.location.host) {\n\t\tpath = \"/\";\n\t}\n\n\tparams = { ...params };\n\tif (!params.url) {\n\t\tparams.url = proto + \"//\" + host + path + \"socket\";\n\t}\n\tif (params.url.startsWith(\"/\")) {\n\t\tparams.url = proto + \"//\" + host + params.url;\n\t}\n\tif (params.url.indexOf(\"://\") < 0) {\n\t\tparams.url = proto + \"//\" + params.url;\n\t}\n\tif (!params.username) {\n\t\tparams.username = params.nick;\n\t}\n\tif (!params.realname) {\n\t\tparams.realname = params.nick;\n\t}\n\treturn params;\n}\n\nfunction debounce(f, delay) {\n\tlet timeout = null;\n\treturn (...args) => {\n\t\tclearTimeout(timeout);\n\t\ttimeout = setTimeout(() => {\n\t\t\ttimeout = null;\n\t\t\tf(...args);\n\t\t}, delay);\n\t};\n}\n\nfunction showNotification(title, options) {\n\tif (!window.Notification || Notification.permission !== \"granted\") {\n\t\treturn new EventTarget();\n\t}\n\n\t// This can still fail due to:\n\t// https://bugs.chromium.org/p/chromium/issues/detail?id=481856\n\ttry {\n\t\treturn new Notification(title, options);\n\t} catch (err) {\n\t\tconsole.error(\"Failed to show notification: \", err);\n\t\treturn new EventTarget();\n\t}\n}\n\nlet lastErrorID = 0;\n\nexport default class App extends Component {\n\tstate = {\n\t\t...State.create(),\n\t\tconnectParams: {\n\t\t\turl: null,\n\t\t\tpass: null,\n\t\t\tusername: null,\n\t\t\trealname: null,\n\t\t\tnick: null,\n\t\t\tsaslPlain: null,\n\t\t\tsaslExternal: false,\n\t\t\tautoconnect: false,\n\t\t\tautojoin: [],\n\t\t},\n\t\tbouncerNetworks: new Map(),\n\t\tconnectForm: true,\n\t\tloading: true,\n\t\tdialog: null,\n\t\tdialogData: null,\n\t\terror: null,\n\t\topenPanels: {\n\t\t\tbufferList: false,\n\t\t\tmemberList: false,\n\t\t},\n\t};\n\tconfig = { ...baseConfig };\n\tclients = new Map();\n\tendOfHistory = new Map();\n\treceipts = new Map();\n\tbuffer = createRef();\n\tcomposer = createRef();\n\tswitchToChannel = null;\n\t/**\n\t * Parsed irc:// URL to automatically open. The user will be prompted for\n\t * confirmation for security reasons.\n\t */\n\tautoOpenURL = null;\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.handleConnectSubmit = this.handleConnectSubmit.bind(this);\n\t\tthis.handleJoinSubmit = this.handleJoinSubmit.bind(this);\n\t\tthis.handleBufferListClick = this.handleBufferListClick.bind(this);\n\t\tthis.handleBufferListClose = this.handleBufferListClose.bind(this);\n\t\tthis.toggleBufferList = this.toggleBufferList.bind(this);\n\t\tthis.toggleMemberList = this.toggleMemberList.bind(this);\n\t\tthis.handleComposerSubmit = this.handleComposerSubmit.bind(this);\n\t\tthis.handleChannelClick = this.handleChannelClick.bind(this);\n\t\tthis.handleNickClick = this.handleNickClick.bind(this);\n\t\tthis.autocomplete = this.autocomplete.bind(this);\n\t\tthis.handleBufferScrollTop = this.handleBufferScrollTop.bind(this);\n\t\tthis.dismissDialog = this.dismissDialog.bind(this);\n\t\tthis.handleAddNetworkClick = this.handleAddNetworkClick.bind(this);\n\t\tthis.handleNetworkSubmit = this.handleNetworkSubmit.bind(this);\n\t\tthis.handleNetworkRemove = this.handleNetworkRemove.bind(this);\n\t\tthis.handleDismissError = this.handleDismissError.bind(this);\n\n\t\tthis.saveReceipts = debounce(this.saveReceipts.bind(this), 500);\n\n\t\tthis.receipts = store.receipts.load();\n\t\tthis.bufferStore = new store.Buffer();\n\n\t\tconfigPromise.then((config) => {\n\t\t\tthis.handleConfig(config);\n\t\t\treturn config;\n\t\t});\n\t}\n\n\t/**\n\t * Handle configuration data and populate the connection parameters.\n\t *\n\t * The priority order is:\n\t *\n\t * - URL params\n\t * - Saved parameters in local storage\n\t * - Configuration data (fetched from the config.json file)\n\t * - Default server URL constructed from the current URL location (this is\n\t *   done in fillConnectParams)\n\t */\n\thandleConfig(config) {\n\t\tthis.setState({ loading: false });\n\n\t\tlet connectParams = { ...this.state.connectParams };\n\n\t\tif (config.server) {\n\t\t\tif (typeof config.server.url === \"string\") {\n\t\t\t\tconnectParams.url = config.server.url;\n\t\t\t}\n\t\t\tif (Array.isArray(config.server.autojoin)) {\n\t\t\t\tconnectParams.autojoin = config.server.autojoin;\n\t\t\t} else if (typeof config.server.autojoin === \"string\") {\n\t\t\t\tconnectParams.autojoin = [config.server.autojoin];\n\t\t\t}\n\t\t\tif (typeof config.server.nick === \"string\") {\n\t\t\t\tconnectParams.nick = config.server.nick;\n\t\t\t}\n\t\t\tif (typeof config.server.autoconnect === \"boolean\") {\n\t\t\t\tconnectParams.autoconnect = config.server.autoconnect;\n\t\t\t}\n\t\t\tif (config.server.auth === \"external\") {\n\t\t\t\tconnectParams.saslExternal = true;\n\t\t\t}\n\t\t}\n\n\t\tlet autoconnect = store.autoconnect.load();\n\t\tif (autoconnect) {\n\t\t\tconnectParams = {\n\t\t\t\t...connectParams,\n\t\t\t\t...autoconnect,\n\t\t\t\tautoconnect: true,\n\t\t\t\tautojoin: [], // handled by store.Buffer\n\t\t\t};\n\t\t}\n\n\t\tlet autojoin = [];\n\n\t\tlet queryParams = parseQueryString();\n\t\t// Don't allow to silently override the server URL if there's one in\n\t\t// config.json, because this has security implications. But still allow\n\t\t// setting server to an empty string to reveal the server field in the\n\t\t// connect form.\n\t\tif (typeof queryParams.server === \"string\" && (!connectParams.url || !queryParams.server)) {\n\t\t\tconnectParams.url = queryParams.server;\n\n\t\t\t// When using a custom server, some configuration options don't\n\t\t\t// make sense anymore.\n\t\t\tconfig.server.auth = null;\n\t\t}\n\t\tif (typeof queryParams.nick === \"string\") {\n\t\t\tconnectParams.nick = queryParams.nick;\n\t\t}\n\t\tif (typeof queryParams.channels === \"string\") {\n\t\t\tautojoin = queryParams.channels.split(\",\");\n\t\t}\n\t\tif (typeof queryParams.open === \"string\") {\n\t\t\tthis.autoOpenURL = irc.parseURL(queryParams.open);\n\t\t}\n\n\t\tif (window.location.hash) {\n\t\t\tautojoin = window.location.hash.split(\",\");\n\t\t}\n\n\t\tthis.config = config;\n\n\t\tif (autojoin.length > 0) {\n\t\t\tif (connectParams.autoconnect) {\n\t\t\t\t// Ask the user whether they want to join that new channel.\n\t\t\t\t// TODO: support multiple channels here\n\t\t\t\tthis.autoOpenURL = { host: \"\", entity: autojoin[0] };\n\t\t\t} else {\n\t\t\t\tconnectParams.autojoin = autojoin;\n\t\t\t}\n\t\t}\n\n\t\tthis.setState({ connectParams: connectParams });\n\n\t\tif (connectParams.autoconnect) {\n\t\t\tthis.setState({ connectForm: false });\n\t\t\tthis.connect(connectParams);\n\t\t}\n\t}\n\n\tshowError(msg) {\n\t\tthis.setState({ error: msg });\n\t\tlastErrorID++;\n\t\treturn lastErrorID;\n\t}\n\n\tdismissError(id) {\n\t\tif (id && id !== lastErrorID) {\n\t\t\treturn;\n\t\t}\n\t\tthis.setState({ error: null });\n\t}\n\n\thandleDismissError(event) {\n\t\tevent.preventDefault();\n\t\tthis.dismissError();\n\t}\n\n\tsetServerState(id, updater, callback) {\n\t\tthis.setState((state) => {\n\t\t\treturn State.updateServer(state, id, updater);\n\t\t}, callback);\n\t}\n\n\tsetBufferState(id, updater, callback) {\n\t\tthis.setState((state) => {\n\t\t\treturn State.updateBuffer(state, id, updater);\n\t\t}, callback);\n\t}\n\n\tsyncBufferUnread(serverID, name) {\n\t\tlet client = this.clients.get(serverID);\n\n\t\tlet stored = this.bufferStore.get({ name, server: client.params });\n\t\tif (client.enabledCaps[\"draft/chathistory\"] && stored) {\n\t\t\tthis.setBufferState({ server: serverID, name }, { unread: stored.unread });\n\t\t}\n\t\tif (!stored) {\n\t\t\tthis.bufferStore.put({\n\t\t\t\tname,\n\t\t\t\tserver: client.params,\n\t\t\t\tunread: Unread.NONE,\n\t\t\t});\n\t\t}\n\t}\n\n\tcreateBuffer(serverID, name) {\n\t\tlet client = this.clients.get(serverID);\n\t\tlet id = null;\n\t\tlet isNew = false;\n\t\tthis.setState((state) => {\n\t\t\tlet updated;\n\t\t\t[id, updated] = State.createBuffer(state, name, serverID, client);\n\t\t\tisNew = !!updated;\n\t\t\treturn updated;\n\t\t});\n\t\tif (isNew) {\n\t\t\tthis.syncBufferUnread(serverID, name);\n\t\t}\n\t\treturn id;\n\t}\n\n\tswitchBuffer(id) {\n\t\tlet buf;\n\t\tthis.setState((state) => {\n\t\t\tbuf = State.getBuffer(state, id);\n\t\t\tif (!buf) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn { activeBuffer: buf.id };\n\t\t}, () => {\n\t\t\tif (!buf) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet prevReadReceipt = this.getReceipt(buf.name, ReceiptType.READ);\n\t\t\t// TODO: only mark as read if user scrolled at the bottom\n\t\t\tthis.setBufferState(buf.id, {\n\t\t\t\tunread: Unread.NONE,\n\t\t\t\tprevReadReceipt,\n\t\t\t});\n\n\t\t\tif (this.buffer.current) {\n\t\t\t\tthis.buffer.current.focus();\n\t\t\t}\n\n\t\t\tif (buf.messages.length > 0) {\n\t\t\t\tlet lastMsg = buf.messages[buf.messages.length - 1];\n\t\t\t\tthis.setReceipt(buf.name, ReceiptType.READ, lastMsg);\n\n\t\t\t\tlet client = this.clients.get(buf.server);\n\t\t\t\tthis.bufferStore.put({\n\t\t\t\t\tname: buf.name,\n\t\t\t\t\tserver: client.params,\n\t\t\t\t\tunread: Unread.NONE,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet server = this.state.servers.get(buf.server);\n\t\t\tif (buf.type === BufferType.NICK && !server.users.has(buf.name)) {\n\t\t\t\tthis.whoUserBuffer(buf.name, buf.server);\n\t\t\t}\n\t\t});\n\t}\n\n\tsaveReceipts() {\n\t\tstore.receipts.put(this.receipts);\n\t}\n\n\tgetReceipt(target, type) {\n\t\tlet receipts = this.receipts.get(target);\n\t\tif (!receipts) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn receipts[type];\n\t}\n\n\thasReceipt(target, type, msg) {\n\t\tlet receipt = this.getReceipt(target, type);\n\t\treturn receipt && msg.tags.time <= receipt.time;\n\t}\n\n\tsetReceipt(target, type, msg) {\n\t\tlet receipt = this.getReceipt(target, type);\n\t\tif (this.hasReceipt(target, type, msg)) {\n\t\t\treturn;\n\t\t}\n\t\t// TODO: this doesn't trigger a redraw\n\t\tthis.receipts.set(target, {\n\t\t\t...this.receipts.get(target),\n\t\t\t[type]: { time: msg.tags.time },\n\t\t});\n\t\tthis.saveReceipts();\n\t}\n\n\tlatestReceipt(type) {\n\t\tlet last = null;\n\t\tthis.receipts.forEach((receipts, target) => {\n\t\t\tif (target === \"*\") {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet delivery = receipts[type];\n\t\t\tif (!delivery || !delivery.time) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!last || delivery.time > last.time) {\n\t\t\t\tlast = delivery;\n\t\t\t}\n\t\t});\n\t\treturn last;\n\t}\n\n\taddMessage(serverID, bufName, msg) {\n\t\tlet client = this.clients.get(serverID);\n\n\t\t// Treat server-wide broadcasts as highlights. They're sent by server\n\t\t// operators and can contain important information.\n\t\tmsg.isHighlight = irc.isHighlight(msg, client.nick, client.cm) || irc.isServerBroadcast(msg);\n\n\t\tif (!msg.tags) {\n\t\t\tmsg.tags = {};\n\t\t}\n\t\tif (!msg.tags.time) {\n\t\t\tmsg.tags.time = irc.formatDate(new Date());\n\t\t}\n\n\t\tlet isDelivered = this.hasReceipt(bufName, ReceiptType.DELIVERED, msg);\n\t\tlet isRead = this.hasReceipt(bufName, ReceiptType.READ, msg);\n\t\t// TODO: messages coming from infinite scroll shouldn't trigger notifications\n\n\t\tif (client.isMyNick(msg.prefix.name)) {\n\t\t\tisRead = true;\n\t\t}\n\n\t\tlet msgUnread = Unread.NONE;\n\t\tif ((msg.command == \"PRIVMSG\" || msg.command == \"NOTICE\") && !isRead) {\n\t\t\tlet target = msg.params[0];\n\t\t\tlet text = msg.params[1];\n\n\t\t\tlet kind;\n\t\t\tif (msg.isHighlight) {\n\t\t\t\tmsgUnread = Unread.HIGHLIGHT;\n\t\t\t\tkind = \"highlight\";\n\t\t\t} else if (client.isMyNick(target)) {\n\t\t\t\tmsgUnread = Unread.HIGHLIGHT;\n\t\t\t\tkind = \"private message\";\n\t\t\t} else {\n\t\t\t\tmsgUnread = Unread.MESSAGE;\n\t\t\t}\n\n\t\t\tif (msgUnread == Unread.HIGHLIGHT && !isDelivered && !irc.parseCTCP(msg)) {\n\t\t\t\tlet title = \"New \" + kind + \" from \" + msg.prefix.name;\n\t\t\t\tif (client.isChannel(bufName)) {\n\t\t\t\t\ttitle += \" in \" + bufName;\n\t\t\t\t}\n\t\t\t\tlet notif = showNotification(title, {\n\t\t\t\t\tbody: stripANSI(text),\n\t\t\t\t\trequireInteraction: true,\n\t\t\t\t\ttag: \"msg,\" + msg.prefix.name + \",\" + bufName,\n\t\t\t\t});\n\t\t\t\tnotif.addEventListener(\"click\", () => {\n\t\t\t\t\t// TODO: scroll to message\n\t\t\t\t\tthis.switchBuffer({ server: serverID, name: bufName });\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tif (msg.command === \"INVITE\" && client.isMyNick(msg.params[0])) {\n\t\t\tmsgUnread = Unread.HIGHLIGHT;\n\n\t\t\tlet channel = msg.params[1];\n\t\t\tlet notif = new Notification(\"Invitation to \" + channel, {\n\t\t\t\tbody: msg.prefix.name + \" has invited you to \" + channel,\n\t\t\t\trequireInteraction: true,\n\t\t\t\ttag: \"invite,\" + msg.prefix.name + \",\" + channel,\n\t\t\t\tactions: [{\n\t\t\t\t\taction: \"accept\",\n\t\t\t\t\ttitle: \"Accept\",\n\t\t\t\t}],\n\t\t\t});\n\t\t\tnotif.addEventListener(\"click\", (event) => {\n\t\t\t\tif (event.action === \"accept\") {\n\t\t\t\t\tthis.setReceipt(bufName, ReceiptType.READ, msg);\n\t\t\t\t\tthis.open(channel, serverID);\n\t\t\t\t} else {\n\t\t\t\t\t// TODO: scroll to message\n\t\t\t\t\tthis.switchBuffer({ server: serverID, name: bufName });\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Open a new buffer if the message doesn't come from me or is a\n\t\t// self-message\n\t\tif ((!client.isMyNick(msg.prefix.name) || client.isMyNick(bufName)) && (msg.command != \"PART\" && msg.comand != \"QUIT\")) {\n\t\t\tthis.createBuffer(serverID, bufName);\n\t\t}\n\n\t\tthis.setReceipt(bufName, ReceiptType.DELIVERED, msg);\n\n\t\tlet bufID = { server: serverID, name: bufName };\n\t\tthis.setState((state) => State.addMessage(state, msg, bufID));\n\t\tthis.setBufferState(bufID, (buf) => {\n\t\t\t// TODO: set unread if scrolled up\n\t\t\tlet unread = buf.unread;\n\t\t\tlet prevReadReceipt = buf.prevReadReceipt;\n\n\t\t\tif (this.state.activeBuffer !== buf.id) {\n\t\t\t\tunread = Unread.union(unread, msgUnread);\n\t\t\t} else {\n\t\t\t\tthis.setReceipt(bufName, ReceiptType.READ, msg);\n\t\t\t}\n\n\t\t\t// Don't show unread marker for my own messages\n\t\t\tif (client.isMyNick(msg.prefix.name)) {\n\t\t\t\tprevReadReceipt = { time: msg.tags.time };\n\t\t\t}\n\n\t\t\tthis.bufferStore.put({\n\t\t\t\tname: buf.name,\n\t\t\t\tserver: client.params,\n\t\t\t\tunread,\n\t\t\t});\n\t\t\treturn { unread, prevReadReceipt };\n\t\t});\n\t}\n\n\tconnect(params) {\n\t\tlet serverID = null;\n\t\tthis.setState((state) => {\n\t\t\tlet update;\n\t\t\t[serverID, update] = State.createServer(state);\n\t\t\treturn update;\n\t\t});\n\t\tthis.setState({ connectParams: params });\n\n\t\tlet client = new Client(fillConnectParams(params));\n\t\tthis.clients.set(serverID, client);\n\t\tthis.setServerState(serverID, { status: client.status });\n\n\t\tlet errorID = null;\n\n\t\tclient.addEventListener(\"status\", () => {\n\t\t\tthis.setServerState(serverID, { status: client.status });\n\t\t\tif (client.status === Client.Status.REGISTERED) {\n\t\t\t\tthis.setState({ connectForm: false });\n\t\t\t\tif (errorID) {\n\t\t\t\t\tthis.dismissError(errorID);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tclient.addEventListener(\"message\", (event) => {\n\t\t\tthis.handleMessage(serverID, event.detail.message);\n\t\t});\n\n\t\tclient.addEventListener(\"error\", (event) => {\n\t\t\terrorID = this.showError(event.detail);\n\t\t});\n\n\t\tthis.createBuffer(serverID, SERVER_BUFFER);\n\t\tif (!this.state.activeBuffer) {\n\t\t\tthis.switchBuffer({ server: serverID, name: SERVER_BUFFER });\n\t\t}\n\n\t\tif (params.autojoin.length > 0) {\n\t\t\tthis.switchToChannel = params.autojoin[0];\n\t\t}\n\n\t\tif (this.config.server && typeof this.config.server.ping !== \"undefined\") {\n\t\t\tclient.setPingInterval(this.config.server.ping);\n\t\t}\n\t}\n\n\tdisconnect(serverID) {\n\t\tif (!serverID) {\n\t\t\tserverID = State.getActiveServerID(this.state);\n\t\t}\n\n\t\tlet client = this.clients.get(serverID);\n\t\tif (client) {\n\t\t\tthis.clients.delete(serverID);\n\t\t\tclient.disconnect();\n\t\t}\n\t}\n\n\treconnect(serverID) {\n\t\tif (!serverID) {\n\t\t\tserverID = State.getActiveServerID(this.state);\n\t\t}\n\n\t\tlet client = this.clients.get(serverID);\n\t\tif (client) {\n\t\t\tclient.reconnect();\n\t\t}\n\t}\n\n\tserverFromBouncerNetwork(bouncerNetworkID) {\n\t\tfor (let [id, client] of this.clients) {\n\t\t\tif (client.params.bouncerNetwork === bouncerNetworkID) {\n\t\t\t\treturn id;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\trouteMessage(serverID, msg) {\n\t\tlet client = this.clients.get(serverID);\n\t\tlet chatHistoryBatch = irc.findBatchByType(msg, \"chathistory\");\n\n\t\tlet target, channel, affectedBuffers;\n\t\tswitch (msg.command) {\n\t\tcase \"MODE\":\n\t\t\ttarget = msg.params[0];\n\t\t\tif (client.isChannel(target)) {\n\t\t\t\treturn [target];\n\t\t\t}\n\t\t\treturn [SERVER_BUFFER];\n\t\tcase \"NOTICE\":\n\t\tcase \"PRIVMSG\":\n\t\t\ttarget = msg.params[0];\n\t\t\tif (client.isMyNick(target)) {\n\t\t\t\tif (client.cm(msg.prefix.name) === client.cm(client.serverPrefix.name)) {\n\t\t\t\t\ttarget = SERVER_BUFFER;\n\t\t\t\t} else {\n\t\t\t\t\ttarget = msg.prefix.name;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (msg.command === \"NOTICE\" && !State.getBuffer(this.state, { server: serverID, name: target })) {\n\t\t\t\t// Don't open a new buffer if this is just a NOTICE\n\t\t\t\ttarget = SERVER_BUFFER;\n\t\t\t}\n\n\t\t\tlet allowedPrefixes = client.isupport.get(\"STATUSMSG\");\n\t\t\tif (allowedPrefixes) {\n\t\t\t\tlet parts = irc.parseTargetPrefix(target, allowedPrefixes);\n\t\t\t\tif (client.isChannel(parts.name)) {\n\t\t\t\t\ttarget = parts.name;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn [target];\n\t\tcase \"JOIN\":\n\t\t\tchannel = msg.params[0];\n\t\t\tif (!client.isMyNick(msg.prefix.name)) {\n\t\t\t\treturn [channel];\n\t\t\t}\n\t\t\treturn [];\n\t\tcase \"PART\":\n\t\t\tchannel = msg.params[0];\n\t\t\treturn [channel];\n\t\tcase \"KICK\":\n\t\t\tchannel = msg.params[0];\n\t\t\treturn [channel];\n\t\tcase \"QUIT\":\n\t\t\taffectedBuffers = [];\n\t\t\tif (chatHistoryBatch) {\n\t\t\t\taffectedBuffers.push(chatHistoryBatch.params[0]);\n\t\t\t} else {\n\t\t\t\tthis.state.buffers.forEach((buf) => {\n\t\t\t\t\tif (buf.server != serverID) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (!buf.members.has(msg.prefix.name) && client.cm(buf.name) !== client.cm(msg.prefix.name)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\taffectedBuffers.push(buf.name);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn affectedBuffers;\n\t\tcase \"NICK\":\n\t\t\tlet newNick = msg.params[0];\n\n\t\t\taffectedBuffers = [];\n\t\t\tif (chatHistoryBatch) {\n\t\t\t\taffectedBuffers.push(chatHistoryBatch.params[0]);\n\t\t\t} else {\n\t\t\t\tthis.state.buffers.forEach((buf) => {\n\t\t\t\t\tif (buf.server != serverID) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (!buf.members.has(msg.prefix.name)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\taffectedBuffers.push(buf.name);\n\t\t\t\t});\n\t\t\t\tif (client.isMyNick(newNick)) {\n\t\t\t\t\taffectedBuffers.push(SERVER_BUFFER);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn affectedBuffers;\n\t\tcase \"TOPIC\":\n\t\t\tchannel = msg.params[0];\n\t\t\treturn [channel];\n\t\tcase \"INVITE\":\n\t\t\tchannel = msg.params[1];\n\n\t\t\t// TODO: find a more reliable way to do this\n\t\t\tlet bufName = channel;\n\t\t\tif (!State.getBuffer(this.state, { server: serverID, name: channel })) {\n\t\t\t\tbufName = SERVER_BUFFER;\n\t\t\t}\n\n\t\t\treturn [bufName];\n\t\tcase irc.RPL_CHANNELMODEIS:\n\t\tcase irc.RPL_CREATIONTIME:\n\t\tcase irc.RPL_INVITELIST:\n\t\tcase irc.RPL_ENDOFINVITELIST:\n\t\tcase irc.RPL_EXCEPTLIST:\n\t\tcase irc.RPL_ENDOFEXCEPTLIST:\n\t\tcase irc.RPL_BANLIST:\n\t\tcase irc.RPL_ENDOFBANLIST:\n\t\tcase irc.RPL_QUIETLIST:\n\t\tcase irc.RPL_ENDOFQUIETLIST:\n\t\t\tchannel = msg.params[1];\n\t\t\treturn [channel];\n\t\tcase irc.RPL_INVITING:\n\t\t\tchannel = msg.params[2];\n\t\t\treturn [channel];\n\t\tcase irc.RPL_YOURHOST:\n\t\tcase irc.RPL_MYINFO:\n\t\tcase irc.RPL_ISUPPORT:\n\t\tcase irc.RPL_ENDOFMOTD:\n\t\tcase irc.ERR_NOMOTD:\n\t\tcase irc.RPL_NOTOPIC:\n\t\tcase irc.RPL_TOPIC:\n\t\tcase irc.RPL_TOPICWHOTIME:\n\t\tcase irc.RPL_NAMREPLY:\n\t\tcase irc.RPL_ENDOFNAMES:\n\t\tcase irc.RPL_MONONLINE:\n\t\tcase irc.RPL_MONOFFLINE:\n\t\tcase irc.RPL_SASLSUCCESS:\n\t\tcase \"AWAY\":\n\t\tcase \"SETNAME\":\n\t\tcase \"CHGHOST\":\n\t\tcase \"ACCOUNT\":\n\t\tcase \"CAP\":\n\t\tcase \"AUTHENTICATE\":\n\t\tcase \"PING\":\n\t\tcase \"PONG\":\n\t\tcase \"BATCH\":\n\t\tcase \"TAGMSG\":\n\t\tcase \"CHATHISTORY\":\n\t\tcase \"ACK\":\n\t\tcase \"BOUNCER\":\n\t\t\t// Ignore these\n\t\t\treturn [];\n\t\tdefault:\n\t\t\treturn [SERVER_BUFFER];\n\t\t}\n\t}\n\n\thandleMessage(serverID, msg) {\n\t\tlet client = this.clients.get(serverID);\n\n\t\tlet destBuffers = this.routeMessage(serverID, msg);\n\n\t\tif (irc.findBatchByType(msg, \"chathistory\")) {\n\t\t\tdestBuffers.forEach((bufName) => {\n\t\t\t\tthis.addMessage(serverID, bufName, msg);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setState((state) => State.handleMessage(state, msg, serverID, client));\n\n\t\tlet target, channel;\n\t\tswitch (msg.command) {\n\t\tcase irc.RPL_WELCOME:\n\t\t\tlet lastReceipt = this.latestReceipt(ReceiptType.DELIVERED);\n\t\t\tif (lastReceipt && lastReceipt.time && client.enabledCaps[\"draft/chathistory\"] && (!client.enabledCaps[\"soju.im/bouncer-networks\"] || client.params.bouncerNetwork)) {\n\t\t\t\tlet now = irc.formatDate(new Date());\n\t\t\t\tclient.fetchHistoryTargets(now, lastReceipt.time).then((targets) => {\n\t\t\t\t\ttargets.forEach((target) => {\n\t\t\t\t\t\tlet from = lastReceipt;\n\t\t\t\t\t\tlet to = { time: msg.tags.time || now };\n\t\t\t\t\t\tthis.fetchBacklog(client, target.name, from, to);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t\tbreak;\n\t\tcase irc.RPL_ENDOFMOTD:\n\t\tcase irc.ERR_NOMOTD:\n\t\t\t// These messages are used to indicate the end of the ISUPPORT list\n\n\t\t\t// Restore opened channel and user buffers\n\t\t\tlet join = [];\n\t\t\tfor (let buf of this.bufferStore.list(client.params)) {\n\t\t\t\tif (buf.name === \"*\") {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (client.isChannel(buf.name)) {\n\t\t\t\t\tif (client.enabledCaps[\"soju.im/bouncer-networks\"]) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tjoin.push(buf.name);\n\t\t\t\t} else {\n\t\t\t\t\tthis.createBuffer(serverID, buf.name);\n\t\t\t\t\tthis.whoUserBuffer(buf.name, serverID);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Auto-join channels given at connect-time\n\t\t\tlet server = this.state.servers.get(serverID);\n\t\t\tlet bouncerNetID = server.isupport.get(\"BOUNCER_NETID\");\n\t\t\tlet bouncerNetwork = null;\n\t\t\tif (bouncerNetID) {\n\t\t\t\tbouncerNetwork = this.state.bouncerNetworks.get(bouncerNetID);\n\t\t\t}\n\t\t\tif (!bouncerNetwork || bouncerNetwork.state === \"connected\") {\n\t\t\t\tjoin = join.concat(client.params.autojoin);\n\t\t\t\tclient.params.autojoin = [];\n\t\t\t}\n\n\t\t\tif (join.length > 0) {\n\t\t\t\tclient.send({\n\t\t\t\t\tcommand: \"JOIN\",\n\t\t\t\t\tparams: [join.join(\",\")],\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet serverHost = bouncerNetwork ? bouncerNetwork.host : \"\";\n\t\t\tif (this.autoOpenURL && serverHost === this.autoOpenURL.host) {\n\t\t\t\tthis.openURL(this.autoOpenURL);\n\t\t\t\tthis.autoOpenURL = null;\n\t\t\t}\n\t\tcase \"JOIN\":\n\t\t\tchannel = msg.params[0];\n\n\t\t\tif (client.isMyNick(msg.prefix.name)) {\n\t\t\t\tthis.syncBufferUnread(serverID, channel);\n\t\t\t}\n\t\t\tif (channel == this.switchToChannel) {\n\t\t\t\tthis.switchBuffer({ server: serverID, name: channel });\n\t\t\t\tthis.switchToChannel = null;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"PART\":\n\t\t\tchannel = msg.params[0];\n\n\t\t\tif (client.isMyNick(msg.prefix.name)) {\n\t\t\t\tthis.receipts.delete(channel);\n\t\t\t\tthis.saveReceipts();\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"BOUNCER\":\n\t\t\tif (msg.params[0] !== \"NETWORK\") {\n\t\t\t\tbreak; // We're only interested in network updates\n\t\t\t}\n\n\t\t\tif (client.isupport.has(\"BOUNCER_NETID\")) {\n\t\t\t\t// This can happen if the user has specified a network to bind\n\t\t\t\t// to via other means, e.g. \"<username>/<network>\".\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tlet id = msg.params[1];\n\t\t\tlet attrs = null;\n\t\t\tif (msg.params[2] !== \"*\") {\n\t\t\t\tattrs = irc.parseTags(msg.params[2]);\n\t\t\t}\n\n\t\t\tlet isNew = false;\n\t\t\tthis.setState((state) => {\n\t\t\t\tlet bouncerNetworks = new Map(state.bouncerNetworks);\n\t\t\t\tif (!attrs) {\n\t\t\t\t\tbouncerNetworks.delete(id);\n\t\t\t\t} else {\n\t\t\t\t\tlet prev = bouncerNetworks.get(id);\n\t\t\t\t\tisNew = prev === undefined;\n\t\t\t\t\tattrs = { ...prev, ...attrs };\n\t\t\t\t\tbouncerNetworks.set(id, attrs);\n\t\t\t\t}\n\t\t\t\treturn { bouncerNetworks };\n\t\t\t}, () => {\n\t\t\t\tif (!attrs) {\n\t\t\t\t\tlet serverID = this.serverFromBouncerNetwork(id);\n\t\t\t\t\tif (serverID) {\n\t\t\t\t\t\tthis.close({ server: serverID, name: SERVER_BUFFER });\n\t\t\t\t\t}\n\t\t\t\t} else if (isNew) {\n\t\t\t\t\tthis.connect({\n\t\t\t\t\t\t...client.params,\n\t\t\t\t\t\tbouncerNetwork: id,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (attrs && attrs.state === \"connected\") {\n\t\t\t\t\tlet serverID = this.serverFromBouncerNetwork(id);\n\t\t\t\t\tlet client = this.clients.get(serverID);\n\t\t\t\t\tif (client && client.status === Client.Status.REGISTERED && client.params.autojoin && client.params.autojoin.length > 0) {\n\t\t\t\t\t\tclient.send({\n\t\t\t\t\t\t\tcommand: \"JOIN\",\n\t\t\t\t\t\t\tparams: [client.params.autojoin.join(\",\")],\n\t\t\t\t\t\t});\n\t\t\t\t\t\tclient.params.autojoin = [];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tbreak;\n\t\tcase \"BATCH\":\n\t\t\tif (!msg.params[0].startsWith(\"-\")) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlet name = msg.params[0].slice(1);\n\t\t\tlet batch = client.batches.get(name);\n\t\t\tif (!batch || batch.type !== \"soju.im/bouncer-networks\") {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// We've received a BOUNCER NETWORK batch. If we have a URL to\n\t\t\t// auto-open and no existing network matches it, ask the user to\n\t\t\t// create a new network.\n\t\t\tif (this.autoOpenURL && this.autoOpenURL.host && !this.findBouncerNetIDByHost(this.autoOpenURL.host)) {\n\t\t\t\tthis.openURL(this.autoOpenURL);\n\t\t\t\tthis.autoOpenURL = null;\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tif (irc.isError(msg.command) && msg.command != irc.ERR_NOMOTD) {\n\t\t\t\tlet description = msg.params[msg.params.length - 1];\n\t\t\t\tthis.showError(description);\n\t\t\t}\n\t\t}\n\n\t\tdestBuffers.forEach((bufName) => {\n\t\t\tthis.addMessage(serverID, bufName, msg);\n\t\t});\n\t}\n\n\thandleConnectSubmit(connectParams) {\n\t\tthis.dismissError();\n\n\t\tif (connectParams.autoconnect) {\n\t\t\tstore.autoconnect.put(connectParams);\n\t\t} else {\n\t\t\tstore.autoconnect.put(null);\n\t\t}\n\n\t\t// Disconnect previous server, if any\n\t\tlet activeBuffer = this.state.buffers.get(this.state.activeBuffer);\n\t\tif (activeBuffer) {\n\t\t\tthis.close(activeBuffer.server);\n\t\t}\n\n\t\tthis.connect(connectParams);\n\t}\n\n\thandleChannelClick(event) {\n\t\tlet handled = this.openURL(event.target.href);\n\t\tif (handled) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\tfindBouncerNetIDByHost(host) {\n\t\tfor (let [id, bouncerNetwork] of this.state.bouncerNetworks) {\n\t\t\tif (bouncerNetwork.host === host) {\n\t\t\t\treturn id;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\topenURL(url) {\n\t\tif (typeof url === \"string\") {\n\t\t\turl = irc.parseURL(url);\n\t\t}\n\t\tif (!url) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet { host, port } = splitHostPort(url.host);\n\n\t\tlet serverID;\n\t\tif (!url.host) {\n\t\t\tserverID = State.getActiveServerID(this.state);\n\t\t} else {\n\t\t\tlet bouncerNetID = this.findBouncerNetIDByHost(host);\n\t\t\tif (!bouncerNetID) {\n\t\t\t\t// Open dialog to create network if bouncer\n\t\t\t\tlet client = this.clients.values().next().value;\n\t\t\t\tif (!client || !client.enabledCaps[\"soju.im/bouncer-networks\"]) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlet params = { host };\n\t\t\t\tif (typeof port === \"number\") {\n\t\t\t\t\tparams.port = port;\n\t\t\t\t}\n\t\t\t\tthis.openDialog(\"network\", { params, autojoin: url.entity });\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tfor (let [id, server] of this.state.servers) {\n\t\t\t\tif (server.isupport.get(\"BOUNCER_NETID\") === bouncerNetID) {\n\t\t\t\t\tserverID = id;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!serverID) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet buf = State.getBuffer(this.state, { server: serverID, name: url.entity || SERVER_BUFFER });\n\t\tif (buf) {\n\t\t\tthis.switchBuffer(buf.id);\n\t\t} else {\n\t\t\tthis.openDialog(\"join\", { server: serverID, channel: url.entity });\n\t\t}\n\t\treturn true;\n\t}\n\n\thandleNickClick(nick) {\n\t\tthis.open(nick);\n\t}\n\n\tfetchBacklog(client, target, after, before) {\n\t\tclient.fetchHistoryBetween(target, after, before, CHATHISTORY_MAX_SIZE).catch((err) => {\n\t\t\tconsole.error(\"Failed to fetch backlog for '\" + target + \"': \", err);\n\t\t\tthis.showError(\"Failed to fetch backlog for '\" + target + \"'\");\n\t\t\tthis.receipts.delete(target);\n\t\t\tthis.saveReceipts();\n\t\t});\n\t}\n\n\twhoUserBuffer(target, serverID) {\n\t\tlet client = this.clients.get(serverID);\n\n\t\tclient.who(target, {\n\t\t\tfields: [\"flags\", \"hostname\", \"nick\", \"realname\", \"username\", \"account\"],\n\t\t});\n\t\tclient.monitor(target);\n\t}\n\n\topen(target, serverID) {\n\t\tif (!serverID) {\n\t\t\tserverID = State.getActiveServerID(this.state);\n\t\t}\n\n\t\tlet client = this.clients.get(serverID);\n\t\tif (client.isServer(target)) {\n\t\t\tthis.switchBuffer({ server: serverID });\n\t\t} else if (client.isChannel(target)) {\n\t\t\tthis.switchToChannel = target;\n\t\t\tclient.send({ command: \"JOIN\", params: [target] });\n\t\t} else {\n\t\t\tthis.whoUserBuffer(target, serverID);\n\t\t\tthis.createBuffer(serverID, target);\n\t\t\tthis.switchBuffer({ server: serverID, name: target });\n\t\t}\n\t}\n\n\tclose(id) {\n\t\tlet buf = State.getBuffer(this.state, id);\n\t\tif (!buf) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet client = this.clients.get(buf.server);\n\t\tswitch (buf.type) {\n\t\tcase BufferType.SERVER:\n\t\t\tthis.setState((state) => {\n\t\t\t\tlet buffers = new Map(state.buffers);\n\t\t\t\tfor (let [id, b] of state.buffers) {\n\t\t\t\t\tif (b.server === buf.server) {\n\t\t\t\t\t\tbuffers.delete(id);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet activeBuffer = state.activeBuffer;\n\t\t\t\tif (activeBuffer && state.buffers.get(activeBuffer).server === buf.server) {\n\t\t\t\t\tif (buffers.size > 0) {\n\t\t\t\t\t\tactiveBuffer = buffers.keys().next().value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tactiveBuffer = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn { buffers, activeBuffer };\n\t\t\t});\n\n\t\t\tlet disconnectAll = client && !client.params.bouncerNetwork && client.enabledCaps[\"soju.im/bouncer-networks\"];\n\n\t\t\tthis.disconnect(buf.server);\n\n\t\t\tthis.setState((state) => {\n\t\t\t\tlet servers = new Map(state.servers);\n\t\t\t\tservers.delete(buf.server);\n\n\t\t\t\tlet connectForm = state.connectForm;\n\t\t\t\tif (servers.size == 0) {\n\t\t\t\t\tconnectForm = true;\n\t\t\t\t}\n\n\t\t\t\treturn { servers, connectForm };\n\t\t\t});\n\n\t\t\tif (disconnectAll) {\n\t\t\t\tfor (let serverID of this.clients.keys()) {\n\t\t\t\t\tthis.close({ server: serverID, name: SERVER_BUFFER });\n\t\t\t\t}\n\t\t\t\tthis.bufferStore.clear();\n\t\t\t} else {\n\t\t\t\tthis.bufferStore.clear(client.params);\n\t\t\t}\n\n\t\t\t// TODO: only clear autoconnect if this server is stored there\n\t\t\tif (buf.server == 1) {\n\t\t\t\tstore.autoconnect.put(null);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase BufferType.CHANNEL:\n\t\t\tif (buf.joined) {\n\t\t\t\tclient.send({ command: \"PART\", params: [buf.name] });\n\t\t\t}\n\t\t\t// fallthrough\n\t\tcase BufferType.NICK:\n\t\t\tthis.switchBuffer({ name: SERVER_BUFFER });\n\t\t\tthis.setState((state) => {\n\t\t\t\tlet buffers = new Map(state.buffers);\n\t\t\t\tbuffers.delete(buf.id);\n\t\t\t\treturn { buffers };\n\t\t\t});\n\n\t\t\tclient.unmonitor(buf.name);\n\n\t\t\tthis.receipts.delete(buf.name);\n\t\t\tthis.saveReceipts();\n\n\t\t\tthis.bufferStore.delete({ name: buf.name, server: client.params });\n\t\t\tbreak;\n\t\t}\n\t}\n\n\texecuteCommand(s) {\n\t\tlet parts = s.split(\" \");\n\t\tlet name = parts[0].toLowerCase().slice(1);\n\t\tlet args = parts.slice(1);\n\n\t\tlet cmd = commands[name];\n\t\tif (!cmd) {\n\t\t\tthis.showError(`Unknown command \"${name}\" (run \"/help\" to get a command list)`);\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tcmd.execute(this, args);\n\t\t} catch (error) {\n\t\t\tconsole.error(`Failed to execute command \"${name}\":`, error);\n\t\t\tthis.showError(error.message);\n\t\t}\n\t}\n\n\tprivmsg(target, text) {\n\t\tif (target == SERVER_BUFFER) {\n\t\t\tthis.showError(\"Cannot send message in server buffer\");\n\t\t\treturn;\n\t\t}\n\n\t\tlet serverID = State.getActiveServerID(this.state);\n\t\tlet client = this.clients.get(serverID);\n\n\t\tlet msg = { command: \"PRIVMSG\", params: [target, text] };\n\t\tclient.send(msg);\n\n\t\tif (!client.enabledCaps[\"echo-message\"]) {\n\t\t\tmsg.prefix = { name: client.nick };\n\t\t\tthis.addMessage(serverID, target, msg);\n\t\t}\n\t}\n\n\thandleComposerSubmit(text) {\n\t\tif (!text) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (text.startsWith(\"//\")) {\n\t\t\ttext = text.slice(1);\n\t\t} else if (text.startsWith(\"/\")) {\n\t\t\tthis.executeCommand(text);\n\t\t\treturn;\n\t\t}\n\n\t\tlet buf = this.state.buffers.get(this.state.activeBuffer);\n\t\tif (!buf) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.privmsg(buf.name, text);\n\t}\n\n\thandleBufferListClick(id) {\n\t\tthis.switchBuffer(id);\n\t\tthis.closeBufferList();\n\t}\n\n\thandleBufferListClose(id) {\n\t\tthis.close(id);\n\t\tthis.closeBufferList();\n\t}\n\n\ttoggleBufferList() {\n\t\tthis.setState((state) => {\n\t\t\tlet openPanels = {\n\t\t\t\t...state.openPanels,\n\t\t\t\tbufferList: !state.openPanels.bufferList,\n\t\t\t};\n\t\t\treturn { openPanels };\n\t\t});\n\t}\n\n\ttoggleMemberList() {\n\t\tthis.setState((state) => {\n\t\t\tlet openPanels = {\n\t\t\t\t...state.openPanels,\n\t\t\t\tmemberList: !state.openPanels.memberList,\n\t\t\t};\n\t\t\treturn { openPanels };\n\t\t});\n\t}\n\n\tcloseBufferList() {\n\t\tthis.setState((state) => {\n\t\t\tlet openPanels = {\n\t\t\t\t...state.openPanels,\n\t\t\t\tbufferList: false,\n\t\t\t};\n\t\t\treturn { openPanels };\n\t\t});\n\t}\n\n\tcloseMemberList() {\n\t\tthis.setState((state) => {\n\t\t\tlet openPanels = {\n\t\t\t\t...state.openPanels,\n\t\t\t\tmemberList: false,\n\t\t\t};\n\t\t\treturn { openPanels };\n\t\t});\n\t}\n\n\thandleJoinClick(buf) {\n\t\tswitch (buf.type) {\n\t\tcase BufferType.SERVER:\n\t\t\tthis.openDialog(\"join\", { server: buf.server });\n\t\t\tbreak;\n\t\tcase BufferType.CHANNEL:\n\t\t\tlet client = this.clients.get(buf.server);\n\t\t\tclient.send({ command: \"JOIN\", params: [buf.name] });\n\t\t\tbreak;\n\t\t}\n\t}\n\n\thandleJoinSubmit(data) {\n\t\tthis.open(data.channel, this.state.dialogData.server);\n\t\tthis.dismissDialog();\n\t}\n\n\tautocomplete(prefix) {\n\t\tfunction fromList(l, prefix) {\n\t\t\tprefix = prefix.toLowerCase();\n\t\t\tlet repl = [];\n\t\t\tfor (let item of l) {\n\t\t\t\tif (item.toLowerCase().startsWith(prefix)) {\n\t\t\t\t\trepl.push(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn repl;\n\t\t}\n\n\t\tif (prefix.startsWith(\"/\")) {\n\t\t\tlet repl = fromList(Object.keys(commands), prefix.slice(1));\n\t\t\treturn repl.map(cmd => \"/\" + cmd);\n\t\t}\n\n\t\t// TODO: consider using the CHANTYPES ISUPPORT token here\n\t\tif (prefix.startsWith(\"#\")) {\n\t\t\tlet chanNames = [];\n\t\t\tfor (const buf of this.state.buffers.values()) {\n\t\t\t\tif (buf.name.startsWith(\"#\")) {\n\t\t\t\t\tchanNames.push(buf.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn fromList(chanNames, prefix);\n\t\t}\n\n\t\tlet buf = this.state.buffers.get(this.state.activeBuffer);\n\t\tif (!buf || !buf.members) {\n\t\t\treturn [];\n\t\t}\n\t\treturn fromList(buf.members.keys(), prefix);\n\t}\n\n\topenHelp() {\n\t\tthis.openDialog(\"help\");\n\t}\n\n\thandleBufferScrollTop() {\n\t\tlet buf = this.state.buffers.get(this.state.activeBuffer);\n\t\tif (!buf || buf.type == BufferType.SERVER) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet client = this.clients.get(buf.server);\n\n\t\tif (!client || !client.enabledCaps[\"draft/chathistory\"] || !client.enabledCaps[\"server-time\"]) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.endOfHistory.get(buf.id)) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet before;\n\t\tif (buf.messages.length > 0) {\n\t\t\tbefore = buf.messages[0].tags[\"time\"];\n\t\t} else {\n\t\t\tbefore = irc.formatDate(new Date());\n\t\t}\n\n\t\t// Avoids sending multiple CHATHISTORY commands in parallel\n\t\tthis.endOfHistory.set(buf.id, true);\n\n\t\tlet limit = 100;\n\t\tif (client.enabledCaps[\"draft/event-playback\"]) {\n\t\t\tlimit = 200;\n\t\t}\n\n\t\tclient.fetchHistoryBefore(buf.name, before, limit).then((result) => {\n\t\t\tthis.endOfHistory.set(buf.id, !result.more);\n\t\t});\n\t}\n\n\topenDialog(name, data) {\n\t\tthis.setState({ dialog: name, dialogData: data });\n\t}\n\n\tdismissDialog() {\n\t\tthis.setState({ dialog: null, dialogData: null });\n\t}\n\n\thandleAddNetworkClick() {\n\t\tthis.openDialog(\"network\");\n\t}\n\n\thandleManageNetworkClick(serverID) {\n\t\tlet server = this.state.servers.get(serverID);\n\t\tlet bouncerNetID = server.isupport.get(\"BOUNCER_NETID\");\n\t\tlet bouncerNetwork = this.state.bouncerNetworks.get(bouncerNetID);\n\t\tthis.openDialog(\"network\", {\n\t\t\tid: bouncerNetID,\n\t\t\tparams: bouncerNetwork,\n\t\t});\n\t}\n\n\thandleNetworkSubmit(attrs, autojoin) {\n\t\tlet client = this.clients.values().next().value;\n\n\t\tif (this.state.dialogData && this.state.dialogData.id) {\n\t\t\tif (Object.keys(attrs).length == 0) {\n\t\t\t\tthis.dismissDialog();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclient.send({\n\t\t\t\tcommand: \"BOUNCER\",\n\t\t\t\tparams: [\"CHANGENETWORK\", this.state.dialogData.id, irc.formatTags(attrs)],\n\t\t\t});\n\t\t} else {\n\t\t\tattrs = { ...attrs, tls: \"1\" };\n\t\t\tclient.createBouncerNetwork(attrs).then((id) => {\n\t\t\t\tif (!autojoin) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// By this point, bouncer-networks-notify should've advertised\n\t\t\t\t// the new network\n\t\t\t\tlet serverID = this.serverFromBouncerNetwork(id);\n\t\t\t\tlet client = this.clients.get(serverID);\n\t\t\t\tclient.params.autojoin = [autojoin];\n\n\t\t\t\tthis.switchToChannel = autojoin;\n\t\t\t});\n\t\t}\n\n\t\tthis.dismissDialog();\n\t}\n\n\thandleNetworkRemove() {\n\t\tlet client = this.clients.values().next().value;\n\n\t\tclient.send({\n\t\t\tcommand: \"BOUNCER\",\n\t\t\tparams: [\"DELNETWORK\", this.state.dialogData.id],\n\t\t});\n\n\t\tthis.dismissDialog();\n\t}\n\n\tcomponentDidMount() {\n\t\tsetupKeybindings(this);\n\t}\n\n\trender() {\n\t\tif (this.state.loading) {\n\t\t\treturn html`<section id=\"connect\"></section>`;\n\t\t}\n\n\t\tlet activeBuffer = null, activeServer = null, activeBouncerNetwork = null;\n\t\tlet isBouncer = false;\n\t\tif (this.state.buffers.get(this.state.activeBuffer)) {\n\t\t\tactiveBuffer = this.state.buffers.get(this.state.activeBuffer);\n\t\t\tactiveServer = this.state.servers.get(activeBuffer.server);\n\n\t\t\tlet activeClient = this.clients.get(activeBuffer.server);\n\t\t\tisBouncer = activeClient && activeClient.enabledCaps[\"soju.im/bouncer-networks\"];\n\n\t\t\tlet bouncerNetID = activeServer.isupport.get(\"BOUNCER_NETID\");\n\t\t\tif (bouncerNetID) {\n\t\t\t\tactiveBouncerNetwork = this.state.bouncerNetworks.get(bouncerNetID);\n\t\t\t}\n\t\t}\n\n\t\tif (this.state.connectForm) {\n\t\t\tlet status = activeServer ? activeServer.status : ServerStatus.DISCONNECTED;\n\t\t\tlet connecting = status === ServerStatus.CONNECTING || status === ServerStatus.REGISTERING;\n\t\t\treturn html`\n\t\t\t\t<section id=\"connect\">\n\t\t\t\t\t<${ConnectForm}\n\t\t\t\t\t\terror=${this.state.error}\n\t\t\t\t\t\tparams=${this.state.connectParams}\n\t\t\t\t\t\tauth=${this.config.server.auth}\n\t\t\t\t\t\tconnecting=${connecting}\n\t\t\t\t\t\tonSubmit=${this.handleConnectSubmit}\n\t\t\t\t\t/>\n\t\t\t\t</section>\n\t\t\t`;\n\t\t}\n\n\t\tlet bufferHeader = null;\n\t\tif (activeBuffer) {\n\t\t\tlet activeUser = null;\n\t\t\tif (activeBuffer.type == BufferType.NICK) {\n\t\t\t\tactiveUser = activeServer.users.get(activeBuffer.name);\n\t\t\t}\n\n\t\t\tbufferHeader = html`\n\t\t\t\t<section id=\"buffer-header\">\n\t\t\t\t\t<${BufferHeader}\n\t\t\t\t\t\tbuffer=${activeBuffer}\n\t\t\t\t\t\tserver=${activeServer}\n\t\t\t\t\t\tuser=${activeUser}\n\t\t\t\t\t\tisBouncer=${isBouncer}\n\t\t\t\t\t\tbouncerNetwork=${activeBouncerNetwork}\n\t\t\t\t\t\tonChannelClick=${this.handleChannelClick}\n\t\t\t\t\t\tonClose=${() => this.close(activeBuffer)}\n\t\t\t\t\t\tonJoin=${() => this.handleJoinClick(activeBuffer)}\n\t\t\t\t\t\tonAddNetwork=${this.handleAddNetworkClick}\n\t\t\t\t\t\tonManageNetwork=${() => this.handleManageNetworkClick(activeBuffer.server)}\n\t\t\t\t\t/>\n\t\t\t\t</section>\n\t\t\t`;\n\t\t}\n\n\t\tlet memberList = null;\n\t\tif (activeBuffer && activeBuffer.type == BufferType.CHANNEL) {\n\t\t\tmemberList = html`\n\t\t\t\t<section\n\t\t\t\t\t\tid=\"member-list\"\n\t\t\t\t\t\tclass=${this.state.openPanels.memberList ? \"expand\" : \"\"}\n\t\t\t\t>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclass=\"expander\"\n\t\t\t\t\t\tonClick=${this.toggleMemberList}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span></span>\n\t\t\t\t\t\t<span></span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<section id=\"member-list-header\">\n\t\t\t\t\t\t\t${activeBuffer.members.size} users\n\t\t\t\t\t\t</section>\n\t\t\t\t\t\t<${MemberList}\n\t\t\t\t\t\t\tmembers=${activeBuffer.members}\n\t\t\t\t\t\t\tusers=${activeServer.users}\n\t\t\t\t\t\t\tonNickClick=${this.handleNickClick}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</section>\n\t\t\t\t</section>\n\t\t\t`;\n\t\t}\n\n\t\tlet dialog = null;\n\t\tlet dialogData = this.state.dialogData || {};\n\t\tswitch (this.state.dialog) {\n\t\tcase \"network\":\n\t\t\tlet isNew = !dialogData.id;\n\t\t\tlet title = isNew ? \"Add network\" : \"Edit network\";\n\t\t\tdialog = html`\n\t\t\t\t<${Dialog} title=${title} onDismiss=${this.dismissDialog}>\n\t\t\t\t\t<${NetworkForm}\n\t\t\t\t\t\tonSubmit=${this.handleNetworkSubmit}\n\t\t\t\t\t\tonRemove=${this.handleNetworkRemove}\n\t\t\t\t\t\tparams=${dialogData.params}\n\t\t\t\t\t\tautojoin=${dialogData.autojoin}\n\t\t\t\t\t\tisNew=${isNew}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t`;\n\t\t\tbreak;\n\t\tcase \"help\":\n\t\t\tdialog = html`\n\t\t\t\t<${Dialog} title=\"Help\" onDismiss=${this.dismissDialog}>\n\t\t\t\t\t<${Help}/>\n\t\t\t\t</>\n\t\t\t`;\n\t\t\tbreak;\n\t\tcase \"join\":\n\t\t\tdialog = html`\n\t\t\t\t<${Dialog} title=\"Join channel\" onDismiss=${this.dismissDialog}>\n\t\t\t\t\t<${JoinForm} channel=${dialogData.channel} onSubmit=${this.handleJoinSubmit}/>\n\t\t\t\t</>\n\t\t\t`;\n\t\t\tbreak;\n\t\t}\n\n\t\tlet error = null;\n\t\tif (this.state.error) {\n\t\t\terror = html`\n\t\t\t\t<div id=\"error-msg\">\n\t\t\t\t\t${this.state.error}\n\t\t\t\t\t${\" \"}\n\t\t\t\t\t<button onClick=${this.handleDismissError}>×</button>\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}\n\n\t\tlet composerReadOnly = false;\n\t\tif (activeBuffer && activeBuffer.type === BufferType.SERVER) {\n\t\t\tcomposerReadOnly = true;\n\t\t}\n\t\tif (activeServer && activeServer.status !== ServerStatus.REGISTERED) {\n\t\t\tcomposerReadOnly = true;\n\t\t}\n\n\t\treturn html`\n\t\t\t<section\n\t\t\t\t\tid=\"buffer-list\"\n\t\t\t\t\tclass=${this.state.openPanels.bufferList ? \"expand\" : \"\"}\n\t\t\t>\n\t\t\t\t<${BufferList}\n\t\t\t\t\tbuffers=${this.state.buffers}\n\t\t\t\t\tservers=${this.state.servers}\n\t\t\t\t\tbouncerNetworks=${this.state.bouncerNetworks}\n\t\t\t\t\tisBouncer=${isBouncer}\n\t\t\t\t\tactiveBuffer=${this.state.activeBuffer}\n\t\t\t\t\tonBufferClick=${this.handleBufferListClick}\n\t\t\t\t\tonBufferClose=${this.handleBufferListClose}\n\t\t\t\t/>\n\t\t\t\t<button\n\t\t\t\t\tclass=\"expander\"\n\t\t\t\t\tonClick=${this.toggleBufferList}\n\t\t\t\t>\n\t\t\t\t\t<span></span>\n\t\t\t\t\t<span></span>\n\t\t\t\t</button>\n\t\t\t</section>\n\t\t\t${bufferHeader}\n\t\t\t<${ScrollManager}\n\t\t\t\ttarget=${this.buffer}\n\t\t\t\tstickTo=\".logline\"\n\t\t\t\tscrollKey=${this.state.activeBuffer}\n\t\t\t\tonScrollTop=${this.handleBufferScrollTop}\n\t\t\t>\n\t\t\t\t<section id=\"buffer\" ref=${this.buffer} tabindex=\"-1\">\n\t\t\t\t\t<${Buffer}\n\t\t\t\t\t\tbuffer=${activeBuffer}\n\t\t\t\t\t\tserver=${activeServer}\n\t\t\t\t\t\tisBouncer=${isBouncer}\n\t\t\t\t\t\tonChannelClick=${this.handleChannelClick}\n\t\t\t\t\t\tonNickClick=${this.handleNickClick}/>\n\t\t\t\t</section>\n\t\t\t</>\n\t\t\t${memberList}\n\t\t\t<${Composer}\n\t\t\t\tref=${this.composer}\n\t\t\t\treadOnly=${composerReadOnly}\n\t\t\t\tonSubmit=${this.handleComposerSubmit}\n\t\t\t\tautocomplete=${this.autocomplete}\n\t\t\t/>\n\t\t\t${dialog}\n\t\t\t${error}\n\t\t`;\n\t}\n}\n","import { html, render } from \"./lib/index.js\";\nimport App from \"./components/app.js\";\n\nrender(html`<${App}/>`, document.body);\n"],"names":["slice","options","vnodeId","rerenderQueue","defer","prevDebounce","EMPTY_OBJ","EMPTY_ARR","IS_NON_DIMENSIONAL","assign","obj","props","i","removeNode","node","parentNode","removeChild","createElement","type","children","key","ref","normalizedProps","arguments","length","call","defaultProps","createVNode","original","vnode","__","__b","__e","__d","undefined","__h","constructor","Fragment","Component","context","getDomSibling","childIndex","indexOf","sibling","updateParentDomPointers","child","base","enqueueRender","c","push","process","debounceRendering","queue","sort","a","b","some","component","commitQueue","oldVNode","oldDom","parentDom","diff","ownerSVGElement","commitRoot","diffChildren","renderResult","newParentVNode","oldParentVNode","globalContext","isSvg","excessDomChildren","isHydrating","j","childVNode","newDom","firstChildDom","refs","oldChildren","oldChildrenLength","Array","isArray","reorderChildren","placeChild","unmount","applyRef","tmp","nextDom","sibDom","outer","appendChild","nextSibling","insertBefore","setStyle","style","value","setProperty","test","dom","name","oldValue","useCapture","o","cssText","replace","toLowerCase","_listeners","addEventListener","eventProxyCapture","eventProxy","removeEventListener","e","setAttribute","removeAttribute","event","newVNode","isNew","oldProps","oldState","snapshot","clearProcessingException","newProps","provider","componentContext","newType","contextType","prototype","render","doRender","sub","state","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","forEach","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","oldHtml","newHtml","nodeType","localName","document","createTextNode","createElementNS","is","data","childNodes","dangerouslySetInnerHTML","attributes","innerHTML","hydrate","diffProps","checked","diffElementNodes","diffed","root","cb","current","parentVNode","skipRemove","r","componentWillUnmount","this","replaceNode","firstChild","error","ctor","handled","getDerivedStateFromError","setState","componentDidCatch","update","callback","s","forceUpdate","Promise","then","bind","resolve","setTimeout","$1b7159333d627640$var$n","t","u","h","p","Object","apply","$1b7159333d627640$var$t","Map","$89cdcf39f972b8da$var$State","token","jr","jd","accepts","tt","input","tokenOrState","nextState","$89cdcf39f972b8da$var$makeState","templateState","$89cdcf39f972b8da$var$takeT","append","$89cdcf39f972b8da$var$makeAcceptingState","$89cdcf39f972b8da$var$makeT","startState","$89cdcf39f972b8da$var$makeRegexT","regex","_nextState","$89cdcf39f972b8da$var$makeMultiT","chars","$89cdcf39f972b8da$var$makeBatchT","transitions","$89cdcf39f972b8da$var$makeChainT","str","endState","defaultStateFactory","len","$89cdcf39f972b8da$var$text","freeze","__proto__","DOMAIN","LOCALHOST","TLD","NUM","PROTOCOL","MAILTO","WS","NL","OPENBRACE","OPENBRACKET","OPENANGLEBRACKET","OPENPAREN","CLOSEBRACE","CLOSEBRACKET","CLOSEANGLEBRACKET","CLOSEPAREN","AMPERSAND","APOSTROPHE","ASTERISK","AT","BACKSLASH","BACKTICK","CARET","COLON","COMMA","DOLLAR","DOT","EQUALS","EXCLAMATION","HYPHEN","PERCENT","PIPE","PLUS","POUND","QUERY","QUOTE","SEMI","SLASH","TILDE","UNDERSCORE","SYM","$89cdcf39f972b8da$var$tlds","$fde172b5660f283f$export$c0bb0b647f701bb5","get","set","n","l","$a67877b0b195a2c0$export$c8a8987d4410bf2d","$d692f81b97e105d0$var$tagEscapeMap","$d692f81b97e105d0$var$tagUnescapeMap","fromEntries","entries","map","from","to","$d692f81b97e105d0$export$ede4b2e0172bbdb1","tags","split","parts","k","v","seq","$d692f81b97e105d0$var$unescapeTag","endsWith","$d692f81b97e105d0$export$c27de7dba30c634a","String","ch","join","$d692f81b97e105d0$export$3059e96a5fe807c3","host","user","$d692f81b97e105d0$export$f2f615077a189f21","msg","prefix","command","params","startsWith","Error","$d692f81b97e105d0$export$4812b7165edd26af","allowedPrefixes","$d692f81b97e105d0$var$alphaNum","RegExp","$d692f81b97e105d0$var$isWordBoundary","$d692f81b97e105d0$export$e6127cc7fe7395c3","cmd","$d692f81b97e105d0$export$3ae94a2503e890a1","date","getUTCFullYear","toString","padStart","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","$d692f81b97e105d0$export$60937d95e568734f","ctcp","text","param","toUpperCase","$d692f81b97e105d0$export$eb7e580f67456e52","tokens","changed","tok","delete","esc","hex","fromCharCode","parseInt","$d692f81b97e105d0$export$39aea81548242927","ASCII","out","RFC1459","RFC1459Strict","byName","$d692f81b97e105d0$var$mapIterator","it","f","next","Symbol","iterator","$d692f81b97e105d0$var$createIterator","done","$d692f81b97e105d0$export$6296a711f00288b1","caseMap","iterable","cm","size","has","kv","values","keys","$d692f81b97e105d0$export$3b27c9ff97cdb350","sep","memberships","mode","$d692f81b97e105d0$export$f4751a564f6d84a3","batch","parent","$d692f81b97e105d0$export$64ec8def5466157c","realname","nick","$d692f81b97e105d0$export$4b3d9a5bae55976","loc","enttype","flags","entity","decodeURIComponent","$ed5bd928f1a535a8$var$permanentCaps","$ed5bd928f1a535a8$var$WHOX_FIELDS","channel","username","hostname","server","account","$ed5bd928f1a535a8$var$lastLabel","$ed5bd928f1a535a8$var$lastWhoxToken","EventTarget","DISCONNECTED","CONNECTING","REGISTERING","REGISTERED","status","$ed5bd928f1a535a8$export$2e2bcd8739ae039","Status","serverPrefix","supportsCap","availableCaps","enabledCaps","isupport","ws","url","pass","saslPlain","saslExternal","bouncerNetwork","batches","autoReconnect","reconnectTimeoutID","pingIntervalID","pendingCmds","WHO","CHATHISTORY","monitored","pendingLists","whoxQueries","super","reconnect","disconnect","console","log","setStatus","WebSocket","err","dispatchEvent","CustomEvent","detail","handleOpen","handleMessage","code","navigator","onLine","info","clearTimeout","$ed5bd928f1a535a8$var$RECONNECT_DELAY_SEC","handleOnline","window","setPingInterval","close","send","pushPendingList","endPendingList","list","debug","msgBatch","deleteBatch","setCaseMapping","targets","maxMonitorTargets","handleCap","handleAuthenticate","newNick","isMyNick","enter","message","who","mask","fields","match","promise","roundtrip","parseWhoReply","finally","catch","last","whois","target","targetCM","reply","addAvailableCaps","supportsSASL","mech","saslCap","includes","requestCaps","extra","reqCaps","cap","subCmd","args","capEnd","challengeStr","respStr","btoa","password","$d692f81b97e105d0$var$formatPrefix","$d692f81b97e105d0$export$25868d1e8e76735f","isServer","isChannel","sec","clearInterval","setInterval","label","reject","removeEventListeners","result","msgLabel","$d692f81b97e105d0$export$ec840f96613effe2","handleStatus","fetchBatch","batchType","batchName","messages","roundtripChatHistory","chatHistoryPageSize","pageSize","fetchHistoryBefore","before","limit","max","Math","min","more","fetchHistoryBetween","after","time","fetchHistoryTargets","t1","t2","latestMessage","listBouncerNetworks","networks","assert","id","Infinity","monitor","unmonitor","createBouncerNetwork","attrs","onClick","links","$89cdcf39f972b8da$exports","find","isLink","substring","start","href","defaults","defaultProtocol","registerCustomProtocol","registerPlugin","scanner","parser","utils","START_STATE","Channel","createTokenClass","toHref","HASH_STATE","CHAN_STATE","CHAN_DIVIDER_STATE","$62a36b31f950670f$var$isDigit","$62a36b31f950670f$export$6a0f863afc2134d8","$bf517586289ff475$export$a9b603917c4d9863","$bf517586289ff475$export$ac0b13ba2bbce4d5","$bf517586289ff475$export$9be0a2424da959ae","NONE","MESSAGE","HIGHLIGHT","compare","priority","union","$bf517586289ff475$export$c49c54eaac29b59a","$bf517586289ff475$export$756ff03d5af00811","encodeURIComponent","$bf517586289ff475$export$68f4a081062fa9eb","$bf517586289ff475$export$64b0f097aebd4e10","buf","$bf517586289ff475$export$8499bd1ed7c872c2","bufURL","msgid","$bf517586289ff475$export$53e73e095c2ac1e2","isBouncer","netName","$bf517586289ff475$var$updateState","updater","updated","$bf517586289ff475$var$isServerBuffer","$bf517586289ff475$var$compareBuffers","$bf517586289ff475$var$lastServerID","$bf517586289ff475$var$lastBufferID","$bf517586289ff475$var$lastMessageKey","$bf517586289ff475$export$7254cc27399e90bd","create","servers","buffers","activeBuffer","updateServer","updateBuffer","getBuffer","getActiveServerID","serverID","nameCM","createServer","users","createBuffer","client","bufferList","serverInfo","joined","topic","members","unread","prevReadReceipt","updateUser","version","namreply","member","away","operator","offline","awayMessage","prefixByMode","membership","chanmodes","typeByMode","d","change","plusMinus","add","modeType","arg","$d692f81b97e105d0$export$6115b92b9c2241a7","letter","prefixPrivs","$bf517586289ff475$var$updateMembership","target1","target2","addMessage","bufID","concat","other","splice","$bf517586289ff475$var$insertMessage","$9ff44f450a8ce80b$var$Item","load","localStorage","getItem","JSON","parse","put","setItem","stringify","removeItem","$9ff44f450a8ce80b$export$3b637ec8b5dd5146","$9ff44f450a8ce80b$export$a9ec709c82e011a4","$9ff44f450a8ce80b$var$rawReceipts","$9ff44f450a8ce80b$export$b2c39adbd5ffd190","m","$9ff44f450a8ce80b$export$a143d493d941bafc","raw","save","prev","clear","$8b405ec9cb7b091f$var$names","$897ae0f8d6d1a9aa$var$Nick","colorIndex","hash","charCodeAt","$897ae0f8d6d1a9aa$var$djb2","preventDefault","$897ae0f8d6d1a9aa$var$Timestamp","timestamp","getHours","getMinutes","getSeconds","$a67877b0b195a2c0$export$16fa2f45be04daa8","nextProps","buffer","onNickClick","onChannelClick","createNick","lineClass","content","$d4172f0e810a7750$export$2e2bcd8739ae039","suffix","$8b405ec9cb7b091f$export$2e2bcd8739ae039","isHighlight","invitee","Date","toLocaleString","msgs","byCommand","JOIN","PART","QUIT","NICK","first","action","nicks","Set","plural","$897ae0f8d6d1a9aa$var$createNickList","lastMsg","firstDate","lastDate","$897ae0f8d6d1a9aa$var$notificationsSupported","Notification","permission","$897ae0f8d6d1a9aa$var$NotificationNagger","nag","handleClick","shouldNag","requestPermission","location","origin","pathname","registerProtocolHandler","bouncerName","getTime","getFullYear","getMonth","DD","getDate","YYYY","MM","$897ae0f8d6d1a9aa$var$UnreadSeparator","$2d3a05f103672668$var$BufferItem","classes","active","button","onClose","$2d3a05f103672668$export$2e2bcd8739ae039","items","$5fc0e4871ae5316c$var$UserStatus","$5fc0e4871ae5316c$var$NickStatus","handleCloseClick","handleJoinClick","onJoin","description","actions","onManageNetwork","onAddNetwork","$dd810d06f3dbf473$var$MemberItem","membclass","title","$dd810d06f3dbf473$var$sortMembers","nickA","membA","nickB","membB","rememberMe","autojoin","nickInput","handleChange","handleSubmit","autoconnect","connecting","auth","trim","onSubmit","focus","disabled","serverURL","$cd6f48f69b3f705c$var$getSiblingBuffer","delta","bufList","findIndex","$cd6f48f69b3f705c$export$63ce3c18bd0f1276","altKey","execute","app","setReceipt","clients","bufferStore","firstServerBuffer","switchBuffer","$cee56f366cc8d180$var$getActiveClient","$cee56f366cc8d180$var$getActiveChannel","$cee56f366cc8d180$var$setUserHostMode","activeChannel","$cee56f366cc8d180$var$markServerBufferUnread","setBufferState","$cee56f366cc8d180$var$join","usage","open","$cee56f366cc8d180$var$kick","$cee56f366cc8d180$var$givemode","$cee56f366cc8d180$export$2e2bcd8739ae039","ban","deop","devoice","help","openHelp","invite","kick","kickban","lusers","me","$cee56f366cc8d180$var$getActiveTarget","privmsg","motd","notice","op","part","reason","query","quiet","quit","quote","setname","newRealname","stats","unban","unquiet","unvoice","voice","whowas","$f3dfb267d84cc0a4$var$KeyBindingsHelp","binding","ctrlKey","psuh","$4dd28c0b6df0f1be$var$defaultParams","port","nickname","prevParams","removeNetwork","onRemove","textInput","lastAutocomplete","handleInput","handleInputKeyDown","handleWindowKeyDown","handleWindowPaste","readOnly","blur","autocomplete","selectionStart","selectionEnd","carretPos","wordStart","wordEnd","word","replacements","replIndex","shiftKey","repl","activeElement","body","tagName","metaKey","clipboardData","getData","stopImmediatePropagation","setRangeText","className","$81f752ec51577e3f$var$store","handleScroll","isAtBottom","scrollTop","scrollHeight","offsetHeight","saveScrollPosition","sticky","querySelectorAll","stickTo","stickToKey","el","offsetTop","dataset","scrollKey","restoreScrollPosition","querySelector","scrollIntoView","block","onScrollTop","prevProps","handleBackdropClick","handleKeyDown","dismiss","onDismiss","autofocus","$b9ab812e80453522$var$baseConfig","$b9ab812e80453522$var$configPromise","fetch","resp","ok","json","statusText","config","$b9ab812e80453522$var$lastErrorID","$a67877b0b195a2c0$export$b3890eb0ae9dca99","connectParams","bouncerNetworks","connectForm","loading","dialog","dialogData","openPanels","memberList","endOfHistory","receipts","composer","switchToChannel","autoOpenURL","handleConnectSubmit","handleJoinSubmit","handleBufferListClick","handleBufferListClose","toggleBufferList","toggleMemberList","handleComposerSubmit","handleChannelClick","handleNickClick","handleBufferScrollTop","dismissDialog","handleAddNetworkClick","handleNetworkSubmit","handleNetworkRemove","handleDismissError","saveReceipts","delay","timeout","$b9ab812e80453522$var$debounce","handleConfig","queryParams","search","pair","$b9ab812e80453522$var$parseQueryString","channels","connect","showError","dismissError","setServerState","syncBufferUnread","stored","getReceipt","whoUserBuffer","hasReceipt","receipt","latestReceipt","delivery","bufName","left","right","$d692f81b97e105d0$export$fdd47ba7a4ecfeff","$d692f81b97e105d0$export$8b29011f3cb5e124","isDelivered","isRead","msgUnread","kind","notif","$b9ab812e80453522$var$showNotification","requireInteraction","tag","comand","proto","protocol","path","$b9ab812e80453522$var$fillConnectParams","errorID","ping","serverFromBouncerNetwork","bouncerNetworkID","routeMessage","affectedBuffers","chatHistoryBatch","destBuffers","lastReceipt","now","fetchBacklog","bouncerNetID","serverHost","openURL","findBouncerNetIDByHost","lastIndexOf","$b9ab812e80453522$var$splitHostPort","openDialog","disconnectAll","executeCommand","closeBufferList","closeMemberList","fromList","item","chanNames","handleManageNetworkClick","tls","byKey","candidates","filter","$cd6f48f69b3f705c$export$de27182ff8187d6c","activeServer","activeBouncerNetwork","activeClient","$b682ea6791f01f67$export$2e2bcd8739ae039","bufferHeader","activeUser"],"version":3,"file":"index.d445c23a.js.map"}